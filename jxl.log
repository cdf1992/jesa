2020-09-03 15:41:36,350 [INFO ] com.alibaba.druid.pool.DruidDataSource  - {dataSource-1} inited
2020-09-03 15:41:37,235 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 1组
2020-09-03 15:41:43,373 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 1组
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - Welcome to Jes WebApplication Platform.
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - Jes location:D:/JES_WORK/jesa/src/main/webapp/
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - ===============Runtime information:===========================
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.runtime.name=Java(TM) SE Runtime Environment
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.boot.library.path=D:\jdk8\jre\bin
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.version=25.151-b12
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.vendor=Oracle Corporation
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vendor.url=http://java.oracle.com/
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - path.separator=;
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.name=Java HotSpot(TM) 64-Bit Server VM
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - file.encoding.pkg=sun.io
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.country=CN
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.script=
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.java.launcher=SUN_STANDARD
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.os.patch.level=Service Pack 1
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PID=9528
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.specification.name=Java Virtual Machine Specification
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.dir=D:\JES_WORK\jesa
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.runtime.version=1.8.0_151-b12
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.endorsed.dirs=D:\jdk8\jre\lib\endorsed
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - os.arch=amd64
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.io.tmpdir=C:\Users\cdf\AppData\Local\Temp\
2020-09-03 15:41:43,470 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - line.separator=

2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.specification.vendor=Oracle Corporation
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.variant=
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - os.name=Windows 7
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.jnu.encoding=GBK
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - spring.beaninfo.ignore=true
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.library.path=D:\jdk8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\jdk8\jre\bin;D:/jdk8/bin/../jre/bin/server;D:/jdk8/bin/../jre/bin;D:/jdk8/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;E:\oracle\product\11.2.0\dbhome_2\bin;E:\oracle\product\11.2.0\dbhome_1\bin;D:\jdk8\bin;E:\maven\apache-maven-3.6.3\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Common Files\Lenovo;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\ProgramData\Lenovo\ReadyApps;C:\Program Files (x86)\税务证书应用客户端;F:\svn\bin;D:\tools\redis\;C:\Users\cdf\AppData\Local\BypassRuntm;E:\zhuabao\bin;E:\eclipse\eclipse-jee-neon-1a-win32-x86_64_base\eclipse;;.
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.specification.name=Java Platform API Specification
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.class.version=52.0
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.management.compiler=HotSpot 64-Bit Tiered Compilers
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - os.version=6.1
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.home=C:\Users\cdf
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - catalina.useNaming=false
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.timezone=Asia/Shanghai
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.awt.printerjob=sun.awt.windows.WPrinterJob
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - file.encoding=UTF-8
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.specification.version=1.8
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - catalina.home=C:\Users\cdf\AppData\Local\Temp\tomcat.5327547548211074294.8080
2020-09-03 15:41:43,471 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.class.path=D:\JES_WORK\jesa\target\classes;D:\JES_WORK\jesa\lib\jes.beehive-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.bsys-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.dis2-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.dna-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.ext-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.owl-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.partner-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.queen-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.sessionKeeper-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.taxExt-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.toolkit-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.vine-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jesa.home-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jesa.login-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jesa.main-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jesa.main3-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes-api-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.vms_hf-1.0-SNAPSHOT.jar;D:\JES_WORK\jesa\lib\jes.vms-1.0-SNAPSHOT.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.1.RELEASE\spring-boot-starter-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.3.1.RELEASE\spring-boot-starter-logging-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\cdf\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\cdf\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.3\log4j-to-slf4j-2.13.3.jar;C:\Users\cdf\.m2\repository\org\apache\logging\log4j\log4j-api\2.13.3\log4j-api-2.13.3.jar;C:\Users\cdf\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\cdf\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\cdf\.m2\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\cdf\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\cdf\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-core\5.2.7.RELEASE\spring-core-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-jcl\5.2.7.RELEASE\spring-jcl-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.3.1.RELEASE\spring-boot-starter-web-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.3.1.RELEASE\spring-boot-starter-json-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;C:\Users\cdf\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;C:\Users\cdf\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;C:\Users\cdf\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;C:\Users\cdf\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;C:\Users\cdf\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.1.RELEASE\spring-boot-starter-tomcat-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.36\tomcat-embed-core-9.0.36.jar;C:\Users\cdf\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.36\tomcat-embed-websocket-9.0.36.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-web\5.2.7.RELEASE\spring-web-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-beans\5.2.7.RELEASE\spring-beans-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-webmvc\5.2.7.RELEASE\spring-webmvc-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-context\5.2.7.RELEASE\spring-context-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-expression\5.2.7.RELEASE\spring-expression-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.1.RELEASE\spring-boot-autoconfigure-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot\2.3.1.RELEASE\spring-boot-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\hibernate\hibernate-core\5.4.17.Final\hibernate-core-5.4.17.Final.jar;C:\Users\cdf\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\cdf\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\cdf\.m2\repository\net\bytebuddy\byte-buddy\1.10.11\byte-buddy-1.10.11.jar;C:\Users\cdf\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\cdf\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\cdf\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\cdf\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\cdf\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\cdf\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\cdf\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\cdf\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\cdf\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\cdf\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\cdf\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\cdf\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.3.1.RELEASE\spring-boot-starter-validation-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;C:\Users\cdf\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\cdf\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\cdf\.m2\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.1\mybatis-spring-boot-starter-2.1.1.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.1.RELEASE\spring-boot-starter-jdbc-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-jdbc\5.2.7.RELEASE\spring-jdbc-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.1\mybatis-spring-boot-autoconfigure-2.1.1.jar;C:\Users\cdf\.m2\repository\org\mybatis\mybatis\3.5.3\mybatis-3.5.3.jar;C:\Users\cdf\.m2\repository\org\mybatis\mybatis-spring\2.0.3\mybatis-spring-2.0.3.jar;C:\Users\cdf\.m2\repository\org\springframework\boot\spring-boot-starter-mail\2.3.1.RELEASE\spring-boot-starter-mail-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-context-support\5.2.7.RELEASE\spring-context-support-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\com\sun\mail\jakarta.mail\1.6.5\jakarta.mail-1.6.5.jar;C:\Users\cdf\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\cdf\.m2\repository\com\ibm\db2\jcc\11.5.0.0\jcc-11.5.0.0.jar;C:\Users\cdf\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\7.4.1.jre8\mssql-jdbc-7.4.1.jre8.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\ojdbc8\19.3.0.0\ojdbc8-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\ucp\19.3.0.0\ucp-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\oraclepki\19.3.0.0\oraclepki-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\osdt_cert\19.3.0.0\osdt_cert-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\osdt_core\19.3.0.0\osdt_core-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\simplefan\19.3.0.0\simplefan-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\ons\19.3.0.0\ons-19.3.0.0.jar;C:\Users\cdf\.m2\repository\com\oracle\ojdbc\orai18n\19.3.0.0\orai18n-19.3.0.0.jar;C:\Users\cdf\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\cdf\.m2\repository\org\xerial\sqlite-jdbc\3.31.1\sqlite-jdbc-3.31.1.jar;C:\Users\cdf\.m2\repository\com\itextpdf\tool\xmlworker\5.5.9\xmlworker-5.5.9.jar;C:\Users\cdf\.m2\repository\org\apache\poi\poi-scratchpad\4.1.2\poi-scratchpad-4.1.2.jar;C:\Users\cdf\.m2\repository\org\apache\poi\poi\4.1.2\poi-4.1.2.jar;C:\Users\cdf\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\cdf\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\cdf\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\cdf\.m2\repository\org\apache\poi\poi-ooxml\4.1.2\poi-ooxml-4.1.2.jar;C:\Users\cdf\.m2\repository\org\apache\poi\poi-ooxml-schemas\4.1.2\poi-ooxml-schemas-4.1.2.jar;C:\Users\cdf\.m2\repository\org\apache\xmlbeans\xmlbeans\3.1.0\xmlbeans-3.1.0.jar;C:\Users\cdf\.m2\repository\org\apache\commons\commons-compress\1.19\commons-compress-1.19.jar;C:\Users\cdf\.m2\repository\com\github\virtuald\curvesapi\1.06\curvesapi-1.06.jar;C:\Users\cdf\.m2\repository\fr\opensagres\xdocreport\org.apache.poi.xwpf.converter.xhtml\1.0.6\org.apache.poi.xwpf.converter.xhtml-1.0.6.jar;C:\Users\cdf\.m2\repository\fr\opensagres\xdocreport\org.apache.poi.xwpf.converter.core\1.0.6\org.apache.poi.xwpf.converter.core-1.0.6.jar;C:\Users\cdf\.m2\repository\org\apache\poi\ooxml-schemas\1.1\ooxml-schemas-1.1.jar;C:\Users\cdf\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\cdf\.m2\repository\commons-fileupload\commons-fileupload\1.4\commons-fileupload-1.4.jar;C:\Users\cdf\.m2\repository\commons-io\commons-io\2.7\commons-io-2.7.jar;C:\Users\cdf\.m2\repository\commons-net\commons-net\3.6\commons-net-3.6.jar;C:\Users\cdf\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\cdf\.m2\repository\commons-pool\commons-pool\1.6\commons-pool-1.6.jar;C:\Users\cdf\.m2\repository\com\alibaba\druid\1.0.16\druid-1.0.16.jar;D:\jdk8\lib\jconsole.jar;D:\jdk8\lib\tools.jar;C:\Users\cdf\.m2\repository\p6spy\p6spy\3.6.0\p6spy-3.6.0.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-all\1.13\batik-all-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-anim\1.13\batik-anim-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-shared-resources\1.13\batik-shared-resources-1.13.jar;C:\Users\cdf\.m2\repository\xml-apis\xml-apis-ext\1.3.04\xml-apis-ext-1.3.04.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-awt-util\1.13\batik-awt-util-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\xmlgraphics-commons\2.4\xmlgraphics-commons-2.4.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-bridge\1.13\batik-bridge-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-codec\1.13\batik-codec-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-constants\1.13\batik-constants-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-css\1.13\batik-css-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-dom\1.13\batik-dom-1.13.jar;C:\Users\cdf\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-ext\1.13\batik-ext-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-extension\1.13\batik-extension-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-gui-util\1.13\batik-gui-util-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-gvt\1.13\batik-gvt-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-i18n\1.13\batik-i18n-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-parser\1.13\batik-parser-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-rasterizer-ext\1.13\batik-rasterizer-ext-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-rasterizer\1.13\batik-rasterizer-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-script\1.13\batik-script-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-slideshow\1.13\batik-slideshow-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-squiggle-ext\1.13\batik-squiggle-ext-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-squiggle\1.13\batik-squiggle-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-svg-dom\1.13\batik-svg-dom-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-svgbrowser\1.13\batik-svgbrowser-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-svggen\1.13\batik-svggen-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-svgpp\1.13\batik-svgpp-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-svgrasterizer\1.13\batik-svgrasterizer-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-swing\1.13\batik-swing-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-transcoder\1.13\batik-transcoder-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-util\1.13\batik-util-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-ttf2svg\1.13\batik-ttf2svg-1.13.jar;C:\Users\cdf\.m2\repository\org\apache\xmlgraphics\batik-xml\1.13\batik-xml-1.13.jar;C:\Users\cdf\.m2\repository\xalan\xalan\2.7.2\xalan-2.7.2.jar;C:\Users\cdf\.m2\repository\xalan\serializer\2.7.2\serializer-2.7.2.jar;C:\Users\cdf\.m2\repository\com\jcraft\jsch\0.1.55\jsch-0.1.55.jar;C:\Users\cdf\.m2\repository\com\github\jsqlparser\jsqlparser\0.9.1\jsqlparser-0.9.1.jar;C:\Users\cdf\.m2\repository\org\bouncycastle\bcprov-jdk15on\1.50\bcprov-jdk15on-1.50.jar;C:\Users\cdf\.m2\repository\org\bouncycastle\bcpkix-jdk15on\1.50\bcpkix-jdk15on-1.50.jar;C:\Users\cdf\.m2\repository\com\google\zxing\core\3.3.0\core-3.3.0.jar;C:\Users\cdf\.m2\repository\com\google\zxing\javase\3.3.0\javase-3.3.0.jar;C:\Users\cdf\.m2\repository\com\beust\jcommander\1.48\jcommander-1.48.jar;C:\Users\cdf\.m2\repository\com\github\jai-imageio\jai-imageio-core\1.3.1\jai-imageio-core-1.3.1.jar;C:\Users\cdf\.m2\repository\org\apache\mina\mina-core\2.1.3\mina-core-2.1.3.jar;C:\Users\cdf\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\cdf\.m2\repository\org\aspectj\aspectjrt\1.9.5\aspectjrt-1.9.5.jar;C:\Users\cdf\.m2\repository\org\apache\ant\ant\1.10.8\ant-1.10.8.jar;C:\Users\cdf\.m2\repository\org\apache\ant\ant-launcher\1.10.8\ant-launcher-1.10.8.jar;C:\Users\cdf\.m2\repository\org\jdom\jdom\1.1.3\jdom-1.1.3.jar;C:\Users\cdf\.m2\repository\net\sourceforge\jexcelapi\jxl\2.6.3\jxl-2.6.3.jar;C:\Users\cdf\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\cdf\.m2\repository\com\alibaba\fastjson\1.2.9\fastjson-1.2.9.jar;C:\Users\cdf\.m2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;C:\Users\cdf\.m2\repository\commons-beanutils\commons-beanutils\1.8.0\commons-beanutils-1.8.0.jar;C:\Users\cdf\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\cdf\.m2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;C:\Users\cdf\.m2\repository\axis\axis\1.4\axis-1.4.jar;C:\Users\cdf\.m2\repository\org\apache\axis\axis-jaxrpc\1.4\axis-jaxrpc-1.4.jar;C:\Users\cdf\.m2\repository\org\apache\axis\axis-saaj\1.4\axis-saaj-1.4.jar;C:\Users\cdf\.m2\repository\axis\axis-wsdl4j\1.5.1\axis-wsdl4j-1.5.1.jar;C:\Users\cdf\.m2\repository\commons-discovery\commons-discovery\0.2\commons-discovery-0.2.jar;C:\Users\cdf\.m2\repository\org\reflections\reflections\0.9.12\reflections-0.9.12.jar;C:\Users\cdf\.m2\repository\com\google\guava\guava\29.0-jre\guava-29.0-jre.jar;C:\Users\cdf\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\cdf\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\cdf\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\cdf\.m2\repository\org\checkerframework\checker-qual\2.11.1\checker-qual-2.11.1.jar;C:\Users\cdf\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\cdf\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\cdf\.m2\repository\com\itextpdf\itext-asian\5.1.1\itext-asian-5.1.1.jar;D:\work_space\such_jes_work\vms\lib\itextpdf-5.1.3_1.jar;D:\work_space\such_jes_work\vms\lib\bcprov-jdk15-1.46.jar;C:\Users\cdf\.m2\repository\net\sourceforge\javacsv\javacsv\2.0\javacsv-2.0.jar;C:\Users\cdf\.m2\repository\commons-vfs\commons-vfs\1.0\commons-vfs-1.0.jar;C:\Users\cdf\.m2\repository\org\apache\commons\commons-csv\1.8\commons-csv-1.8.jar;D:\work_space\such_jes_work\owl\lib\kettle-core-4.4.0-stable.jar;D:\work_space\such_jes_work\owl\lib\kettle-engine-4.4.0-stable.jar;D:\work_space\such_jes_work\owl\lib\kettle-db-4.4.0-stable.jar;C:\Users\cdf\.m2\repository\org\slf4j\slf4j-log4j12\1.7.30\slf4j-log4j12-1.7.30.jar;C:\Users\cdf\.m2\repository\commons-codec\commons-codec\1.14\commons-codec-1.14.jar;C:\Users\cdf\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\cdf\.m2\repository\joda-time\joda-time\2.9.9\joda-time-2.9.9.jar;C:\Users\cdf\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\cdf\.m2\repository\org\springframework\data\spring-data-redis\2.3.1.RELEASE\spring-data-redis-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\data\spring-data-keyvalue\2.3.1.RELEASE\spring-data-keyvalue-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\data\spring-data-commons\2.3.1.RELEASE\spring-data-commons-2.3.1.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-tx\5.2.7.RELEASE\spring-tx-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-oxm\5.2.7.RELEASE\spring-oxm-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-aop\5.2.7.RELEASE\spring-aop-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\springframework\spring-aspects\5.2.7.RELEASE\spring-aspects-5.2.7.RELEASE.jar;C:\Users\cdf\.m2\repository\org\aspectj\aspectjweaver\1.9.5\aspectjweaver-1.9.5.jar;C:\Users\cdf\.m2\repository\redis\clients\jedis\3.3.0\jedis-3.3.0.jar;C:\Users\cdf\.m2\repository\org\apache\commons\commons-pool2\2.8.0\commons-pool2-2.8.0.jar;C:\Users\cdf\.m2\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.name=cdf
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.specification.version=1.8
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.java.command=jes.JesaApplication
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.home=D:\jdk8\jre
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.arch.data.model=64
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - user.language=zh
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.specification.vendor=Oracle Corporation
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - awt.toolkit=sun.awt.windows.WToolkit
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vm.info=mixed mode
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.version=1.8.0_151
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.ext.dirs=D:\jdk8\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.boot.class.path=D:\jdk8\jre\lib\resources.jar;D:\jdk8\jre\lib\rt.jar;D:\jdk8\jre\lib\sunrsasign.jar;D:\jdk8\jre\lib\jsse.jar;D:\jdk8\jre\lib\jce.jar;D:\jdk8\jre\lib\charsets.jar;D:\jdk8\jre\lib\jfr.jar;D:\jdk8\jre\classes
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.awt.headless=true
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vendor=Oracle Corporation
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - catalina.base=C:\Users\cdf\AppData\Local\Temp\tomcat.5327547548211074294.8080
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - file.separator=\
2020-09-03 15:41:43,472 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - java.vendor.url.bug=http://bugreport.sun.com/bugreport/
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.io.unicode.encoding=UnicodeLittle
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.cpu.endian=little
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.desktop=windows
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - sun.cpu.isalist=amd64
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - ==============Runtime env information:========================
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PATH=D:\jdk8\jre\bin;D:/jdk8/bin/../jre/bin/server;D:/jdk8/bin/../jre/bin;D:/jdk8/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;E:\oracle\product\11.2.0\dbhome_2\bin;E:\oracle\product\11.2.0\dbhome_1\bin;D:\jdk8\bin;E:\maven\apache-maven-3.6.3\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Common Files\Lenovo;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\ProgramData\Lenovo\ReadyApps;C:\Program Files (x86)\税务证书应用客户端;F:\svn\bin;D:\tools\redis\;C:\Users\cdf\AppData\Local\BypassRuntm;E:\zhuabao\bin;E:\eclipse\eclipse-jee-neon-1a-win32-x86_64_base\eclipse;
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROCESSOR_LEVEL=6
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - SYSTEMDRIVE=C:
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - FP_NO_HOST_CHECK=NO
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - SESSIONNAME=Console
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - ALLUSERSPROFILE=C:\ProgramData
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - TVTCOMMON=C:\Program Files (x86)\Common Files\Lenovo
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROCESSOR_ARCHITECTURE=AMD64
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - TNS_ADMIN=E:\PLSQL\instantclient_11_2
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - MAVEN_HOME=E:\maven\apache-maven-3.6.3
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROGRAMFILES=C:\Program Files
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - TVT=C:\Program Files (x86)\Lenovo
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - SWSHARE=C:\SWSHARE
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PSMODULEPATH=C:\Windows\system32\WindowsPowerShell\v1.0\Modules\
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROGRAMDATA=C:\ProgramData
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - USERNAME=cdf
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - CONFIGSETROOT=C:\Windows\ConfigSetRoot
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - WINDIR=C:\Windows
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - HOMEPATH=\Users\cdf
2020-09-03 15:41:43,473 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 60 Stepping 3, GenuineIntel
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - WINDOWS_TRACING_LOGFILE=C:\BVTBin\Tests\installpackage\csilogfile.log
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PUBLIC=C:\Users\Public
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - OPENSSL_CONF=D:\openssl\OpenSSL-Win64\bin\openssl.cfg
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - LOCALAPPDATA=C:\Users\cdf\AppData\Local
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - EASYPLUSSDK="C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin"
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - COMMONPROGRAMFILES(X86)=C:\Program Files (x86)\Common Files
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - USERDOMAIN=cdf-PC
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - LOGONSERVER=\\CDF-PC
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - JAVA_HOME=D:\jdk8
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROMPT=$P$G
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROGRAMFILES(X86)=C:\Program Files (x86)
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - WINDOWS_TRACING_FLAGS=3
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - APPDATA=C:\Users\cdf\AppData\Roaming
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - READYAPPS=C:\ProgramData\Lenovo\ReadyApps
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROGRAMW6432=C:\Program Files
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - SYSTEMROOT=C:\Windows
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - OS=Windows_NT
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - COMMONPROGRAMW6432=C:\Program Files\Common Files
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - COMPUTERNAME=CDF-PC
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - COMMONPROGRAMFILES=C:\Program Files\Common Files
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - COMSPEC=C:\Windows\system32\cmd.exe
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - PROCESSOR_REVISION=3c03
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - NLS_LANG=SIMPLIFIED CHINESE_CHINA.ZHS16GBK
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - COMMPATH=C:\Program Files\Lenovo\Communications Utility
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - TEMP=C:\Users\cdf\AppData\Local\Temp
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - HOMEDRIVE=C:
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - USERPROFILE=C:\Users\cdf
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - TMP=C:\Users\cdf\AppData\Local\Temp
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - NUMBER_OF_PROCESSORS=8
2020-09-03 15:41:43,474 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - Welcome to Jes WebApplication Platform.
2020-09-03 15:41:43,475 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - ==========================进行扩展类加载=====================================
2020-09-03 15:41:43,475 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - extends=====C:\Users\cdf\jes\ext.lib\
2020-09-03 15:41:43,475 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - local=====D:\JES_WORK\jesa\src\main\webapp\\WEB-INF\lib\
2020-09-03 15:41:43,541 [INFO ] jes.utils.FileUtil  - JES的TEMP_PATH_NAME:[C:\Users\cdf\jes\385346143_temp\].
2020-09-03 15:41:43,541 [INFO ] jes.pub.ext.spring.JesContextLoaderListener  - ==========================完成扩展类加载=====================================
2020-09-03 15:41:43,592 [INFO ] jes.subsystem.web.f.RequestInitFilter  - init(FilterConfig)
2020-09-03 15:41:43,592 [INFO ] jes.subsystem.web.f.RequestInitFilter  - init(FilterConfig)  myWebAppName:/jes
2020-09-03 15:41:43,592 [INFO ] jes.subsystem.web.f.RequestInitFilter  - init(FilterConfig)  myRealPath:D:\JES_WORK\jesa\src\main\webapp\
2020-09-03 15:41:44,158 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,158 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,160 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,160 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,161 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,162 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,162 [INFO ] jes.pub.runtime.JesConfig  - getConfigValue(String) - configItem:[JES_ENV_TYPE]未定义
2020-09-03 15:41:44,415 [INFO ] jes.pub.runtime.JesConfig  - autoConfigJdbcLogger:  JES_ENV_TYPE=DEV;JdbcLogger level=TRACE
2020-09-03 15:41:44,418 [INFO ] jes.pub.runtime.JesConfig  - autoConfigJdbcLogger:  JES_ENV_TYPE=DEV;JdbcLogger level=TRACE
2020-09-03 15:41:44,622 [INFO ] jes.subsystem.s.ClusterService  - getMyIp() - 获得本机Ip地址 - myIp=10.0.5.12;172.16.128.241
2020-09-03 15:41:44,806 [INFO ] jes.utils.JdbcUtil  - 分页sql:SELECT DATA_DATE, DJOB_ID, SS_ID, RUNNING_PARAMS, CHECK_TIMES, FIRST_CHECK_TIME, LAST_CHECK_TIME,  FEEBACK_FLAG, RUNNING_RETRY_TIMES, LOCK_GROUP_STATUS, PLAN_SERVER, ISSUED_USER, ISSUED_DATE, DJOB_PRIORITY, RUNNING_SERVER, RUNNING_START, RUNNING_END, RUN_STATUS,  RUNNING_LOG, PLAN_RETRY_TIMES,PLAN_START  FROM jes_djob_instance  WHERE (RUN_STATUS='WAITTING' OR RUN_STATUS='RUNNING' ) AND ((PLAN_SERVER IS NULL OR PLAN_SERVER=?) AND PLAN_START<=?) ORDER BY DJOB_PRIORITY, ISSUED_DATE
2020-09-03 15:41:44,806 [WARN ] jes.subsystem.s.ClusterService  - AUTO_TASK_LOCKED_DURING changed,now value=W:7 1430+120
2020-09-03 15:41:45,362 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 0
2020-09-03 15:41:45,362 [DEBUG] jes.subsystem.s.ClusterService  - doTryRunDjob() - serverName=2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8, djobs=[]
2020-09-03 15:41:45,382 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 1组
2020-09-03 15:41:45,477 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 1组
2020-09-03 15:41:46,004 [INFO ] jes.subsystem.s.RuntimeConfigure  - /application
2020-09-03 15:41:46,035 [INFO ] com.taxExt.sys.service.TERuntimeConfigure  - /application
2020-09-03 15:41:46,035 [DEBUG] jes.subsystem.s.AutoTaskRunner  - {jes.ioc.s.beehive.BeehiveTaskAutoCompletionService=jes.ioc.s.beehive.BeehiveTaskAutoCompletionService@63c78e5e, jes.ioc.s.ext.OverTimeSendEmailsService=jes.ioc.s.ext.OverTimeSendEmailsService@2b2f8cf, jes.ioc.s.vine.VineTaskAutoCompletionService=jes.ioc.s.vine.VineTaskAutoCompletionService@50e0541, jes.ioc.s.sys.JesLogFileCleaner=jes.ioc.s.sys.JesLogFileCleaner@3760f3e8, jes.ioc.s.dis2.DisStatisticsCorrectTask=jes.ioc.s.dis2.DisStatisticsCorrectTask@7d6f31ef, com.taxExt.sys.service.TERuntimeConfigure=com.taxExt.sys.service.TERuntimeConfigure@6044311a, jes.ioc.s.ext.InstChangeInformService=jes.ioc.s.ext.InstChangeInformService@2d1ef2fc, jes.ioc.s.vine.AutoStepRunner=jes.ioc.s.vine.AutoStepRunner@39bbe17c, jes.ioc.s.ext.SynViewTableDatasAutoTask=jes.ioc.s.ext.SynViewTableDatasAutoTask@461f295c, jes.ioc.s.ext.SocketServerService=jes.ioc.s.ext.SocketServerService@3444ac8f, jes.subsystem.s.RuntimeConfigure=jes.subsystem.s.RuntimeConfigure@3d45ea17}
2020-09-03 15:41:46,093 [INFO ] jes.subsystem.s.AutoTaskRunner  - AutoTaskRunner.runEachDay() - 开始执行.  @ClusterNode [serverName=2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8, getHost()=10.0.5.12;172.16.128.241, getStorePath()=D:/JES_WORK/jesa/src/main/webapp/]
2020-09-03 15:41:46,104 [INFO ] jes.subsystem.s.AutoTaskRunner  - AutoTaskRunner.runEachDay() - 执行完成.
2020-09-03 15:41:46,378 [DEBUG] jes.subsystem.s.PluginService  - 注册Plugin ： jes.ioc.s.beehive.BeforeSubmitCheckImpService
2020-09-03 15:41:46,378 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 2组
2020-09-03 15:41:47,694 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 1
2020-09-03 15:41:47,695 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[1]
2020-09-03 15:41:47,707 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 3组
2020-09-03 15:41:49,329 [INFO ] jes.pub.runtime.dao.SysSpringJdbcDAO  - 初始化机构树缓存...
2020-09-03 15:41:51,814 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 4组
2020-09-03 15:41:51,926 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 5组
2020-09-03 15:41:52,000 [DEBUG] jes.subsystem.s.PluginService  - 一共注册Plugin ： 6组
2020-09-03 15:41:54,452 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080"}
2020-09-03 15:41:54,580 [INFO ] jes.sys.listener.SysSessionListener  - sessionCreated(HttpSessionEvent) 
2020-09-03 15:42:00,390 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 4
2020-09-03 15:42:00,390 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[jes.ioc.s.beehive.BhTaskTemplateFactoryService, jes.ioc.s.dna.DnaIndexCalcService, jes.ioc.s.owl.OwlJobFactoryService, jes.ioc.s.vine.AutoDeployRunner]
2020-09-03 15:42:00,390 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner can run on 2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8,taskContainer:[,jes.ioc.s.beehive.BhTaskTemplateFactoryService,jes.ioc.s.dna.DnaIndexCalcService,jes.ioc.s.owl.OwlJobFactoryService,jes.ioc.s.vine.AutoDeployRunner].
2020-09-03 15:42:00,390 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner running on on 2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8...
2020-09-03 15:42:00,390 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner开始获取任务实例...
2020-09-03 15:42:00,390 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.beehive.BhTaskTemplateFactoryService
2020-09-03 15:42:00,400 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:42:00,427 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:fxbb,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=null, startTime=00:00]
2020-09-03 15:42:00,428 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:test,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=null, startTime=05:00]
2020-09-03 15:42:00,428 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:555555555,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=null, startTime=05:00]
2020-09-03 15:42:00,428 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.dna.DnaIndexCalcService
2020-09-03 15:42:00,428 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:42:00,439 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.owl.OwlJobFactoryService
2020-09-03 15:42:00,439 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:42:00,465 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.owl.OwlJobFactoryService的任务:OWL-JOB:1111,详情:AbstractScheduledTask [taskId=OWL-JOB:1111, frequenceType=day, offsetDay=0, status=waiting, minCheckDate=null, startTime=18:25]
2020-09-03 15:42:00,465 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.vine.AutoDeployRunner
2020-09-03 15:42:00,465 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:42:00,558 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner获取任务实例完成.
2020-09-03 15:42:00,558 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt getOffsetDay[BIFROST(BEEHIVE)-TASK:fxbb]:2020-09-03 0
2020-09-03 15:42:00,559 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt Frequence:[BIFROST(BEEHIVE)-TASK:fxbb]:Frequence [dataDate=2020-09-30, type=month]
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt t.getMinCheckDate()[BIFROST(BEEHIVE)-TASK:fxbb]:2020-09-04
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:fxbb][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=2020-09-04, startTime=00:00]
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt getOffsetDay[BIFROST(BEEHIVE)-TASK:test]:2020-09-02 1
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt Frequence:[BIFROST(BEEHIVE)-TASK:test]:Frequence [dataDate=2020-09-30, type=month]
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt t.getMinCheckDate()[BIFROST(BEEHIVE)-TASK:test]:2020-09-04
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:test][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt getOffsetDay[BIFROST(BEEHIVE)-TASK:555555555]:2020-09-02 1
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt Frequence:[BIFROST(BEEHIVE)-TASK:555555555]:Frequence [dataDate=2020-09-30, type=month]
2020-09-03 15:42:00,560 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt t.getMinCheckDate()[BIFROST(BEEHIVE)-TASK:555555555]:2020-09-04
2020-09-03 15:42:00,561 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:555555555][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:42:00,631 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:42:00,643 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:42:00,659 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:42:00,659 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt getOffsetDay[OWL-JOB:1111]:2020-09-03 0
2020-09-03 15:42:00,660 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt Frequence:[OWL-JOB:1111]:Frequence [dataDate=2020-09-03, type=day]
2020-09-03 15:42:00,661 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt compareToHHMM:[OWL-JOB:1111]:18:25
2020-09-03 15:42:00,662 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[OWL-JOB:1111][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=OWL-JOB:1111, frequenceType=day, offsetDay=0, status=waiting, minCheckDate=null, startTime=18:25]
2020-09-03 15:42:06,705 [DEBUG] jes.utils.TextTemplateUtil  - httlClassesTarget--->D:\JES_WORK\jesa\src\main\webapp\\WEB-INF\classes\httl\spi\translators\templates
2020-09-03 15:42:06,809 [DEBUG] httl  - Compile template /vm/login/login.vm, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:07,100 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_login_login_vm_html_utf_8_zh_1599104103876_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("1");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("1");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("2");
private static final char[] $TXT5 = httl.util.CharCache.getAndRemove("3");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("2");
private static final char[] $TXT8 = httl.util.CharCache.getAndRemove("4");
private static final char[] $TXT9 = httl.util.CharCache.getAndRemove("5");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("3");
private static final char[] $TXT12 = httl.util.CharCache.getAndRemove("6");
private static final String $TXT13 = httl.util.StringCache.getAndRemove("4");
private static final char[] $TXT15 = httl.util.CharCache.getAndRemove("7");
private static final String $TXT16 = httl.util.StringCache.getAndRemove("5");
private static final char[] $TXT18 = httl.util.CharCache.getAndRemove("8");
private static final String $TXT19 = httl.util.StringCache.getAndRemove("6");
private static final char[] $TXT21 = httl.util.CharCache.getAndRemove("9");
private static final String $TXT22 = httl.util.StringCache.getAndRemove("7");
private static final char[] $TXT24 = httl.util.CharCache.getAndRemove("10");
private static final char[] $TXT25 = httl.util.CharCache.getAndRemove("11");
private static final String $TXT26 = httl.util.StringCache.getAndRemove("8");
private static final char[] $TXT28 = httl.util.CharCache.getAndRemove("12");
private static final char[] $TXT29 = httl.util.CharCache.getAndRemove("13");
private static final char[] $TXT30 = httl.util.CharCache.getAndRemove("14");
private static final String $TXT31 = httl.util.StringCache.getAndRemove("9");
private static final char[] $TXT33 = httl.util.CharCache.getAndRemove("15");
private static final String $TXT34 = httl.util.StringCache.getAndRemove("10");
private static final char[] $TXT36 = httl.util.CharCache.getAndRemove("16");
private static final char[] $TXT37 = httl.util.CharCache.getAndRemove("17");
private static final char[] $TXT38 = httl.util.CharCache.getAndRemove("18");
private static final String $TXT39 = httl.util.StringCache.getAndRemove("11");
private static final char[] $TXT41 = httl.util.CharCache.getAndRemove("19");
private static final char[] $TXT42 = httl.util.CharCache.getAndRemove("20");
private static final char[] $TXT43 = httl.util.CharCache.getAndRemove("21");
private static final String $TXT44 = httl.util.StringCache.getAndRemove("12");
private static final char[] $TXT46 = httl.util.CharCache.getAndRemove("22");
private static final char[] $TXT47 = httl.util.CharCache.getAndRemove("23");
private static final char[] $TXT48 = httl.util.CharCache.getAndRemove("24");
private static final String $TXT49 = httl.util.StringCache.getAndRemove("13");
private static final char[] $TXT51 = httl.util.CharCache.getAndRemove("25");
private static final char[] $TXT52 = httl.util.CharCache.getAndRemove("26");
private static final String $TXT53 = httl.util.StringCache.getAndRemove("14");
private static final char[] $TXT55 = httl.util.CharCache.getAndRemove("27");
private static final char[] $TXT56 = httl.util.CharCache.getAndRemove("28");
private static final String $TXT57 = httl.util.StringCache.getAndRemove("15");
private static final char[] $TXT59 = httl.util.CharCache.getAndRemove("29");
private static final char[] $TXT60 = httl.util.CharCache.getAndRemove("30");
private static final char[] $TXT61 = httl.util.CharCache.getAndRemove("31");
private static final String $TXT62 = httl.util.StringCache.getAndRemove("16");
private static final char[] $TXT64 = httl.util.CharCache.getAndRemove("32");
private static final String $TXT65 = httl.util.StringCache.getAndRemove("17");
private static final char[] $TXT67 = httl.util.CharCache.getAndRemove("33");
private static final String $TXT68 = httl.util.StringCache.getAndRemove("18");
private static final char[] $TXT70 = httl.util.CharCache.getAndRemove("34");
private static final char[] $TXT71 = httl.util.CharCache.getAndRemove("35");
private static final String $TXT72 = httl.util.StringCache.getAndRemove("19");
private static final char[] $TXT74 = httl.util.CharCache.getAndRemove("36");
private static final char[] $TXT75 = httl.util.CharCache.getAndRemove("37");
private static final String $TXT76 = httl.util.StringCache.getAndRemove("20");
private static final char[] $TXT78 = httl.util.CharCache.getAndRemove("38");
private static final char[] $TXT79 = httl.util.CharCache.getAndRemove("39");
private static final char[] $TXT80 = httl.util.CharCache.getAndRemove("40");
private static final String $TXT81 = httl.util.StringCache.getAndRemove("21");
private static final char[] $TXT83 = httl.util.CharCache.getAndRemove("41");
private static final char[] $TXT84 = httl.util.CharCache.getAndRemove("42");
private static final char[] $TXT85 = httl.util.CharCache.getAndRemove("43");
private static final char[] $TXT86 = httl.util.CharCache.getAndRemove("44");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app", "loginLogoUrl", "rememberFlag", "webTitle", "theme", "passwordHash", "errorMsg"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_login_login_vm_html_utf_8_zh_1599104103876_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object loginLogoUrl = (java.lang.Object) $context.get("loginLogoUrl");
	java.lang.Object rememberFlag = (java.lang.Object) $context.get("rememberFlag");
	java.lang.Object webTitle = (java.lang.Object) $context.get("webTitle");
	java.lang.Object theme = (java.lang.Object) $context.get("theme");
	java.lang.Object passwordHash = (java.lang.Object) $context.get("passwordHash");
	java.lang.Object errorMsg = (java.lang.Object) $context.get("errorMsg");
	$output.write($TXT1);
	if (webTitle instanceof httl.Template) {
	((httl.Template)webTitle).render($output);
	} else {
	Object $obj2 = (webTitle instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)webTitle).openReader()) : webTitle);
	if ($obj2 instanceof char[]) $output.write(doFilter(filter, $TXT2, formatter.toChars($TXT2, (char[]) $obj2))); else $output.write(doFilter(filter, $TXT2, formatter.toString($TXT2, $obj2)));
	}
	$output.write($TXT4);
	filter = switchFilter("<script", $filter);
	$output.write($TXT5);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj6 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj6 instanceof char[]) $output.write(doFilter(filter, $TXT6, formatter.toChars($TXT6, (char[]) $obj6))); else $output.write(doFilter(filter, $TXT6, formatter.toString($TXT6, $obj6)));
	}
	$output.write($TXT8);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT9);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj10 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj10 instanceof char[]) $output.write(doFilter(filter, $TXT10, formatter.toChars($TXT10, (char[]) $obj10))); else $output.write(doFilter(filter, $TXT10, formatter.toString($TXT10, $obj10)));
	}
	$output.write($TXT12);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj13 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj13 instanceof char[]) $output.write(doFilter(filter, $TXT13, formatter.toChars($TXT13, (char[]) $obj13))); else $output.write(doFilter(filter, $TXT13, formatter.toString($TXT13, $obj13)));
	}
	$output.write($TXT15);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj16 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj16 instanceof char[]) $output.write(doFilter(filter, $TXT16, formatter.toChars($TXT16, (char[]) $obj16))); else $output.write(doFilter(filter, $TXT16, formatter.toString($TXT16, $obj16)));
	}
	$output.write($TXT18);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj19 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj19 instanceof char[]) $output.write(doFilter(filter, $TXT19, formatter.toChars($TXT19, (char[]) $obj19))); else $output.write(doFilter(filter, $TXT19, formatter.toString($TXT19, $obj19)));
	}
	$output.write($TXT21);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj22 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj22 instanceof char[]) $output.write(doFilter(filter, $TXT22, formatter.toChars($TXT22, (char[]) $obj22))); else $output.write(doFilter(filter, $TXT22, formatter.toString($TXT22, $obj22)));
	}
	$output.write($TXT24);
	filter = switchFilter("<script", $filter);
	$output.write($TXT25);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj26 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj26 instanceof char[]) $output.write(doFilter(filter, $TXT26, formatter.toChars($TXT26, (char[]) $obj26))); else $output.write(doFilter(filter, $TXT26, formatter.toString($TXT26, $obj26)));
	}
	$output.write($TXT28);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT29);
	filter = switchFilter("<script", $filter);
	$output.write($TXT30);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj31 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj31 instanceof char[]) $output.write(doFilter(filter, $TXT31, formatter.toChars($TXT31, (char[]) $obj31))); else $output.write(doFilter(filter, $TXT31, formatter.toString($TXT31, $obj31)));
	}
	$output.write($TXT33);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj34 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj34 instanceof char[]) $output.write(doFilter(filter, $TXT34, formatter.toChars($TXT34, (char[]) $obj34))); else $output.write(doFilter(filter, $TXT34, formatter.toString($TXT34, $obj34)));
	}
	$output.write($TXT36);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT37);
	filter = switchFilter("<script", $filter);
	$output.write($TXT38);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj39 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj39 instanceof char[]) $output.write(doFilter(filter, $TXT39, formatter.toChars($TXT39, (char[]) $obj39))); else $output.write(doFilter(filter, $TXT39, formatter.toString($TXT39, $obj39)));
	}
	$output.write($TXT41);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT42);
	filter = switchFilter("<script", $filter);
	$output.write($TXT43);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj44 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj44 instanceof char[]) $output.write(doFilter(filter, $TXT44, formatter.toChars($TXT44, (char[]) $obj44))); else $output.write(doFilter(filter, $TXT44, formatter.toString($TXT44, $obj44)));
	}
	$output.write($TXT46);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT47);
	filter = switchFilter("<script", $filter);
	$output.write($TXT48);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj49 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj49 instanceof char[]) $output.write(doFilter(filter, $TXT49, formatter.toChars($TXT49, (char[]) $obj49))); else $output.write(doFilter(filter, $TXT49, formatter.toString($TXT49, $obj49)));
	}
	$output.write($TXT51);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT52);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj53 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj53 instanceof char[]) $output.write(doFilter(filter, $TXT53, formatter.toChars($TXT53, (char[]) $obj53))); else $output.write(doFilter(filter, $TXT53, formatter.toString($TXT53, $obj53)));
	}
	$output.write($TXT55);
	filter = switchFilter("<style", $filter);
	$output.write($TXT56);
	if (loginLogoUrl instanceof httl.Template) {
	((httl.Template)loginLogoUrl).render($output);
	} else {
	Object $obj57 = (loginLogoUrl instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)loginLogoUrl).openReader()) : loginLogoUrl);
	if ($obj57 instanceof char[]) $output.write(doFilter(filter, $TXT57, formatter.toChars($TXT57, (char[]) $obj57))); else $output.write(doFilter(filter, $TXT57, formatter.toString($TXT57, $obj57)));
	}
	$output.write($TXT59);
	filter = switchFilter("</style>", $filter);
	$output.write($TXT60);
	filter = switchFilter("<script", $filter);
	$output.write($TXT61);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj62 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj62 instanceof char[]) $output.write(doFilter(filter, $TXT62, formatter.toChars($TXT62, (char[]) $obj62))); else $output.write(doFilter(filter, $TXT62, formatter.toString($TXT62, $obj62)));
	}
	$output.write($TXT64);
	if (passwordHash instanceof httl.Template) {
	((httl.Template)passwordHash).render($output);
	} else {
	Object $obj65 = (passwordHash instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)passwordHash).openReader()) : passwordHash);
	if ($obj65 instanceof char[]) $output.write(doFilter(filter, $TXT65, formatter.toChars($TXT65, (char[]) $obj65))); else $output.write(doFilter(filter, $TXT65, formatter.toString($TXT65, $obj65)));
	}
	$output.write($TXT67);
	if (rememberFlag instanceof httl.Template) {
	((httl.Template)rememberFlag).render($output);
	} else {
	Object $obj68 = (rememberFlag instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)rememberFlag).openReader()) : rememberFlag);
	if ($obj68 instanceof char[]) $output.write(doFilter(filter, $TXT68, formatter.toChars($TXT68, (char[]) $obj68))); else $output.write(doFilter(filter, $TXT68, formatter.toString($TXT68, $obj68)));
	}
	$output.write($TXT70);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT71);
	if (errorMsg instanceof httl.Template) {
	((httl.Template)errorMsg).render($output);
	} else {
	Object $obj72 = (errorMsg instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)errorMsg).openReader()) : errorMsg);
	if ($obj72 instanceof char[]) $output.write(doFilter(filter, $TXT72, formatter.toChars($TXT72, (char[]) $obj72))); else $output.write(doFilter(filter, $TXT72, formatter.toString($TXT72, $obj72)));
	}
	$output.write($TXT74);
	filter = switchFilter("<script", $filter);
	$output.write($TXT75);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj76 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj76 instanceof char[]) $output.write(doFilter(filter, $TXT76, formatter.toChars($TXT76, (char[]) $obj76))); else $output.write(doFilter(filter, $TXT76, formatter.toString($TXT76, $obj76)));
	}
	$output.write($TXT78);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT79);
	filter = switchFilter("<script", $filter);
	$output.write($TXT80);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj81 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj81 instanceof char[]) $output.write(doFilter(filter, $TXT81, formatter.toChars($TXT81, (char[]) $obj81))); else $output.write(doFilter(filter, $TXT81, formatter.toString($TXT81, $obj81)));
	}
	$output.write($TXT83);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT84);
	filter = switchFilter("<script", $filter);
	$output.write($TXT85);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT86);
}

public String getName() {
	return "/vm/login/login.vm";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:07,149 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_login_login_vm_html_utf_8_zh_1599104103876_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("1");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("22");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("2");
private static final byte[] $TXT4 = httl.util.ByteCache.getAndRemove("3");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("23");
private static final byte[] $TXT6 = httl.util.ByteCache.getAndRemove("4");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("5");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("24");
private static final byte[] $TXT9 = httl.util.ByteCache.getAndRemove("6");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("25");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("7");
private static final String $TXT12 = httl.util.StringCache.getAndRemove("26");
private static final byte[] $TXT13 = httl.util.ByteCache.getAndRemove("8");
private static final String $TXT14 = httl.util.StringCache.getAndRemove("27");
private static final byte[] $TXT15 = httl.util.ByteCache.getAndRemove("9");
private static final String $TXT16 = httl.util.StringCache.getAndRemove("28");
private static final byte[] $TXT17 = httl.util.ByteCache.getAndRemove("10");
private static final byte[] $TXT18 = httl.util.ByteCache.getAndRemove("11");
private static final String $TXT19 = httl.util.StringCache.getAndRemove("29");
private static final byte[] $TXT20 = httl.util.ByteCache.getAndRemove("12");
private static final byte[] $TXT21 = httl.util.ByteCache.getAndRemove("13");
private static final byte[] $TXT22 = httl.util.ByteCache.getAndRemove("14");
private static final String $TXT23 = httl.util.StringCache.getAndRemove("30");
private static final byte[] $TXT24 = httl.util.ByteCache.getAndRemove("15");
private static final String $TXT25 = httl.util.StringCache.getAndRemove("31");
private static final byte[] $TXT26 = httl.util.ByteCache.getAndRemove("16");
private static final byte[] $TXT27 = httl.util.ByteCache.getAndRemove("17");
private static final byte[] $TXT28 = httl.util.ByteCache.getAndRemove("18");
private static final String $TXT29 = httl.util.StringCache.getAndRemove("32");
private static final byte[] $TXT30 = httl.util.ByteCache.getAndRemove("19");
private static final byte[] $TXT31 = httl.util.ByteCache.getAndRemove("20");
private static final byte[] $TXT32 = httl.util.ByteCache.getAndRemove("21");
private static final String $TXT33 = httl.util.StringCache.getAndRemove("33");
private static final byte[] $TXT34 = httl.util.ByteCache.getAndRemove("22");
private static final byte[] $TXT35 = httl.util.ByteCache.getAndRemove("23");
private static final byte[] $TXT36 = httl.util.ByteCache.getAndRemove("24");
private static final String $TXT37 = httl.util.StringCache.getAndRemove("34");
private static final byte[] $TXT38 = httl.util.ByteCache.getAndRemove("25");
private static final byte[] $TXT39 = httl.util.ByteCache.getAndRemove("26");
private static final String $TXT40 = httl.util.StringCache.getAndRemove("35");
private static final byte[] $TXT41 = httl.util.ByteCache.getAndRemove("27");
private static final byte[] $TXT42 = httl.util.ByteCache.getAndRemove("28");
private static final String $TXT43 = httl.util.StringCache.getAndRemove("36");
private static final byte[] $TXT44 = httl.util.ByteCache.getAndRemove("29");
private static final byte[] $TXT45 = httl.util.ByteCache.getAndRemove("30");
private static final byte[] $TXT46 = httl.util.ByteCache.getAndRemove("31");
private static final String $TXT47 = httl.util.StringCache.getAndRemove("37");
private static final byte[] $TXT48 = httl.util.ByteCache.getAndRemove("32");
private static final String $TXT49 = httl.util.StringCache.getAndRemove("38");
private static final byte[] $TXT50 = httl.util.ByteCache.getAndRemove("33");
private static final String $TXT51 = httl.util.StringCache.getAndRemove("39");
private static final byte[] $TXT52 = httl.util.ByteCache.getAndRemove("34");
private static final byte[] $TXT53 = httl.util.ByteCache.getAndRemove("35");
private static final String $TXT54 = httl.util.StringCache.getAndRemove("40");
private static final byte[] $TXT55 = httl.util.ByteCache.getAndRemove("36");
private static final byte[] $TXT56 = httl.util.ByteCache.getAndRemove("37");
private static final String $TXT57 = httl.util.StringCache.getAndRemove("41");
private static final byte[] $TXT58 = httl.util.ByteCache.getAndRemove("38");
private static final byte[] $TXT59 = httl.util.ByteCache.getAndRemove("39");
private static final byte[] $TXT60 = httl.util.ByteCache.getAndRemove("40");
private static final String $TXT61 = httl.util.StringCache.getAndRemove("42");
private static final byte[] $TXT62 = httl.util.ByteCache.getAndRemove("41");
private static final byte[] $TXT63 = httl.util.ByteCache.getAndRemove("42");
private static final byte[] $TXT64 = httl.util.ByteCache.getAndRemove("43");
private static final byte[] $TXT65 = httl.util.ByteCache.getAndRemove("44");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app", "loginLogoUrl", "rememberFlag", "webTitle", "theme", "passwordHash", "errorMsg"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_login_login_vm_html_utf_8_zh_1599104103876_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object loginLogoUrl = (java.lang.Object) $context.get("loginLogoUrl");
	java.lang.Object rememberFlag = (java.lang.Object) $context.get("rememberFlag");
	java.lang.Object webTitle = (java.lang.Object) $context.get("webTitle");
	java.lang.Object theme = (java.lang.Object) $context.get("theme");
	java.lang.Object passwordHash = (java.lang.Object) $context.get("passwordHash");
	java.lang.Object errorMsg = (java.lang.Object) $context.get("errorMsg");
	$output.write($TXT1);
	if (webTitle instanceof httl.Template) {
	((httl.Template)webTitle).render($output);
	} else {
	$output.write(doFilter(filter, $TXT2, formatter.toBytes($TXT2, (webTitle instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)webTitle).openReader()) : webTitle))));
	}
	$output.write($TXT3);
	filter = switchFilter("<script", $filter);
	$output.write($TXT4);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT5, formatter.toBytes($TXT5, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT6);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT7);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT8, formatter.toBytes($TXT8, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT9);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT10, formatter.toBytes($TXT10, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT11);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT12, formatter.toBytes($TXT12, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT13);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT14, formatter.toBytes($TXT14, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT15);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT16, formatter.toBytes($TXT16, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT17);
	filter = switchFilter("<script", $filter);
	$output.write($TXT18);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT19, formatter.toBytes($TXT19, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT20);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT21);
	filter = switchFilter("<script", $filter);
	$output.write($TXT22);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT23, formatter.toBytes($TXT23, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT24);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT25, formatter.toBytes($TXT25, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT26);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT27);
	filter = switchFilter("<script", $filter);
	$output.write($TXT28);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT29, formatter.toBytes($TXT29, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT30);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT31);
	filter = switchFilter("<script", $filter);
	$output.write($TXT32);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT33, formatter.toBytes($TXT33, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT34);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT35);
	filter = switchFilter("<script", $filter);
	$output.write($TXT36);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT37, formatter.toBytes($TXT37, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT38);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT39);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT40, formatter.toBytes($TXT40, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT41);
	filter = switchFilter("<style", $filter);
	$output.write($TXT42);
	if (loginLogoUrl instanceof httl.Template) {
	((httl.Template)loginLogoUrl).render($output);
	} else {
	$output.write(doFilter(filter, $TXT43, formatter.toBytes($TXT43, (loginLogoUrl instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)loginLogoUrl).openReader()) : loginLogoUrl))));
	}
	$output.write($TXT44);
	filter = switchFilter("</style>", $filter);
	$output.write($TXT45);
	filter = switchFilter("<script", $filter);
	$output.write($TXT46);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT47, formatter.toBytes($TXT47, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT48);
	if (passwordHash instanceof httl.Template) {
	((httl.Template)passwordHash).render($output);
	} else {
	$output.write(doFilter(filter, $TXT49, formatter.toBytes($TXT49, (passwordHash instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)passwordHash).openReader()) : passwordHash))));
	}
	$output.write($TXT50);
	if (rememberFlag instanceof httl.Template) {
	((httl.Template)rememberFlag).render($output);
	} else {
	$output.write(doFilter(filter, $TXT51, formatter.toBytes($TXT51, (rememberFlag instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)rememberFlag).openReader()) : rememberFlag))));
	}
	$output.write($TXT52);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT53);
	if (errorMsg instanceof httl.Template) {
	((httl.Template)errorMsg).render($output);
	} else {
	$output.write(doFilter(filter, $TXT54, formatter.toBytes($TXT54, (errorMsg instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)errorMsg).openReader()) : errorMsg))));
	}
	$output.write($TXT55);
	filter = switchFilter("<script", $filter);
	$output.write($TXT56);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT57, formatter.toBytes($TXT57, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT58);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT59);
	filter = switchFilter("<script", $filter);
	$output.write($TXT60);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT61, formatter.toBytes($TXT61, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT62);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT63);
	filter = switchFilter("<script", $filter);
	$output.write($TXT64);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT65);
}

public String getName() {
	return "/vm/login/login.vm";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:07,152 [DEBUG] httl  - Parsed the template /vm/login/login.vm, eslapsed: 350ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:11,697 [INFO ] jes.sys.listener.SysSessionListener  - sessionCreated(HttpSessionEvent) 
2020-09-03 15:42:11,922 [DEBUG] jes.utils.third.DESEncrypter  - decrypt(String, String) - encrptString=1
2020-09-03 15:42:11,922 [DEBUG] jes.utils.third.DESEncrypter  - decrypt(String, String) - encrptString=1
2020-09-03 15:42:14,030 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 4
2020-09-03 15:42:14,031 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[Entry [key=JPT, value=进项管理], Entry [key=BSYS, value=系统管理], Entry [key=VMS, value=销项管理], Entry [key=BIFROST, value=纳税申报]]
2020-09-03 15:42:14,050 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,050 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=null, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,051 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=null, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,051 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=null, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,051 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=null, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,052 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,052 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:14,056 [DEBUG] httl  - Compile template /vm/main/menu.vm, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,146 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_main_menu_vm_html_utf_8_zh_CN_1599104103877_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT2 = httl.util.CharCache.getAndRemove("45");
private static final char[] $TXT3 = httl.util.CharCache.getAndRemove("46");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("47");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("43");
private static final char[] $TXT7 = httl.util.CharCache.getAndRemove("48");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("44");
private static final char[] $TXT10 = httl.util.CharCache.getAndRemove("49");
private static final char[] $TXT11 = httl.util.CharCache.getAndRemove("50");
private static final String $TXT12 = httl.util.StringCache.getAndRemove("45");
private static final char[] $TXT14 = httl.util.CharCache.getAndRemove("51");
private static final String $TXT15 = httl.util.StringCache.getAndRemove("46");
private static final char[] $TXT17 = httl.util.CharCache.getAndRemove("52");
private static final char[] $TXT18 = httl.util.CharCache.getAndRemove("53");
private static final char[] $TXT20 = httl.util.CharCache.getAndRemove("54");
private static final String $TXT21 = httl.util.StringCache.getAndRemove("47");
private static final char[] $TXT23 = httl.util.CharCache.getAndRemove("55");
private static final String $TXT24 = httl.util.StringCache.getAndRemove("48");
private static final char[] $TXT26 = httl.util.CharCache.getAndRemove("56");
private static final String $TXT27 = httl.util.StringCache.getAndRemove("49");
private static final char[] $TXT29 = httl.util.CharCache.getAndRemove("57");
private static final String $TXT30 = httl.util.StringCache.getAndRemove("50");
private static final char[] $TXT32 = httl.util.CharCache.getAndRemove("58");
private static final String $TXT33 = httl.util.StringCache.getAndRemove("51");
private static final char[] $TXT35 = httl.util.CharCache.getAndRemove("59");
private static final char[] $TXT36 = httl.util.CharCache.getAndRemove("60");
private static final char[] $TXT37 = httl.util.CharCache.getAndRemove("61");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"subSystems"}, new Class[] {java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_main_menu_vm_html_utf_8_zh_CN_1599104103877_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.util.Map ss = null;
	httl.util.Status foreach = null;
	java.util.List menuList = null;
	httl.util.Status $for = null;
	java.util.Map menuMap = null;
	java.util.Map menu = null;
	java.lang.Object subSystems = (java.lang.Object) $context.get("subSystems");
	Object _d_1 = subSystems;
	int _s_1 = httl.util.ClassUtils.getSize(_d_1);
	if (_d_1 != null && _s_1 != 0) {
	$for = foreach = new httl.util.Status($for, _d_1, _s_1);
	for (java.util.Iterator _i_ss = httl.util.CollectionUtils.toIterator(_d_1); _i_ss.hasNext();) {
	ss = (java.util.Map)(_i_ss.next());
	$context.put("ss", httl.util.ClassUtils.boxed(ss));
	$output.write($TXT2);
	menuMap = (java.util.Map)((ss == null ? (java.lang.Object) null : ss.get("menu")));
	$context.put("menuMap", httl.util.ClassUtils.boxed(menuMap));
	menuList = (java.util.List)((menuMap == null ? (java.lang.Object) null : menuMap.get("items")));
	$context.put("menuList", httl.util.ClassUtils.boxed(menuList));
	if(0 < (menuList == null ? 0 : menuList.size()) || (httl.util.StringUtils.toString(((ss == null ? (java.lang.Object) null : ss.get("xtype")))) == null ? ("button") == null : httl.util.StringUtils.toString(((ss == null ? (java.lang.Object) null : ss.get("xtype")))).equals("button"))) {
	$output.write($TXT3);
	if(! ((menuList) != null && (menuList).size() > 0)) {
	$output.write($TXT4);
	if (((ss == null ? (java.lang.Object) null : ss.get("id"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("id")))).render($output);
	} else {
	Object $obj5 = (((ss == null ? (java.lang.Object) null : ss.get("id"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("id")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("id"))));
	if ($obj5 instanceof char[]) $output.write(doFilter(filter, $TXT5, formatter.toChars($TXT5, (char[]) $obj5))); else $output.write(doFilter(filter, $TXT5, formatter.toString($TXT5, $obj5)));
	}
	$output.write($TXT7);
	if (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).render($output);
	} else {
	Object $obj8 = (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))));
	if ($obj8 instanceof char[]) $output.write(doFilter(filter, $TXT8, formatter.toChars($TXT8, (char[]) $obj8))); else $output.write(doFilter(filter, $TXT8, formatter.toString($TXT8, $obj8)));
	}
	$output.write($TXT10);
	}
	$output.write($TXT11);
	if (((ss == null ? (java.lang.Object) null : ss.get("iconCls"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("iconCls")))).render($output);
	} else {
	Object $obj12 = (((ss == null ? (java.lang.Object) null : ss.get("iconCls"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("iconCls")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("iconCls"))));
	if ($obj12 instanceof char[]) $output.write(doFilter(filter, $TXT12, formatter.toChars($TXT12, (char[]) $obj12))); else $output.write(doFilter(filter, $TXT12, formatter.toString($TXT12, $obj12)));
	}
	$output.write($TXT14);
	if (((ss == null ? (java.lang.Object) null : ss.get("text"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("text")))).render($output);
	} else {
	Object $obj15 = (((ss == null ? (java.lang.Object) null : ss.get("text"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("text")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("text"))));
	if ($obj15 instanceof char[]) $output.write(doFilter(filter, $TXT15, formatter.toChars($TXT15, (char[]) $obj15))); else $output.write(doFilter(filter, $TXT15, formatter.toString($TXT15, $obj15)));
	}
	$output.write($TXT17);
	if(0 < (menuList == null ? 0 : menuList.size())) {
	$output.write($TXT18);
	Object _d_19 = menuList;
	int _s_19 = httl.util.ClassUtils.getSize(_d_19);
	if (_d_19 != null && _s_19 != 0) {
	$for = foreach = new httl.util.Status($for, _d_19, _s_19);
	for (java.util.Iterator _i_menu = httl.util.CollectionUtils.toIterator(_d_19); _i_menu.hasNext();) {
	menu = (java.util.Map)(_i_menu.next());
	$context.put("menu", httl.util.ClassUtils.boxed(menu));
	$output.write($TXT20);
	if (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).render($output);
	} else {
	Object $obj21 = (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))));
	if ($obj21 instanceof char[]) $output.write(doFilter(filter, $TXT21, formatter.toChars($TXT21, (char[]) $obj21))); else $output.write(doFilter(filter, $TXT21, formatter.toString($TXT21, $obj21)));
	}
	$output.write($TXT23);
	if (((menu == null ? (java.lang.Object) null : menu.get("id"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("id")))).render($output);
	} else {
	Object $obj24 = (((menu == null ? (java.lang.Object) null : menu.get("id"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("id")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("id"))));
	if ($obj24 instanceof char[]) $output.write(doFilter(filter, $TXT24, formatter.toChars($TXT24, (char[]) $obj24))); else $output.write(doFilter(filter, $TXT24, formatter.toString($TXT24, $obj24)));
	}
	$output.write($TXT26);
	if (((menu == null ? (java.lang.Object) null : menu.get("outerUrl"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("outerUrl")))).render($output);
	} else {
	Object $obj27 = (((menu == null ? (java.lang.Object) null : menu.get("outerUrl"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("outerUrl")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("outerUrl"))));
	if ($obj27 instanceof char[]) $output.write(doFilter(filter, $TXT27, formatter.toChars($TXT27, (char[]) $obj27))); else $output.write(doFilter(filter, $TXT27, formatter.toString($TXT27, $obj27)));
	}
	$output.write($TXT29);
	if (((menu == null ? (java.lang.Object) null : menu.get("iconCls"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("iconCls")))).render($output);
	} else {
	Object $obj30 = (((menu == null ? (java.lang.Object) null : menu.get("iconCls"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("iconCls")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("iconCls"))));
	if ($obj30 instanceof char[]) $output.write(doFilter(filter, $TXT30, formatter.toChars($TXT30, (char[]) $obj30))); else $output.write(doFilter(filter, $TXT30, formatter.toString($TXT30, $obj30)));
	}
	$output.write($TXT32);
	if (((menu == null ? (java.lang.Object) null : menu.get("text"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("text")))).render($output);
	} else {
	Object $obj33 = (((menu == null ? (java.lang.Object) null : menu.get("text"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("text")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("text"))));
	if ($obj33 instanceof char[]) $output.write(doFilter(filter, $TXT33, formatter.toChars($TXT33, (char[]) $obj33))); else $output.write(doFilter(filter, $TXT33, formatter.toString($TXT33, $obj33)));
	}
	$output.write($TXT35);
	$for.increment();
	}
	$for = foreach = $for.getParent();
	}
	$output.write($TXT36);
	}
	$output.write($TXT37);
	}
	$for.increment();
	}
	$for = foreach = $for.getParent();
	}
}

public String getName() {
	return "/vm/main/menu.vm";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,211 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_main_menu_vm_html_utf_8_zh_CN_1599104103877_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT2 = httl.util.ByteCache.getAndRemove("45");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("46");
private static final byte[] $TXT4 = httl.util.ByteCache.getAndRemove("47");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("52");
private static final byte[] $TXT6 = httl.util.ByteCache.getAndRemove("48");
private static final String $TXT7 = httl.util.StringCache.getAndRemove("53");
private static final byte[] $TXT8 = httl.util.ByteCache.getAndRemove("49");
private static final byte[] $TXT9 = httl.util.ByteCache.getAndRemove("50");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("54");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("51");
private static final String $TXT12 = httl.util.StringCache.getAndRemove("55");
private static final byte[] $TXT13 = httl.util.ByteCache.getAndRemove("52");
private static final byte[] $TXT14 = httl.util.ByteCache.getAndRemove("53");
private static final byte[] $TXT16 = httl.util.ByteCache.getAndRemove("54");
private static final String $TXT17 = httl.util.StringCache.getAndRemove("56");
private static final byte[] $TXT18 = httl.util.ByteCache.getAndRemove("55");
private static final String $TXT19 = httl.util.StringCache.getAndRemove("57");
private static final byte[] $TXT20 = httl.util.ByteCache.getAndRemove("56");
private static final String $TXT21 = httl.util.StringCache.getAndRemove("58");
private static final byte[] $TXT22 = httl.util.ByteCache.getAndRemove("57");
private static final String $TXT23 = httl.util.StringCache.getAndRemove("59");
private static final byte[] $TXT24 = httl.util.ByteCache.getAndRemove("58");
private static final String $TXT25 = httl.util.StringCache.getAndRemove("60");
private static final byte[] $TXT26 = httl.util.ByteCache.getAndRemove("59");
private static final byte[] $TXT27 = httl.util.ByteCache.getAndRemove("60");
private static final byte[] $TXT28 = httl.util.ByteCache.getAndRemove("61");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"subSystems"}, new Class[] {java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_main_menu_vm_html_utf_8_zh_CN_1599104103877_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.util.Map ss = null;
	httl.util.Status foreach = null;
	java.util.List menuList = null;
	httl.util.Status $for = null;
	java.util.Map menuMap = null;
	java.util.Map menu = null;
	java.lang.Object subSystems = (java.lang.Object) $context.get("subSystems");
	Object _d_1 = subSystems;
	int _s_1 = httl.util.ClassUtils.getSize(_d_1);
	if (_d_1 != null && _s_1 != 0) {
	$for = foreach = new httl.util.Status($for, _d_1, _s_1);
	for (java.util.Iterator _i_ss = httl.util.CollectionUtils.toIterator(_d_1); _i_ss.hasNext();) {
	ss = (java.util.Map)(_i_ss.next());
	$context.put("ss", httl.util.ClassUtils.boxed(ss));
	$output.write($TXT2);
	menuMap = (java.util.Map)((ss == null ? (java.lang.Object) null : ss.get("menu")));
	$context.put("menuMap", httl.util.ClassUtils.boxed(menuMap));
	menuList = (java.util.List)((menuMap == null ? (java.lang.Object) null : menuMap.get("items")));
	$context.put("menuList", httl.util.ClassUtils.boxed(menuList));
	if(0 < (menuList == null ? 0 : menuList.size()) || (httl.util.StringUtils.toString(((ss == null ? (java.lang.Object) null : ss.get("xtype")))) == null ? ("button") == null : httl.util.StringUtils.toString(((ss == null ? (java.lang.Object) null : ss.get("xtype")))).equals("button"))) {
	$output.write($TXT3);
	if(! ((menuList) != null && (menuList).size() > 0)) {
	$output.write($TXT4);
	if (((ss == null ? (java.lang.Object) null : ss.get("id"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("id")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT5, formatter.toBytes($TXT5, (((ss == null ? (java.lang.Object) null : ss.get("id"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("id")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("id")))))));
	}
	$output.write($TXT6);
	if (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT7, formatter.toBytes($TXT7, (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))))));
	}
	$output.write($TXT8);
	}
	$output.write($TXT9);
	if (((ss == null ? (java.lang.Object) null : ss.get("iconCls"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("iconCls")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT10, formatter.toBytes($TXT10, (((ss == null ? (java.lang.Object) null : ss.get("iconCls"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("iconCls")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("iconCls")))))));
	}
	$output.write($TXT11);
	if (((ss == null ? (java.lang.Object) null : ss.get("text"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("text")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT12, formatter.toBytes($TXT12, (((ss == null ? (java.lang.Object) null : ss.get("text"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("text")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("text")))))));
	}
	$output.write($TXT13);
	if(0 < (menuList == null ? 0 : menuList.size())) {
	$output.write($TXT14);
	Object _d_15 = menuList;
	int _s_15 = httl.util.ClassUtils.getSize(_d_15);
	if (_d_15 != null && _s_15 != 0) {
	$for = foreach = new httl.util.Status($for, _d_15, _s_15);
	for (java.util.Iterator _i_menu = httl.util.CollectionUtils.toIterator(_d_15); _i_menu.hasNext();) {
	menu = (java.util.Map)(_i_menu.next());
	$context.put("menu", httl.util.ClassUtils.boxed(menu));
	$output.write($TXT16);
	if (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Template) {
	((httl.Template)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT17, formatter.toBytes($TXT17, (((ss == null ? (java.lang.Object) null : ss.get("outerUrl"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))).openReader()) : ((ss == null ? (java.lang.Object) null : ss.get("outerUrl")))))));
	}
	$output.write($TXT18);
	if (((menu == null ? (java.lang.Object) null : menu.get("id"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("id")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT19, formatter.toBytes($TXT19, (((menu == null ? (java.lang.Object) null : menu.get("id"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("id")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("id")))))));
	}
	$output.write($TXT20);
	if (((menu == null ? (java.lang.Object) null : menu.get("outerUrl"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("outerUrl")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT21, formatter.toBytes($TXT21, (((menu == null ? (java.lang.Object) null : menu.get("outerUrl"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("outerUrl")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("outerUrl")))))));
	}
	$output.write($TXT22);
	if (((menu == null ? (java.lang.Object) null : menu.get("iconCls"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("iconCls")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT23, formatter.toBytes($TXT23, (((menu == null ? (java.lang.Object) null : menu.get("iconCls"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("iconCls")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("iconCls")))))));
	}
	$output.write($TXT24);
	if (((menu == null ? (java.lang.Object) null : menu.get("text"))) instanceof httl.Template) {
	((httl.Template)((menu == null ? (java.lang.Object) null : menu.get("text")))).render($output);
	} else {
	$output.write(doFilter(filter, $TXT25, formatter.toBytes($TXT25, (((menu == null ? (java.lang.Object) null : menu.get("text"))) instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)((menu == null ? (java.lang.Object) null : menu.get("text")))).openReader()) : ((menu == null ? (java.lang.Object) null : menu.get("text")))))));
	}
	$output.write($TXT26);
	$for.increment();
	}
	$for = foreach = $for.getParent();
	}
	$output.write($TXT27);
	}
	$output.write($TXT28);
	}
	$for.increment();
	}
	$for = foreach = $for.getParent();
	}
}

public String getName() {
	return "/vm/main/menu.vm";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,213 [DEBUG] httl  - Parsed the template /vm/main/menu.vm, eslapsed: 160ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,245 [DEBUG] httl  - Compile template /jes/view/main.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,529 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_main_httl_html_utf_8_zh_CN_1599117819356_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("62");
private static final char[] $TXT2 = httl.util.CharCache.getAndRemove("63");
private static final char[] $TXT3 = httl.util.CharCache.getAndRemove("64");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("61");
private static final char[] $TXT6 = httl.util.CharCache.getAndRemove("65");
private static final String $TXT7 = httl.util.StringCache.getAndRemove("62");
private static final char[] $TXT9 = httl.util.CharCache.getAndRemove("66");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("63");
private static final char[] $TXT12 = httl.util.CharCache.getAndRemove("67");
private static final String $TXT13 = httl.util.StringCache.getAndRemove("64");
private static final char[] $TXT15 = httl.util.CharCache.getAndRemove("68");
private static final String $TXT16 = httl.util.StringCache.getAndRemove("65");
private static final char[] $TXT18 = httl.util.CharCache.getAndRemove("69");
private static final String $TXT19 = httl.util.StringCache.getAndRemove("66");
private static final char[] $TXT21 = httl.util.CharCache.getAndRemove("70");
private static final String $TXT22 = httl.util.StringCache.getAndRemove("67");
private static final char[] $TXT24 = httl.util.CharCache.getAndRemove("71");
private static final String $TXT25 = httl.util.StringCache.getAndRemove("68");
private static final char[] $TXT27 = httl.util.CharCache.getAndRemove("72");
private static final String $TXT28 = httl.util.StringCache.getAndRemove("69");
private static final char[] $TXT30 = httl.util.CharCache.getAndRemove("73");
private static final char[] $TXT31 = httl.util.CharCache.getAndRemove("74");
private static final String $TXT32 = httl.util.StringCache.getAndRemove("70");
private static final char[] $TXT34 = httl.util.CharCache.getAndRemove("75");
private static final char[] $TXT35 = httl.util.CharCache.getAndRemove("76");
private static final char[] $TXT36 = httl.util.CharCache.getAndRemove("77");
private static final String $TXT37 = httl.util.StringCache.getAndRemove("71");
private static final char[] $TXT39 = httl.util.CharCache.getAndRemove("78");
private static final char[] $TXT40 = httl.util.CharCache.getAndRemove("79");
private static final char[] $TXT41 = httl.util.CharCache.getAndRemove("80");
private static final String $TXT42 = httl.util.StringCache.getAndRemove("72");
private static final char[] $TXT44 = httl.util.CharCache.getAndRemove("81");
private static final char[] $TXT45 = httl.util.CharCache.getAndRemove("82");
private static final char[] $TXT46 = httl.util.CharCache.getAndRemove("83");
private static final String $TXT47 = httl.util.StringCache.getAndRemove("73");
private static final char[] $TXT49 = httl.util.CharCache.getAndRemove("84");
private static final char[] $TXT50 = httl.util.CharCache.getAndRemove("85");
private static final char[] $TXT51 = httl.util.CharCache.getAndRemove("86");
private static final String $TXT52 = httl.util.StringCache.getAndRemove("74");
private static final char[] $TXT54 = httl.util.CharCache.getAndRemove("87");
private static final char[] $TXT55 = httl.util.CharCache.getAndRemove("88");
private static final char[] $TXT56 = httl.util.CharCache.getAndRemove("89");
private static final String $TXT57 = httl.util.StringCache.getAndRemove("75");
private static final char[] $TXT59 = httl.util.CharCache.getAndRemove("90");
private static final char[] $TXT60 = httl.util.CharCache.getAndRemove("91");
private static final char[] $TXT61 = httl.util.CharCache.getAndRemove("92");
private static final String $TXT62 = httl.util.StringCache.getAndRemove("76");
private static final char[] $TXT64 = httl.util.CharCache.getAndRemove("93");
private static final char[] $TXT65 = httl.util.CharCache.getAndRemove("94");
private static final char[] $TXT66 = httl.util.CharCache.getAndRemove("95");
private static final String $TXT67 = httl.util.StringCache.getAndRemove("77");
private static final char[] $TXT69 = httl.util.CharCache.getAndRemove("96");
private static final char[] $TXT70 = httl.util.CharCache.getAndRemove("97");
private static final char[] $TXT71 = httl.util.CharCache.getAndRemove("98");
private static final char[] $TXT72 = httl.util.CharCache.getAndRemove("99");
private static final String $TXT73 = httl.util.StringCache.getAndRemove("78");
private static final char[] $TXT75 = httl.util.CharCache.getAndRemove("100");
private static final String $TXT76 = httl.util.StringCache.getAndRemove("79");
private static final char[] $TXT78 = httl.util.CharCache.getAndRemove("101");
private static final String $TXT79 = httl.util.StringCache.getAndRemove("80");
private static final char[] $TXT81 = httl.util.CharCache.getAndRemove("102");
private static final String $TXT82 = httl.util.StringCache.getAndRemove("81");
private static final char[] $TXT84 = httl.util.CharCache.getAndRemove("103");
private static final String $TXT85 = httl.util.StringCache.getAndRemove("82");
private static final char[] $TXT87 = httl.util.CharCache.getAndRemove("104");
private static final String $TXT88 = httl.util.StringCache.getAndRemove("83");
private static final char[] $TXT90 = httl.util.CharCache.getAndRemove("105");
private static final String $TXT91 = httl.util.StringCache.getAndRemove("84");
private static final char[] $TXT92 = httl.util.CharCache.getAndRemove("106");
private static final String $TXT93 = httl.util.StringCache.getAndRemove("85");
private static final char[] $TXT95 = httl.util.CharCache.getAndRemove("107");
private static final String $TXT96 = httl.util.StringCache.getAndRemove("86");
private static final char[] $TXT98 = httl.util.CharCache.getAndRemove("108");
private static final String $TXT99 = httl.util.StringCache.getAndRemove("87");
private static final char[] $TXT101 = httl.util.CharCache.getAndRemove("109");
private static final String $TXT102 = httl.util.StringCache.getAndRemove("88");
private static final char[] $TXT104 = httl.util.CharCache.getAndRemove("110");
private static final String $TXT105 = httl.util.StringCache.getAndRemove("89");
private static final char[] $TXT107 = httl.util.CharCache.getAndRemove("111");
private static final String $TXT108 = httl.util.StringCache.getAndRemove("90");
private static final char[] $TXT109 = httl.util.CharCache.getAndRemove("112");
private static final String $TXT110 = httl.util.StringCache.getAndRemove("91");
private static final char[] $TXT111 = httl.util.CharCache.getAndRemove("113");
private static final String $TXT112 = httl.util.StringCache.getAndRemove("92");
private static final char[] $TXT114 = httl.util.CharCache.getAndRemove("114");
private static final String $TXT115 = httl.util.StringCache.getAndRemove("93");
private static final char[] $TXT117 = httl.util.CharCache.getAndRemove("115");
private static final char[] $TXT118 = httl.util.CharCache.getAndRemove("116");
private static final String $TXT119 = httl.util.StringCache.getAndRemove("94");
private static final char[] $TXT121 = httl.util.CharCache.getAndRemove("117");
private static final String $TXT122 = httl.util.StringCache.getAndRemove("95");
private static final char[] $TXT124 = httl.util.CharCache.getAndRemove("118");
private static final String $TXT125 = httl.util.StringCache.getAndRemove("96");
private static final char[] $TXT127 = httl.util.CharCache.getAndRemove("119");
private static final String $TXT128 = httl.util.StringCache.getAndRemove("97");
private static final char[] $TXT130 = httl.util.CharCache.getAndRemove("120");
private static final String $TXT131 = httl.util.StringCache.getAndRemove("98");
private static final char[] $TXT132 = httl.util.CharCache.getAndRemove("121");
private static final String $TXT133 = httl.util.StringCache.getAndRemove("99");
private static final char[] $TXT134 = httl.util.CharCache.getAndRemove("122");
private static final String $TXT135 = httl.util.StringCache.getAndRemove("100");
private static final char[] $TXT136 = httl.util.CharCache.getAndRemove("123");
private static final String $TXT137 = httl.util.StringCache.getAndRemove("101");
private static final char[] $TXT139 = httl.util.CharCache.getAndRemove("124");
private static final String $TXT140 = httl.util.StringCache.getAndRemove("102");
private static final char[] $TXT141 = httl.util.CharCache.getAndRemove("125");
private static final String $TXT142 = httl.util.StringCache.getAndRemove("103");
private static final char[] $TXT143 = httl.util.CharCache.getAndRemove("126");
private static final String $TXT144 = httl.util.StringCache.getAndRemove("104");
private static final char[] $TXT145 = httl.util.CharCache.getAndRemove("127");
private static final String $TXT146 = httl.util.StringCache.getAndRemove("105");
private static final char[] $TXT148 = httl.util.CharCache.getAndRemove("128");
private static final String $TXT149 = httl.util.StringCache.getAndRemove("106");
private static final char[] $TXT150 = httl.util.CharCache.getAndRemove("129");
private static final String $TXT151 = httl.util.StringCache.getAndRemove("107");
private static final char[] $TXT152 = httl.util.CharCache.getAndRemove("130");
private static final String $TXT153 = httl.util.StringCache.getAndRemove("108");
private static final char[] $TXT154 = httl.util.CharCache.getAndRemove("131");
private static final String $TXT155 = httl.util.StringCache.getAndRemove("109");
private static final char[] $TXT156 = httl.util.CharCache.getAndRemove("132");
private static final String $TXT157 = httl.util.StringCache.getAndRemove("110");
private static final char[] $TXT158 = httl.util.CharCache.getAndRemove("133");
private static final String $TXT159 = httl.util.StringCache.getAndRemove("111");
private static final char[] $TXT160 = httl.util.CharCache.getAndRemove("134");
private static final String $TXT161 = httl.util.StringCache.getAndRemove("112");
private static final char[] $TXT162 = httl.util.CharCache.getAndRemove("135");
private static final String $TXT163 = httl.util.StringCache.getAndRemove("113");
private static final char[] $TXT164 = httl.util.CharCache.getAndRemove("136");
private static final String $TXT165 = httl.util.StringCache.getAndRemove("114");
private static final char[] $TXT166 = httl.util.CharCache.getAndRemove("137");
private static final String $TXT167 = httl.util.StringCache.getAndRemove("115");
private static final char[] $TXT168 = httl.util.CharCache.getAndRemove("138");
private static final String $TXT169 = httl.util.StringCache.getAndRemove("116");
private static final char[] $TXT170 = httl.util.CharCache.getAndRemove("139");
private static final String $TXT171 = httl.util.StringCache.getAndRemove("117");
private static final char[] $TXT172 = httl.util.CharCache.getAndRemove("140");
private static final String $TXT173 = httl.util.StringCache.getAndRemove("118");
private static final char[] $TXT174 = httl.util.CharCache.getAndRemove("141");
private static final String $TXT175 = httl.util.StringCache.getAndRemove("119");
private static final char[] $TXT176 = httl.util.CharCache.getAndRemove("142");
private static final String $TXT177 = httl.util.StringCache.getAndRemove("120");
private static final char[] $TXT178 = httl.util.CharCache.getAndRemove("143");
private static final String $TXT179 = httl.util.StringCache.getAndRemove("121");
private static final char[] $TXT180 = httl.util.CharCache.getAndRemove("144");
private static final String $TXT181 = httl.util.StringCache.getAndRemove("122");
private static final char[] $TXT182 = httl.util.CharCache.getAndRemove("145");
private static final String $TXT183 = httl.util.StringCache.getAndRemove("123");
private static final char[] $TXT184 = httl.util.CharCache.getAndRemove("146");
private static final String $TXT185 = httl.util.StringCache.getAndRemove("124");
private static final char[] $TXT186 = httl.util.CharCache.getAndRemove("147");
private static final String $TXT187 = httl.util.StringCache.getAndRemove("125");
private static final char[] $TXT188 = httl.util.CharCache.getAndRemove("148");
private static final String $TXT189 = httl.util.StringCache.getAndRemove("126");
private static final char[] $TXT190 = httl.util.CharCache.getAndRemove("149");
private static final String $TXT191 = httl.util.StringCache.getAndRemove("127");
private static final char[] $TXT192 = httl.util.CharCache.getAndRemove("150");
private static final String $TXT193 = httl.util.StringCache.getAndRemove("128");
private static final char[] $TXT194 = httl.util.CharCache.getAndRemove("151");
private static final String $TXT195 = httl.util.StringCache.getAndRemove("129");
private static final char[] $TXT196 = httl.util.CharCache.getAndRemove("152");
private static final String $TXT197 = httl.util.StringCache.getAndRemove("130");
private static final char[] $TXT198 = httl.util.CharCache.getAndRemove("153");
private static final String $TXT199 = httl.util.StringCache.getAndRemove("131");
private static final char[] $TXT200 = httl.util.CharCache.getAndRemove("154");
private static final String $TXT201 = httl.util.StringCache.getAndRemove("132");
private static final char[] $TXT202 = httl.util.CharCache.getAndRemove("155");
private static final String $TXT203 = httl.util.StringCache.getAndRemove("133");
private static final char[] $TXT204 = httl.util.CharCache.getAndRemove("156");
private static final String $TXT205 = httl.util.StringCache.getAndRemove("134");
private static final char[] $TXT206 = httl.util.CharCache.getAndRemove("157");
private static final String $TXT207 = httl.util.StringCache.getAndRemove("135");
private static final char[] $TXT208 = httl.util.CharCache.getAndRemove("158");
private static final String $TXT209 = httl.util.StringCache.getAndRemove("136");
private static final char[] $TXT210 = httl.util.CharCache.getAndRemove("159");
private static final String $TXT211 = httl.util.StringCache.getAndRemove("137");
private static final char[] $TXT212 = httl.util.CharCache.getAndRemove("160");
private static final String $TXT213 = httl.util.StringCache.getAndRemove("138");
private static final char[] $TXT214 = httl.util.CharCache.getAndRemove("161");
private static final String $TXT215 = httl.util.StringCache.getAndRemove("139");
private static final char[] $TXT216 = httl.util.CharCache.getAndRemove("162");
private static final String $TXT217 = httl.util.StringCache.getAndRemove("140");
private static final char[] $TXT218 = httl.util.CharCache.getAndRemove("163");
private static final String $TXT219 = httl.util.StringCache.getAndRemove("141");
private static final char[] $TXT220 = httl.util.CharCache.getAndRemove("164");
private static final String $TXT221 = httl.util.StringCache.getAndRemove("142");
private static final char[] $TXT222 = httl.util.CharCache.getAndRemove("165");
private static final String $TXT223 = httl.util.StringCache.getAndRemove("143");
private static final char[] $TXT224 = httl.util.CharCache.getAndRemove("166");
private static final String $TXT225 = httl.util.StringCache.getAndRemove("144");
private static final char[] $TXT226 = httl.util.CharCache.getAndRemove("167");
private static final String $TXT227 = httl.util.StringCache.getAndRemove("145");
private static final char[] $TXT228 = httl.util.CharCache.getAndRemove("168");
private static final String $TXT229 = httl.util.StringCache.getAndRemove("146");
private static final char[] $TXT230 = httl.util.CharCache.getAndRemove("169");
private static final String $TXT231 = httl.util.StringCache.getAndRemove("147");
private static final char[] $TXT232 = httl.util.CharCache.getAndRemove("170");
private static final String $TXT233 = httl.util.StringCache.getAndRemove("148");
private static final char[] $TXT234 = httl.util.CharCache.getAndRemove("171");
private static final String $TXT235 = httl.util.StringCache.getAndRemove("149");
private static final char[] $TXT236 = httl.util.CharCache.getAndRemove("172");
private static final String $TXT237 = httl.util.StringCache.getAndRemove("150");
private static final char[] $TXT238 = httl.util.CharCache.getAndRemove("173");
private static final String $TXT239 = httl.util.StringCache.getAndRemove("151");
private static final char[] $TXT240 = httl.util.CharCache.getAndRemove("174");
private static final String $TXT241 = httl.util.StringCache.getAndRemove("152");
private static final char[] $TXT242 = httl.util.CharCache.getAndRemove("175");
private static final String $TXT243 = httl.util.StringCache.getAndRemove("153");
private static final char[] $TXT244 = httl.util.CharCache.getAndRemove("176");
private static final String $TXT245 = httl.util.StringCache.getAndRemove("154");
private static final char[] $TXT246 = httl.util.CharCache.getAndRemove("177");
private static final String $TXT247 = httl.util.StringCache.getAndRemove("155");
private static final char[] $TXT249 = httl.util.CharCache.getAndRemove("178");
private static final String $TXT250 = httl.util.StringCache.getAndRemove("156");
private static final char[] $TXT252 = httl.util.CharCache.getAndRemove("179");
private static final String $TXT253 = httl.util.StringCache.getAndRemove("157");
private static final char[] $TXT254 = httl.util.CharCache.getAndRemove("180");
private static final String $TXT255 = httl.util.StringCache.getAndRemove("158");
private static final char[] $TXT256 = httl.util.CharCache.getAndRemove("181");
private static final String $TXT257 = httl.util.StringCache.getAndRemove("159");
private static final char[] $TXT258 = httl.util.CharCache.getAndRemove("182");
private static final String $TXT259 = httl.util.StringCache.getAndRemove("160");
private static final char[] $TXT260 = httl.util.CharCache.getAndRemove("183");
private static final String $TXT261 = httl.util.StringCache.getAndRemove("161");
private static final char[] $TXT262 = httl.util.CharCache.getAndRemove("184");
private static final String $TXT263 = httl.util.StringCache.getAndRemove("162");
private static final char[] $TXT264 = httl.util.CharCache.getAndRemove("185");
private static final String $TXT265 = httl.util.StringCache.getAndRemove("163");
private static final char[] $TXT266 = httl.util.CharCache.getAndRemove("186");
private static final String $TXT267 = httl.util.StringCache.getAndRemove("164");
private static final char[] $TXT268 = httl.util.CharCache.getAndRemove("187");
private static final String $TXT269 = httl.util.StringCache.getAndRemove("165");
private static final char[] $TXT270 = httl.util.CharCache.getAndRemove("188");
private static final String $TXT271 = httl.util.StringCache.getAndRemove("166");
private static final char[] $TXT272 = httl.util.CharCache.getAndRemove("189");
private static final String $TXT273 = httl.util.StringCache.getAndRemove("167");
private static final char[] $TXT274 = httl.util.CharCache.getAndRemove("190");
private static final String $TXT275 = httl.util.StringCache.getAndRemove("168");
private static final char[] $TXT276 = httl.util.CharCache.getAndRemove("191");
private static final String $TXT277 = httl.util.StringCache.getAndRemove("169");
private static final char[] $TXT278 = httl.util.CharCache.getAndRemove("192");
private static final String $TXT279 = httl.util.StringCache.getAndRemove("170");
private static final char[] $TXT280 = httl.util.CharCache.getAndRemove("193");
private static final String $TXT281 = httl.util.StringCache.getAndRemove("171");
private static final char[] $TXT282 = httl.util.CharCache.getAndRemove("194");
private static final String $TXT283 = httl.util.StringCache.getAndRemove("172");
private static final char[] $TXT284 = httl.util.CharCache.getAndRemove("195");
private static final String $TXT285 = httl.util.StringCache.getAndRemove("173");
private static final char[] $TXT286 = httl.util.CharCache.getAndRemove("196");
private static final String $TXT287 = httl.util.StringCache.getAndRemove("174");
private static final char[] $TXT288 = httl.util.CharCache.getAndRemove("197");
private static final String $TXT289 = httl.util.StringCache.getAndRemove("175");
private static final char[] $TXT290 = httl.util.CharCache.getAndRemove("198");
private static final String $TXT291 = httl.util.StringCache.getAndRemove("176");
private static final char[] $TXT292 = httl.util.CharCache.getAndRemove("199");
private static final String $TXT293 = httl.util.StringCache.getAndRemove("177");
private static final char[] $TXT294 = httl.util.CharCache.getAndRemove("200");
private static final String $TXT295 = httl.util.StringCache.getAndRemove("178");
private static final char[] $TXT296 = httl.util.CharCache.getAndRemove("201");
private static final String $TXT297 = httl.util.StringCache.getAndRemove("179");
private static final char[] $TXT298 = httl.util.CharCache.getAndRemove("202");
private static final String $TXT299 = httl.util.StringCache.getAndRemove("180");
private static final char[] $TXT300 = httl.util.CharCache.getAndRemove("203");
private static final String $TXT301 = httl.util.StringCache.getAndRemove("181");
private static final char[] $TXT302 = httl.util.CharCache.getAndRemove("204");
private static final String $TXT303 = httl.util.StringCache.getAndRemove("182");
private static final char[] $TXT304 = httl.util.CharCache.getAndRemove("205");
private static final String $TXT305 = httl.util.StringCache.getAndRemove("183");
private static final char[] $TXT306 = httl.util.CharCache.getAndRemove("206");
private static final String $TXT307 = httl.util.StringCache.getAndRemove("184");
private static final char[] $TXT308 = httl.util.CharCache.getAndRemove("207");
private static final String $TXT309 = httl.util.StringCache.getAndRemove("185");
private static final char[] $TXT310 = httl.util.CharCache.getAndRemove("208");
private static final String $TXT311 = httl.util.StringCache.getAndRemove("186");
private static final char[] $TXT312 = httl.util.CharCache.getAndRemove("209");
private static final String $TXT313 = httl.util.StringCache.getAndRemove("187");
private static final char[] $TXT314 = httl.util.CharCache.getAndRemove("210");
private static final String $TXT315 = httl.util.StringCache.getAndRemove("188");
private static final char[] $TXT316 = httl.util.CharCache.getAndRemove("211");
private static final String $TXT317 = httl.util.StringCache.getAndRemove("189");
private static final char[] $TXT318 = httl.util.CharCache.getAndRemove("212");
private static final String $TXT319 = httl.util.StringCache.getAndRemove("190");
private static final char[] $TXT320 = httl.util.CharCache.getAndRemove("213");
private static final String $TXT321 = httl.util.StringCache.getAndRemove("191");
private static final char[] $TXT322 = httl.util.CharCache.getAndRemove("214");
private static final String $TXT323 = httl.util.StringCache.getAndRemove("192");
private static final char[] $TXT324 = httl.util.CharCache.getAndRemove("215");
private static final String $TXT325 = httl.util.StringCache.getAndRemove("193");
private static final char[] $TXT326 = httl.util.CharCache.getAndRemove("216");
private static final String $TXT327 = httl.util.StringCache.getAndRemove("194");
private static final char[] $TXT328 = httl.util.CharCache.getAndRemove("217");
private static final String $TXT329 = httl.util.StringCache.getAndRemove("195");
private static final char[] $TXT330 = httl.util.CharCache.getAndRemove("218");
private static final String $TXT331 = httl.util.StringCache.getAndRemove("196");
private static final char[] $TXT332 = httl.util.CharCache.getAndRemove("219");
private static final String $TXT333 = httl.util.StringCache.getAndRemove("197");
private static final char[] $TXT334 = httl.util.CharCache.getAndRemove("220");
private static final String $TXT335 = httl.util.StringCache.getAndRemove("198");
private static final char[] $TXT337 = httl.util.CharCache.getAndRemove("221");
private static final String $TXT338 = httl.util.StringCache.getAndRemove("199");
private static final char[] $TXT339 = httl.util.CharCache.getAndRemove("222");
private static final String $TXT340 = httl.util.StringCache.getAndRemove("200");
private static final char[] $TXT341 = httl.util.CharCache.getAndRemove("223");
private static final String $TXT342 = httl.util.StringCache.getAndRemove("201");
private static final char[] $TXT343 = httl.util.CharCache.getAndRemove("224");
private static final String $TXT344 = httl.util.StringCache.getAndRemove("202");
private static final char[] $TXT345 = httl.util.CharCache.getAndRemove("225");
private static final String $TXT346 = httl.util.StringCache.getAndRemove("203");
private static final char[] $TXT347 = httl.util.CharCache.getAndRemove("226");
private static final String $TXT348 = httl.util.StringCache.getAndRemove("204");
private static final char[] $TXT349 = httl.util.CharCache.getAndRemove("227");
private static final String $TXT350 = httl.util.StringCache.getAndRemove("205");
private static final char[] $TXT352 = httl.util.CharCache.getAndRemove("228");
private static final String $TXT353 = httl.util.StringCache.getAndRemove("206");
private static final char[] $TXT355 = httl.util.CharCache.getAndRemove("229");
private static final String $TXT356 = httl.util.StringCache.getAndRemove("207");
private static final char[] $TXT358 = httl.util.CharCache.getAndRemove("230");
private static final String $TXT359 = httl.util.StringCache.getAndRemove("208");
private static final char[] $TXT361 = httl.util.CharCache.getAndRemove("231");
private static final String $TXT362 = httl.util.StringCache.getAndRemove("209");
private static final char[] $TXT363 = httl.util.CharCache.getAndRemove("232");
private static final String $TXT364 = httl.util.StringCache.getAndRemove("210");
private static final char[] $TXT365 = httl.util.CharCache.getAndRemove("233");
private static final String $TXT366 = httl.util.StringCache.getAndRemove("211");
private static final char[] $TXT367 = httl.util.CharCache.getAndRemove("234");
private static final String $TXT368 = httl.util.StringCache.getAndRemove("212");
private static final char[] $TXT369 = httl.util.CharCache.getAndRemove("235");
private static final String $TXT370 = httl.util.StringCache.getAndRemove("213");
private static final char[] $TXT372 = httl.util.CharCache.getAndRemove("236");
private static final String $TXT373 = httl.util.StringCache.getAndRemove("214");
private static final char[] $TXT374 = httl.util.CharCache.getAndRemove("237");
private static final String $TXT375 = httl.util.StringCache.getAndRemove("215");
private static final char[] $TXT376 = httl.util.CharCache.getAndRemove("238");
private static final String $TXT377 = httl.util.StringCache.getAndRemove("216");
private static final char[] $TXT378 = httl.util.CharCache.getAndRemove("239");
private static final String $TXT379 = httl.util.StringCache.getAndRemove("217");
private static final char[] $TXT380 = httl.util.CharCache.getAndRemove("240");
private static final String $TXT381 = httl.util.StringCache.getAndRemove("218");
private static final char[] $TXT382 = httl.util.CharCache.getAndRemove("241");
private static final String $TXT383 = httl.util.StringCache.getAndRemove("219");
private static final char[] $TXT385 = httl.util.CharCache.getAndRemove("242");
private static final String $TXT386 = httl.util.StringCache.getAndRemove("220");
private static final char[] $TXT387 = httl.util.CharCache.getAndRemove("243");
private static final String $TXT388 = httl.util.StringCache.getAndRemove("221");
private static final char[] $TXT389 = httl.util.CharCache.getAndRemove("244");
private static final String $TXT390 = httl.util.StringCache.getAndRemove("222");
private static final char[] $TXT391 = httl.util.CharCache.getAndRemove("245");
private static final String $TXT392 = httl.util.StringCache.getAndRemove("223");
private static final char[] $TXT393 = httl.util.CharCache.getAndRemove("246");
private static final String $TXT394 = httl.util.StringCache.getAndRemove("224");
private static final char[] $TXT395 = httl.util.CharCache.getAndRemove("247");
private static final String $TXT396 = httl.util.StringCache.getAndRemove("225");
private static final char[] $TXT398 = httl.util.CharCache.getAndRemove("248");
private static final String $TXT399 = httl.util.StringCache.getAndRemove("226");
private static final char[] $TXT401 = httl.util.CharCache.getAndRemove("249");
private static final String $TXT402 = httl.util.StringCache.getAndRemove("227");
private static final char[] $TXT404 = httl.util.CharCache.getAndRemove("250");
private static final char[] $TXT405 = httl.util.CharCache.getAndRemove("251");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"jesLogo", "jeslogoWidth", "userCname", "productName", "jumpUrl", "jeslogoHeight", "passwordExpire", "JES_PAGE_EXPIRE", "theme", "menus", "expirationDate", "app", "isThird", "isFirstLogin", "lastIpAndDate", "passwordInited", "userId", "maxPageTabs", "jumpSsId", "pwdExpireDays", "envType", "activation", "jumpText"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_main_httl_html_utf_8_zh_CN_1599117819356_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object jesLogo = (java.lang.Object) $context.get("jesLogo");
	java.lang.Object jeslogoWidth = (java.lang.Object) $context.get("jeslogoWidth");
	java.lang.Object userCname = (java.lang.Object) $context.get("userCname");
	java.lang.Object productName = (java.lang.Object) $context.get("productName");
	java.lang.Object jumpUrl = (java.lang.Object) $context.get("jumpUrl");
	java.lang.Object jeslogoHeight = (java.lang.Object) $context.get("jeslogoHeight");
	java.lang.Object passwordExpire = (java.lang.Object) $context.get("passwordExpire");
	java.lang.Object JES_PAGE_EXPIRE = (java.lang.Object) $context.get("JES_PAGE_EXPIRE");
	java.lang.Object theme = (java.lang.Object) $context.get("theme");
	java.lang.Object menus = (java.lang.Object) $context.get("menus");
	java.lang.Object expirationDate = (java.lang.Object) $context.get("expirationDate");
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object isThird = (java.lang.Object) $context.get("isThird");
	java.lang.Object isFirstLogin = (java.lang.Object) $context.get("isFirstLogin");
	java.lang.Object lastIpAndDate = (java.lang.Object) $context.get("lastIpAndDate");
	java.lang.Object passwordInited = (java.lang.Object) $context.get("passwordInited");
	java.lang.Object userId = (java.lang.Object) $context.get("userId");
	java.lang.Object maxPageTabs = (java.lang.Object) $context.get("maxPageTabs");
	java.lang.Object jumpSsId = (java.lang.Object) $context.get("jumpSsId");
	java.lang.Object pwdExpireDays = (java.lang.Object) $context.get("pwdExpireDays");
	java.lang.Object envType = (java.lang.Object) $context.get("envType");
	java.lang.Object activation = (java.lang.Object) $context.get("activation");
	java.lang.Object jumpText = (java.lang.Object) $context.get("jumpText");
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")).render($output);
	$output.write($TXT1);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")).render($output);
	$output.write($TXT2);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")).render($output);
	$output.write($TXT3);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj4 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj4 instanceof char[]) $output.write(doFilter(filter, $TXT4, formatter.toChars($TXT4, (char[]) $obj4))); else $output.write(doFilter(filter, $TXT4, formatter.toString($TXT4, $obj4)));
	}
	$output.write($TXT6);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj7 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj7 instanceof char[]) $output.write(doFilter(filter, $TXT7, formatter.toChars($TXT7, (char[]) $obj7))); else $output.write(doFilter(filter, $TXT7, formatter.toString($TXT7, $obj7)));
	}
	$output.write($TXT9);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj10 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj10 instanceof char[]) $output.write(doFilter(filter, $TXT10, formatter.toChars($TXT10, (char[]) $obj10))); else $output.write(doFilter(filter, $TXT10, formatter.toString($TXT10, $obj10)));
	}
	$output.write($TXT12);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj13 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj13 instanceof char[]) $output.write(doFilter(filter, $TXT13, formatter.toChars($TXT13, (char[]) $obj13))); else $output.write(doFilter(filter, $TXT13, formatter.toString($TXT13, $obj13)));
	}
	$output.write($TXT15);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj16 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj16 instanceof char[]) $output.write(doFilter(filter, $TXT16, formatter.toChars($TXT16, (char[]) $obj16))); else $output.write(doFilter(filter, $TXT16, formatter.toString($TXT16, $obj16)));
	}
	$output.write($TXT18);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj19 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj19 instanceof char[]) $output.write(doFilter(filter, $TXT19, formatter.toChars($TXT19, (char[]) $obj19))); else $output.write(doFilter(filter, $TXT19, formatter.toString($TXT19, $obj19)));
	}
	$output.write($TXT21);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj22 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj22 instanceof char[]) $output.write(doFilter(filter, $TXT22, formatter.toChars($TXT22, (char[]) $obj22))); else $output.write(doFilter(filter, $TXT22, formatter.toString($TXT22, $obj22)));
	}
	$output.write($TXT24);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj25 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj25 instanceof char[]) $output.write(doFilter(filter, $TXT25, formatter.toChars($TXT25, (char[]) $obj25))); else $output.write(doFilter(filter, $TXT25, formatter.toString($TXT25, $obj25)));
	}
	$output.write($TXT27);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj28 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj28 instanceof char[]) $output.write(doFilter(filter, $TXT28, formatter.toChars($TXT28, (char[]) $obj28))); else $output.write(doFilter(filter, $TXT28, formatter.toString($TXT28, $obj28)));
	}
	$output.write($TXT30);
	filter = switchFilter("<script", $filter);
	$output.write($TXT31);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj32 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj32 instanceof char[]) $output.write(doFilter(filter, $TXT32, formatter.toChars($TXT32, (char[]) $obj32))); else $output.write(doFilter(filter, $TXT32, formatter.toString($TXT32, $obj32)));
	}
	$output.write($TXT34);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT35);
	filter = switchFilter("<script", $filter);
	$output.write($TXT36);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj37 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj37 instanceof char[]) $output.write(doFilter(filter, $TXT37, formatter.toChars($TXT37, (char[]) $obj37))); else $output.write(doFilter(filter, $TXT37, formatter.toString($TXT37, $obj37)));
	}
	$output.write($TXT39);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT40);
	filter = switchFilter("<script", $filter);
	$output.write($TXT41);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj42 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj42 instanceof char[]) $output.write(doFilter(filter, $TXT42, formatter.toChars($TXT42, (char[]) $obj42))); else $output.write(doFilter(filter, $TXT42, formatter.toString($TXT42, $obj42)));
	}
	$output.write($TXT44);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT45);
	filter = switchFilter("<script", $filter);
	$output.write($TXT46);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj47 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj47 instanceof char[]) $output.write(doFilter(filter, $TXT47, formatter.toChars($TXT47, (char[]) $obj47))); else $output.write(doFilter(filter, $TXT47, formatter.toString($TXT47, $obj47)));
	}
	$output.write($TXT49);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT50);
	filter = switchFilter("<script", $filter);
	$output.write($TXT51);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj52 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj52 instanceof char[]) $output.write(doFilter(filter, $TXT52, formatter.toChars($TXT52, (char[]) $obj52))); else $output.write(doFilter(filter, $TXT52, formatter.toString($TXT52, $obj52)));
	}
	$output.write($TXT54);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT55);
	filter = switchFilter("<script", $filter);
	$output.write($TXT56);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj57 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj57 instanceof char[]) $output.write(doFilter(filter, $TXT57, formatter.toChars($TXT57, (char[]) $obj57))); else $output.write(doFilter(filter, $TXT57, formatter.toString($TXT57, $obj57)));
	}
	$output.write($TXT59);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT60);
	filter = switchFilter("<script", $filter);
	$output.write($TXT61);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj62 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj62 instanceof char[]) $output.write(doFilter(filter, $TXT62, formatter.toChars($TXT62, (char[]) $obj62))); else $output.write(doFilter(filter, $TXT62, formatter.toString($TXT62, $obj62)));
	}
	$output.write($TXT64);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT65);
	filter = switchFilter("<script", $filter);
	$output.write($TXT66);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj67 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj67 instanceof char[]) $output.write(doFilter(filter, $TXT67, formatter.toChars($TXT67, (char[]) $obj67))); else $output.write(doFilter(filter, $TXT67, formatter.toString($TXT67, $obj67)));
	}
	$output.write($TXT69);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT70);
	filter = switchFilter("<script", $filter);
	$output.write($TXT71);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT72);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj73 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj73 instanceof char[]) $output.write(doFilter(filter, $TXT73, formatter.toChars($TXT73, (char[]) $obj73))); else $output.write(doFilter(filter, $TXT73, formatter.toString($TXT73, $obj73)));
	}
	$output.write($TXT75);
	if (jesLogo instanceof httl.Template) {
	((httl.Template)jesLogo).render($output);
	} else {
	Object $obj76 = (jesLogo instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jesLogo).openReader()) : jesLogo);
	if ($obj76 instanceof char[]) $output.write(doFilter(filter, $TXT76, formatter.toChars($TXT76, (char[]) $obj76))); else $output.write(doFilter(filter, $TXT76, formatter.toString($TXT76, $obj76)));
	}
	$output.write($TXT78);
	if (jeslogoWidth instanceof httl.Template) {
	((httl.Template)jeslogoWidth).render($output);
	} else {
	Object $obj79 = (jeslogoWidth instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jeslogoWidth).openReader()) : jeslogoWidth);
	if ($obj79 instanceof char[]) $output.write(doFilter(filter, $TXT79, formatter.toChars($TXT79, (char[]) $obj79))); else $output.write(doFilter(filter, $TXT79, formatter.toString($TXT79, $obj79)));
	}
	$output.write($TXT81);
	if (jeslogoHeight instanceof httl.Template) {
	((httl.Template)jeslogoHeight).render($output);
	} else {
	Object $obj82 = (jeslogoHeight instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jeslogoHeight).openReader()) : jeslogoHeight);
	if ($obj82 instanceof char[]) $output.write(doFilter(filter, $TXT82, formatter.toChars($TXT82, (char[]) $obj82))); else $output.write(doFilter(filter, $TXT82, formatter.toString($TXT82, $obj82)));
	}
	$output.write($TXT84);
	if (productName instanceof httl.Template) {
	((httl.Template)productName).render($output);
	} else {
	Object $obj85 = (productName instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)productName).openReader()) : productName);
	if ($obj85 instanceof char[]) $output.write(doFilter(filter, $TXT85, formatter.toChars($TXT85, (char[]) $obj85))); else $output.write(doFilter(filter, $TXT85, formatter.toString($TXT85, $obj85)));
	}
	$output.write($TXT87);
	if (envType instanceof httl.Template) {
	((httl.Template)envType).render($output);
	} else {
	Object $obj88 = (envType instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)envType).openReader()) : envType);
	if ($obj88 instanceof char[]) $output.write(doFilter(filter, $TXT88, formatter.toChars($TXT88, (char[]) $obj88))); else $output.write(doFilter(filter, $TXT88, formatter.toString($TXT88, $obj88)));
	}
	$output.write($TXT90);
	$output.write(doFilter(filter, $TXT91, formatter.toString($TXT91, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT92);
	if (menus instanceof httl.Template) {
	((httl.Template)menus).render($output);
	} else if (menus instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)menus).openReader(), $output);
	} else {
	Object $obj93 = menus;
	if ($obj93 instanceof char[]) $output.write(formatter.toChars($TXT93, (char[]) $obj93)); else $output.write(formatter.toString($TXT93, $obj93));
	}
	$output.write($TXT95);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj96 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj96 instanceof char[]) $output.write(doFilter(filter, $TXT96, formatter.toChars($TXT96, (char[]) $obj96))); else $output.write(doFilter(filter, $TXT96, formatter.toString($TXT96, $obj96)));
	}
	$output.write($TXT98);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj99 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj99 instanceof char[]) $output.write(doFilter(filter, $TXT99, formatter.toChars($TXT99, (char[]) $obj99))); else $output.write(doFilter(filter, $TXT99, formatter.toString($TXT99, $obj99)));
	}
	$output.write($TXT101);
	if (userId instanceof httl.Template) {
	((httl.Template)userId).render($output);
	} else {
	Object $obj102 = (userId instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)userId).openReader()) : userId);
	if ($obj102 instanceof char[]) $output.write(doFilter(filter, $TXT102, formatter.toChars($TXT102, (char[]) $obj102))); else $output.write(doFilter(filter, $TXT102, formatter.toString($TXT102, $obj102)));
	}
	$output.write($TXT104);
	if (userCname instanceof httl.Template) {
	((httl.Template)userCname).render($output);
	} else {
	Object $obj105 = (userCname instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)userCname).openReader()) : userCname);
	if ($obj105 instanceof char[]) $output.write(doFilter(filter, $TXT105, formatter.toChars($TXT105, (char[]) $obj105))); else $output.write(doFilter(filter, $TXT105, formatter.toString($TXT105, $obj105)));
	}
	$output.write($TXT107);
	$output.write(doFilter(filter, $TXT108, formatter.toString($TXT108, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.grxx"))));
	$output.write($TXT109);
	$output.write(doFilter(filter, $TXT110, formatter.toString($TXT110, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tuichu"))));
	$output.write($TXT111);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj112 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj112 instanceof char[]) $output.write(doFilter(filter, $TXT112, formatter.toChars($TXT112, (char[]) $obj112))); else $output.write(doFilter(filter, $TXT112, formatter.toString($TXT112, $obj112)));
	}
	$output.write($TXT114);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj115 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj115 instanceof char[]) $output.write(doFilter(filter, $TXT115, formatter.toChars($TXT115, (char[]) $obj115))); else $output.write(doFilter(filter, $TXT115, formatter.toString($TXT115, $obj115)));
	}
	$output.write($TXT117);
	filter = switchFilter("<script", $filter);
	$output.write($TXT118);
	if (JES_PAGE_EXPIRE instanceof httl.Template) {
	((httl.Template)JES_PAGE_EXPIRE).render($output);
	} else {
	Object $obj119 = (JES_PAGE_EXPIRE instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)JES_PAGE_EXPIRE).openReader()) : JES_PAGE_EXPIRE);
	if ($obj119 instanceof char[]) $output.write(doFilter(filter, $TXT119, formatter.toChars($TXT119, (char[]) $obj119))); else $output.write(doFilter(filter, $TXT119, formatter.toString($TXT119, $obj119)));
	}
	$output.write($TXT121);
	if (isThird instanceof httl.Template) {
	((httl.Template)isThird).render($output);
	} else {
	Object $obj122 = (isThird instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)isThird).openReader()) : isThird);
	if ($obj122 instanceof char[]) $output.write(doFilter(filter, $TXT122, formatter.toChars($TXT122, (char[]) $obj122))); else $output.write(doFilter(filter, $TXT122, formatter.toString($TXT122, $obj122)));
	}
	$output.write($TXT124);
	if (expirationDate instanceof httl.Template) {
	((httl.Template)expirationDate).render($output);
	} else {
	Object $obj125 = (expirationDate instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)expirationDate).openReader()) : expirationDate);
	if ($obj125 instanceof char[]) $output.write(doFilter(filter, $TXT125, formatter.toChars($TXT125, (char[]) $obj125))); else $output.write(doFilter(filter, $TXT125, formatter.toString($TXT125, $obj125)));
	}
	$output.write($TXT127);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj128 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj128 instanceof char[]) $output.write(doFilter(filter, $TXT128, formatter.toChars($TXT128, (char[]) $obj128))); else $output.write(doFilter(filter, $TXT128, formatter.toString($TXT128, $obj128)));
	}
	$output.write($TXT130);
	$output.write(doFilter(filter, $TXT131, formatter.toString($TXT131, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qxshoucang"))));
	$output.write($TXT132);
	$output.write(doFilter(filter, $TXT133, formatter.toString($TXT133, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jrshoucang"))));
	$output.write($TXT134);
	$output.write(doFilter(filter, $TXT135, formatter.toString($TXT135, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zzjzym"))));
	$output.write($TXT136);
	if (maxPageTabs instanceof httl.Template) {
	((httl.Template)maxPageTabs).render($output);
	} else {
	Object $obj137 = (maxPageTabs instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)maxPageTabs).openReader()) : maxPageTabs);
	if ($obj137 instanceof char[]) $output.write(doFilter(filter, $TXT137, formatter.toChars($TXT137, (char[]) $obj137))); else $output.write(doFilter(filter, $TXT137, formatter.toString($TXT137, $obj137)));
	}
	$output.write($TXT139);
	$output.write(doFilter(filter, $TXT140, formatter.toString($TXT140, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT141);
	$output.write(doFilter(filter, $TXT142, formatter.toString($TXT142, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT143);
	$output.write(doFilter(filter, $TXT144, formatter.toString($TXT144, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT145);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj146 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj146 instanceof char[]) $output.write(doFilter(filter, $TXT146, formatter.toChars($TXT146, (char[]) $obj146))); else $output.write(doFilter(filter, $TXT146, formatter.toString($TXT146, $obj146)));
	}
	$output.write($TXT148);
	$output.write(doFilter(filter, $TXT149, formatter.toString($TXT149, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.grxxxgjm"))));
	$output.write($TXT150);
	$output.write(doFilter(filter, $TXT151, formatter.toString($TXT151, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhtx"))));
	$output.write($TXT152);
	$output.write(doFilter(filter, $TXT153, formatter.toString($TXT153, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhywm"))));
	$output.write($TXT154);
	$output.write(doFilter(filter, $TXT155, formatter.toString($TXT155, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhzwm"))));
	$output.write($TXT156);
	$output.write(doFilter(filter, $TXT157, formatter.toString($TXT157, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.bmmc"))));
	$output.write($TXT158);
	$output.write(doFilter(filter, $TXT159, formatter.toString($TXT159, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhssjg"))));
	$output.write($TXT160);
	$output.write(doFilter(filter, $TXT161, formatter.toString($TXT161, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zjdh"))));
	$output.write($TXT162);
	$output.write(doFilter(filter, $TXT163, formatter.toString($TXT163, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.gsw"))));
	$output.write($TXT164);
	$output.write(doFilter(filter, $TXT165, formatter.toString($TXT165, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.sjh"))));
	$output.write($TXT166);
	$output.write(doFilter(filter, $TXT167, formatter.toString($TXT167, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srsjh"))));
	$output.write($TXT168);
	$output.write(doFilter(filter, $TXT169, formatter.toString($TXT169, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.sryx"))));
	$output.write($TXT170);
	$output.write(doFilter(filter, $TXT171, formatter.toString($TXT171, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dizhi"))));
	$output.write($TXT172);
	$output.write(doFilter(filter, $TXT173, formatter.toString($TXT173, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srdz"))));
	$output.write($TXT174);
	$output.write(doFilter(filter, $TXT175, formatter.toString($TXT175, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.miaoshu"))));
	$output.write($TXT176);
	$output.write(doFilter(filter, $TXT177, formatter.toString($TXT177, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srgrms"))));
	$output.write($TXT178);
	$output.write(doFilter(filter, $TXT179, formatter.toString($TXT179, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ti"))));
	$output.write($TXT180);
	$output.write(doFilter(filter, $TXT181, formatter.toString($TXT181, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jiao"))));
	$output.write($TXT182);
	$output.write(doFilter(filter, $TXT183, formatter.toString($TXT183, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgcg"))));
	$output.write($TXT184);
	$output.write(doFilter(filter, $TXT185, formatter.toString($TXT185, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgsb"))));
	$output.write($TXT186);
	$output.write(doFilter(filter, $TXT187, formatter.toString($TXT187, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmbnwk"))));
	$output.write($TXT188);
	$output.write(doFilter(filter, $TXT189, formatter.toString($TXT189, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmcdbxxy1"))));
	$output.write($TXT190);
	$output.write(doFilter(filter, $TXT191, formatter.toString($TXT191, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ywyhmbnhyhz"))));
	$output.write($TXT192);
	$output.write(doFilter(filter, $TXT193, formatter.toString($TXT193, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmbnwk"))));
	$output.write($TXT194);
	$output.write(doFilter(filter, $TXT195, formatter.toString($TXT195, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmcdbxxy2"))));
	$output.write($TXT196);
	$output.write(doFilter(filter, $TXT197, formatter.toString($TXT197, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzw"))));
	$output.write($TXT198);
	$output.write(doFilter(filter, $TXT199, formatter.toString($TXT199, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.gsw"))));
	$output.write($TXT200);
	$output.write(doFilter(filter, $TXT201, formatter.toString($TXT201, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dhhmbnwk"))));
	$output.write($TXT202);
	$output.write(doFilter(filter, $TXT203, formatter.toString($TXT203, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqddhhm"))));
	$output.write($TXT204);
	$output.write(doFilter(filter, $TXT205, formatter.toString($TXT205, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yxbnwk"))));
	$output.write($TXT206);
	$output.write(doFilter(filter, $TXT207, formatter.toString($TXT207, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqdyxdz"))));
	$output.write($TXT208);
	$output.write(doFilter(filter, $TXT209, formatter.toString($TXT209, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.grxxxgjm"))));
	$output.write($TXT210);
	$output.write(doFilter(filter, $TXT211, formatter.toString($TXT211, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhywm"))));
	$output.write($TXT212);
	$output.write(doFilter(filter, $TXT213, formatter.toString($TXT213, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.bnhyhz"))));
	$output.write($TXT214);
	$output.write(doFilter(filter, $TXT215, formatter.toString($TXT215, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhzwm"))));
	$output.write($TXT216);
	$output.write(doFilter(filter, $TXT217, formatter.toString($TXT217, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzw"))));
	$output.write($TXT218);
	$output.write(doFilter(filter, $TXT219, formatter.toString($TXT219, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.bmmc"))));
	$output.write($TXT220);
	$output.write(doFilter(filter, $TXT221, formatter.toString($TXT221, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhssjg"))));
	$output.write($TXT222);
	$output.write(doFilter(filter, $TXT223, formatter.toString($TXT223, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zjdh"))));
	$output.write($TXT224);
	$output.write(doFilter(filter, $TXT225, formatter.toString($TXT225, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.gsw"))));
	$output.write($TXT226);
	$output.write(doFilter(filter, $TXT227, formatter.toString($TXT227, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.sjh"))));
	$output.write($TXT228);
	$output.write(doFilter(filter, $TXT229, formatter.toString($TXT229, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqddhhm"))));
	$output.write($TXT230);
	$output.write(doFilter(filter, $TXT231, formatter.toString($TXT231, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.youxiang"))));
	$output.write($TXT232);
	$output.write(doFilter(filter, $TXT233, formatter.toString($TXT233, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqdyxdz"))));
	$output.write($TXT234);
	$output.write(doFilter(filter, $TXT235, formatter.toString($TXT235, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dizhi"))));
	$output.write($TXT236);
	$output.write(doFilter(filter, $TXT237, formatter.toString($TXT237, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.miaoshu"))));
	$output.write($TXT238);
	$output.write(doFilter(filter, $TXT239, formatter.toString($TXT239, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tijiao"))));
	$output.write($TXT240);
	$output.write(doFilter(filter, $TXT241, formatter.toString($TXT241, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgcg"))));
	$output.write($TXT242);
	$output.write(doFilter(filter, $TXT243, formatter.toString($TXT243, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgsb"))));
	$output.write($TXT244);
	$output.write(doFilter(filter, $TXT245, formatter.toString($TXT245, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dhlsxx"))));
	$output.write($TXT246);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj247 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj247 instanceof char[]) $output.write(doFilter(filter, $TXT247, formatter.toChars($TXT247, (char[]) $obj247))); else $output.write(doFilter(filter, $TXT247, formatter.toString($TXT247, $obj247)));
	}
	$output.write($TXT249);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	Object $obj250 = (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme);
	if ($obj250 instanceof char[]) $output.write(doFilter(filter, $TXT250, formatter.toChars($TXT250, (char[]) $obj250))); else $output.write(doFilter(filter, $TXT250, formatter.toString($TXT250, $obj250)));
	}
	$output.write($TXT252);
	$output.write(doFilter(filter, $TXT253, formatter.toString($TXT253, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgmm"))));
	$output.write($TXT254);
	$output.write(doFilter(filter, $TXT255, formatter.toString($TXT255, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yuanmm"))));
	$output.write($TXT256);
	$output.write(doFilter(filter, $TXT257, formatter.toString($TXT257, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrymm1"))));
	$output.write($TXT258);
	$output.write(doFilter(filter, $TXT259, formatter.toString($TXT259, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xinmm"))));
	$output.write($TXT260);
	$output.write(doFilter(filter, $TXT261, formatter.toString($TXT261, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jyszzmfh"))));
	$output.write($TXT262);
	$output.write(doFilter(filter, $TXT263, formatter.toString($TXT263, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qrmm"))));
	$output.write($TXT264);
	$output.write(doFilter(filter, $TXT265, formatter.toString($TXT265, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qzcsrmm"))));
	$output.write($TXT266);
	$output.write(doFilter(filter, $TXT267, formatter.toString($TXT267, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ti"))));
	$output.write($TXT268);
	$output.write(doFilter(filter, $TXT269, formatter.toString($TXT269, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jiao"))));
	$output.write($TXT270);
	$output.write(doFilter(filter, $TXT271, formatter.toString($TXT271, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT272);
	$output.write(doFilter(filter, $TXT273, formatter.toString($TXT273, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrymm2"))));
	$output.write($TXT274);
	$output.write(doFilter(filter, $TXT275, formatter.toString($TXT275, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT276);
	$output.write(doFilter(filter, $TXT277, formatter.toString($TXT277, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrxmm"))));
	$output.write($TXT278);
	$output.write(doFilter(filter, $TXT279, formatter.toString($TXT279, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT280);
	$output.write(doFilter(filter, $TXT281, formatter.toString($TXT281, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qcfsrmm"))));
	$output.write($TXT282);
	$output.write(doFilter(filter, $TXT283, formatter.toString($TXT283, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT284);
	$output.write(doFilter(filter, $TXT285, formatter.toString($TXT285, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xszdmmsrbyz"))));
	$output.write($TXT286);
	$output.write(doFilter(filter, $TXT287, formatter.toString($TXT287, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgmmcg"))));
	$output.write($TXT288);
	$output.write(doFilter(filter, $TXT289, formatter.toString($TXT289, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT290);
	$output.write(doFilter(filter, $TXT291, formatter.toString($TXT291, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ymmsrcw"))));
	$output.write($TXT292);
	$output.write(doFilter(filter, $TXT293, formatter.toString($TXT293, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT294);
	$output.write(doFilter(filter, $TXT295, formatter.toString($TXT295, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.fwqfm"))));
	$output.write($TXT296);
	$output.write(doFilter(filter, $TXT297, formatter.toString($TXT297, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT298);
	$output.write(doFilter(filter, $TXT299, formatter.toString($TXT299, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmgd"))));
	$output.write($TXT300);
	$output.write(doFilter(filter, $TXT301, formatter.toString($TXT301, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT302);
	$output.write(doFilter(filter, $TXT303, formatter.toString($TXT303, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmgc"))));
	$output.write($TXT304);
	$output.write(doFilter(filter, $TXT305, formatter.toString($TXT305, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT306);
	$output.write(doFilter(filter, $TXT307, formatter.toString($TXT307, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmgsbzq"))));
	$output.write($TXT308);
	$output.write(doFilter(filter, $TXT309, formatter.toString($TXT309, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT310);
	$output.write(doFilter(filter, $TXT311, formatter.toString($TXT311, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.cmmzlsjll"))));
	$output.write($TXT312);
	$output.write(doFilter(filter, $TXT313, formatter.toString($TXT313, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT314);
	$output.write(doFilter(filter, $TXT315, formatter.toString($TXT315, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.pwsun"))));
	$output.write($TXT316);
	$output.write(doFilter(filter, $TXT317, formatter.toString($TXT317, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT318);
	$output.write(doFilter(filter, $TXT319, formatter.toString($TXT319, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.pwinhcount"))));
	$output.write($TXT320);
	$output.write(doFilter(filter, $TXT321, formatter.toString($TXT321, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xkl"))));
	$output.write($TXT322);
	$output.write(doFilter(filter, $TXT323, formatter.toString($TXT323, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zsh"))));
	$output.write($TXT324);
	$output.write(doFilter(filter, $TXT325, formatter.toString($TXT325, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.swh"))));
	$output.write($TXT326);
	$output.write(doFilter(filter, $TXT327, formatter.toString($TXT327, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zwh"))));
	$output.write($TXT328);
	$output.write(doFilter(filter, $TXT329, formatter.toString($TXT329, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xwh"))));
	$output.write($TXT330);
	$output.write(doFilter(filter, $TXT331, formatter.toString($TXT331, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.wsh"))));
	$output.write($TXT332);
	$output.write(doFilter(filter, $TXT333, formatter.toString($TXT333, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zxdlz"))));
	$output.write($TXT334);
	if (activation instanceof httl.Template) {
	((httl.Template)activation).render($output);
	} else {
	Object $obj335 = (activation instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)activation).openReader()) : activation);
	if ($obj335 instanceof char[]) $output.write(doFilter(filter, $TXT335, formatter.toChars($TXT335, (char[]) $obj335))); else $output.write(doFilter(filter, $TXT335, formatter.toString($TXT335, $obj335)));
	}
	$output.write($TXT337);
	$output.write(doFilter(filter, $TXT338, formatter.toString($TXT338, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ndsyb"))));
	$output.write($TXT339);
	$output.write(doFilter(filter, $TXT340, formatter.toString($TXT340, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrjhm"))));
	$output.write($TXT341);
	$output.write(doFilter(filter, $TXT342, formatter.toString($TXT342, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tijiao"))));
	$output.write($TXT343);
	$output.write(doFilter(filter, $TXT344, formatter.toString($TXT344, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jhcg"))));
	$output.write($TXT345);
	$output.write(doFilter(filter, $TXT346, formatter.toString($TXT346, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT347);
	$output.write(doFilter(filter, $TXT348, formatter.toString($TXT348, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jhmygq"))));
	$output.write($TXT349);
	if (isFirstLogin instanceof httl.Template) {
	((httl.Template)isFirstLogin).render($output);
	} else {
	Object $obj350 = (isFirstLogin instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)isFirstLogin).openReader()) : isFirstLogin);
	if ($obj350 instanceof char[]) $output.write(doFilter(filter, $TXT350, formatter.toChars($TXT350, (char[]) $obj350))); else $output.write(doFilter(filter, $TXT350, formatter.toString($TXT350, $obj350)));
	}
	$output.write($TXT352);
	if (passwordInited instanceof httl.Template) {
	((httl.Template)passwordInited).render($output);
	} else {
	Object $obj353 = (passwordInited instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)passwordInited).openReader()) : passwordInited);
	if ($obj353 instanceof char[]) $output.write(doFilter(filter, $TXT353, formatter.toChars($TXT353, (char[]) $obj353))); else $output.write(doFilter(filter, $TXT353, formatter.toString($TXT353, $obj353)));
	}
	$output.write($TXT355);
	if (passwordExpire instanceof httl.Template) {
	((httl.Template)passwordExpire).render($output);
	} else {
	Object $obj356 = (passwordExpire instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)passwordExpire).openReader()) : passwordExpire);
	if ($obj356 instanceof char[]) $output.write(doFilter(filter, $TXT356, formatter.toChars($TXT356, (char[]) $obj356))); else $output.write(doFilter(filter, $TXT356, formatter.toString($TXT356, $obj356)));
	}
	$output.write($TXT358);
	if (pwdExpireDays instanceof httl.Template) {
	((httl.Template)pwdExpireDays).render($output);
	} else {
	Object $obj359 = (pwdExpireDays instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)pwdExpireDays).openReader()) : pwdExpireDays);
	if ($obj359 instanceof char[]) $output.write(doFilter(filter, $TXT359, formatter.toChars($TXT359, (char[]) $obj359))); else $output.write(doFilter(filter, $TXT359, formatter.toString($TXT359, $obj359)));
	}
	$output.write($TXT361);
	$output.write(doFilter(filter, $TXT362, formatter.toString($TXT362, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ndycdr"))));
	$output.write($TXT363);
	$output.write(doFilter(filter, $TXT364, formatter.toString($TXT364, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ndymmybglycz"))));
	$output.write($TXT365);
	$output.write(doFilter(filter, $TXT366, formatter.toString($TXT366, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.nycg"))));
	$output.write($TXT367);
	$output.write(doFilter(filter, $TXT368, formatter.toString($TXT368, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.twxgmm"))));
	$output.write($TXT369);
	if (lastIpAndDate instanceof httl.Template) {
	((httl.Template)lastIpAndDate).render($output);
	} else {
	Object $obj370 = (lastIpAndDate instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)lastIpAndDate).openReader()) : lastIpAndDate);
	if ($obj370 instanceof char[]) $output.write(doFilter(filter, $TXT370, formatter.toChars($TXT370, (char[]) $obj370))); else $output.write(doFilter(filter, $TXT370, formatter.toString($TXT370, $obj370)));
	}
	$output.write($TXT372);
	$output.write(doFilter(filter, $TXT373, formatter.toString($TXT373, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.nscdr"))));
	$output.write($TXT374);
	$output.write(doFilter(filter, $TXT375, formatter.toString($TXT375, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.drsj"))));
	$output.write($TXT376);
	$output.write(doFilter(filter, $TXT377, formatter.toString($TXT377, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmyxq"))));
	$output.write($TXT378);
	$output.write(doFilter(filter, $TXT379, formatter.toString($TXT379, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tian"))));
	$output.write($TXT380);
	$output.write(doFilter(filter, $TXT381, formatter.toString($TXT381, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srdh"))));
	$output.write($TXT382);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj383 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj383 instanceof char[]) $output.write(doFilter(filter, $TXT383, formatter.toChars($TXT383, (char[]) $obj383))); else $output.write(doFilter(filter, $TXT383, formatter.toString($TXT383, $obj383)));
	}
	$output.write($TXT385);
	$output.write(doFilter(filter, $TXT386, formatter.toString($TXT386, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ckls"))));
	$output.write($TXT387);
	$output.write(doFilter(filter, $TXT388, formatter.toString($TXT388, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.lxgz"))));
	$output.write($TXT389);
	$output.write(doFilter(filter, $TXT390, formatter.toString($TXT390, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qzyxx"))));
	$output.write($TXT391);
	$output.write(doFilter(filter, $TXT392, formatter.toString($TXT392, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yywdl"))));
	$output.write($TXT393);
	$output.write(doFilter(filter, $TXT394, formatter.toString($TXT394, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.fzwdlbxt"))));
	$output.write($TXT395);
	if (jumpSsId instanceof httl.Template) {
	((httl.Template)jumpSsId).render($output);
	} else {
	Object $obj396 = (jumpSsId instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jumpSsId).openReader()) : jumpSsId);
	if ($obj396 instanceof char[]) $output.write(doFilter(filter, $TXT396, formatter.toChars($TXT396, (char[]) $obj396))); else $output.write(doFilter(filter, $TXT396, formatter.toString($TXT396, $obj396)));
	}
	$output.write($TXT398);
	if (jumpUrl instanceof httl.Template) {
	((httl.Template)jumpUrl).render($output);
	} else {
	Object $obj399 = (jumpUrl instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jumpUrl).openReader()) : jumpUrl);
	if ($obj399 instanceof char[]) $output.write(doFilter(filter, $TXT399, formatter.toChars($TXT399, (char[]) $obj399))); else $output.write(doFilter(filter, $TXT399, formatter.toString($TXT399, $obj399)));
	}
	$output.write($TXT401);
	if (jumpText instanceof httl.Template) {
	((httl.Template)jumpText).render($output);
	} else {
	Object $obj402 = (jumpText instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jumpText).openReader()) : jumpText);
	if ($obj402 instanceof char[]) $output.write(doFilter(filter, $TXT402, formatter.toChars($TXT402, (char[]) $obj402))); else $output.write(doFilter(filter, $TXT402, formatter.toString($TXT402, $obj402)));
	}
	$output.write($TXT404);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT405);
}

public String getName() {
	return "/jes/view/main.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,792 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_main_httl_html_utf_8_zh_CN_1599117819356_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("62");
private static final byte[] $TXT2 = httl.util.ByteCache.getAndRemove("63");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("64");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("228");
private static final byte[] $TXT5 = httl.util.ByteCache.getAndRemove("65");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("229");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("66");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("230");
private static final byte[] $TXT9 = httl.util.ByteCache.getAndRemove("67");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("231");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("68");
private static final String $TXT12 = httl.util.StringCache.getAndRemove("232");
private static final byte[] $TXT13 = httl.util.ByteCache.getAndRemove("69");
private static final String $TXT14 = httl.util.StringCache.getAndRemove("233");
private static final byte[] $TXT15 = httl.util.ByteCache.getAndRemove("70");
private static final String $TXT16 = httl.util.StringCache.getAndRemove("234");
private static final byte[] $TXT17 = httl.util.ByteCache.getAndRemove("71");
private static final String $TXT18 = httl.util.StringCache.getAndRemove("235");
private static final byte[] $TXT19 = httl.util.ByteCache.getAndRemove("72");
private static final String $TXT20 = httl.util.StringCache.getAndRemove("236");
private static final byte[] $TXT21 = httl.util.ByteCache.getAndRemove("73");
private static final byte[] $TXT22 = httl.util.ByteCache.getAndRemove("74");
private static final String $TXT23 = httl.util.StringCache.getAndRemove("237");
private static final byte[] $TXT24 = httl.util.ByteCache.getAndRemove("75");
private static final byte[] $TXT25 = httl.util.ByteCache.getAndRemove("76");
private static final byte[] $TXT26 = httl.util.ByteCache.getAndRemove("77");
private static final String $TXT27 = httl.util.StringCache.getAndRemove("238");
private static final byte[] $TXT28 = httl.util.ByteCache.getAndRemove("78");
private static final byte[] $TXT29 = httl.util.ByteCache.getAndRemove("79");
private static final byte[] $TXT30 = httl.util.ByteCache.getAndRemove("80");
private static final String $TXT31 = httl.util.StringCache.getAndRemove("239");
private static final byte[] $TXT32 = httl.util.ByteCache.getAndRemove("81");
private static final byte[] $TXT33 = httl.util.ByteCache.getAndRemove("82");
private static final byte[] $TXT34 = httl.util.ByteCache.getAndRemove("83");
private static final String $TXT35 = httl.util.StringCache.getAndRemove("240");
private static final byte[] $TXT36 = httl.util.ByteCache.getAndRemove("84");
private static final byte[] $TXT37 = httl.util.ByteCache.getAndRemove("85");
private static final byte[] $TXT38 = httl.util.ByteCache.getAndRemove("86");
private static final String $TXT39 = httl.util.StringCache.getAndRemove("241");
private static final byte[] $TXT40 = httl.util.ByteCache.getAndRemove("87");
private static final byte[] $TXT41 = httl.util.ByteCache.getAndRemove("88");
private static final byte[] $TXT42 = httl.util.ByteCache.getAndRemove("89");
private static final String $TXT43 = httl.util.StringCache.getAndRemove("242");
private static final byte[] $TXT44 = httl.util.ByteCache.getAndRemove("90");
private static final byte[] $TXT45 = httl.util.ByteCache.getAndRemove("91");
private static final byte[] $TXT46 = httl.util.ByteCache.getAndRemove("92");
private static final String $TXT47 = httl.util.StringCache.getAndRemove("243");
private static final byte[] $TXT48 = httl.util.ByteCache.getAndRemove("93");
private static final byte[] $TXT49 = httl.util.ByteCache.getAndRemove("94");
private static final byte[] $TXT50 = httl.util.ByteCache.getAndRemove("95");
private static final String $TXT51 = httl.util.StringCache.getAndRemove("244");
private static final byte[] $TXT52 = httl.util.ByteCache.getAndRemove("96");
private static final byte[] $TXT53 = httl.util.ByteCache.getAndRemove("97");
private static final byte[] $TXT54 = httl.util.ByteCache.getAndRemove("98");
private static final byte[] $TXT55 = httl.util.ByteCache.getAndRemove("99");
private static final String $TXT56 = httl.util.StringCache.getAndRemove("245");
private static final byte[] $TXT57 = httl.util.ByteCache.getAndRemove("100");
private static final String $TXT58 = httl.util.StringCache.getAndRemove("246");
private static final byte[] $TXT59 = httl.util.ByteCache.getAndRemove("101");
private static final String $TXT60 = httl.util.StringCache.getAndRemove("247");
private static final byte[] $TXT61 = httl.util.ByteCache.getAndRemove("102");
private static final String $TXT62 = httl.util.StringCache.getAndRemove("248");
private static final byte[] $TXT63 = httl.util.ByteCache.getAndRemove("103");
private static final String $TXT64 = httl.util.StringCache.getAndRemove("249");
private static final byte[] $TXT65 = httl.util.ByteCache.getAndRemove("104");
private static final String $TXT66 = httl.util.StringCache.getAndRemove("250");
private static final byte[] $TXT67 = httl.util.ByteCache.getAndRemove("105");
private static final String $TXT68 = httl.util.StringCache.getAndRemove("251");
private static final byte[] $TXT69 = httl.util.ByteCache.getAndRemove("106");
private static final String $TXT70 = httl.util.StringCache.getAndRemove("252");
private static final byte[] $TXT71 = httl.util.ByteCache.getAndRemove("107");
private static final String $TXT72 = httl.util.StringCache.getAndRemove("253");
private static final byte[] $TXT73 = httl.util.ByteCache.getAndRemove("108");
private static final String $TXT74 = httl.util.StringCache.getAndRemove("254");
private static final byte[] $TXT75 = httl.util.ByteCache.getAndRemove("109");
private static final String $TXT76 = httl.util.StringCache.getAndRemove("255");
private static final byte[] $TXT77 = httl.util.ByteCache.getAndRemove("110");
private static final String $TXT78 = httl.util.StringCache.getAndRemove("256");
private static final byte[] $TXT79 = httl.util.ByteCache.getAndRemove("111");
private static final String $TXT80 = httl.util.StringCache.getAndRemove("257");
private static final byte[] $TXT81 = httl.util.ByteCache.getAndRemove("112");
private static final String $TXT82 = httl.util.StringCache.getAndRemove("258");
private static final byte[] $TXT83 = httl.util.ByteCache.getAndRemove("113");
private static final String $TXT84 = httl.util.StringCache.getAndRemove("259");
private static final byte[] $TXT85 = httl.util.ByteCache.getAndRemove("114");
private static final String $TXT86 = httl.util.StringCache.getAndRemove("260");
private static final byte[] $TXT87 = httl.util.ByteCache.getAndRemove("115");
private static final byte[] $TXT88 = httl.util.ByteCache.getAndRemove("116");
private static final String $TXT89 = httl.util.StringCache.getAndRemove("261");
private static final byte[] $TXT90 = httl.util.ByteCache.getAndRemove("117");
private static final String $TXT91 = httl.util.StringCache.getAndRemove("262");
private static final byte[] $TXT92 = httl.util.ByteCache.getAndRemove("118");
private static final String $TXT93 = httl.util.StringCache.getAndRemove("263");
private static final byte[] $TXT94 = httl.util.ByteCache.getAndRemove("119");
private static final String $TXT95 = httl.util.StringCache.getAndRemove("264");
private static final byte[] $TXT96 = httl.util.ByteCache.getAndRemove("120");
private static final String $TXT97 = httl.util.StringCache.getAndRemove("265");
private static final byte[] $TXT98 = httl.util.ByteCache.getAndRemove("121");
private static final String $TXT99 = httl.util.StringCache.getAndRemove("266");
private static final byte[] $TXT100 = httl.util.ByteCache.getAndRemove("122");
private static final String $TXT101 = httl.util.StringCache.getAndRemove("267");
private static final byte[] $TXT102 = httl.util.ByteCache.getAndRemove("123");
private static final String $TXT103 = httl.util.StringCache.getAndRemove("268");
private static final byte[] $TXT104 = httl.util.ByteCache.getAndRemove("124");
private static final String $TXT105 = httl.util.StringCache.getAndRemove("269");
private static final byte[] $TXT106 = httl.util.ByteCache.getAndRemove("125");
private static final String $TXT107 = httl.util.StringCache.getAndRemove("270");
private static final byte[] $TXT108 = httl.util.ByteCache.getAndRemove("126");
private static final String $TXT109 = httl.util.StringCache.getAndRemove("271");
private static final byte[] $TXT110 = httl.util.ByteCache.getAndRemove("127");
private static final String $TXT111 = httl.util.StringCache.getAndRemove("272");
private static final byte[] $TXT112 = httl.util.ByteCache.getAndRemove("128");
private static final String $TXT113 = httl.util.StringCache.getAndRemove("273");
private static final byte[] $TXT114 = httl.util.ByteCache.getAndRemove("129");
private static final String $TXT115 = httl.util.StringCache.getAndRemove("274");
private static final byte[] $TXT116 = httl.util.ByteCache.getAndRemove("130");
private static final String $TXT117 = httl.util.StringCache.getAndRemove("275");
private static final byte[] $TXT118 = httl.util.ByteCache.getAndRemove("131");
private static final String $TXT119 = httl.util.StringCache.getAndRemove("276");
private static final byte[] $TXT120 = httl.util.ByteCache.getAndRemove("132");
private static final String $TXT121 = httl.util.StringCache.getAndRemove("277");
private static final byte[] $TXT122 = httl.util.ByteCache.getAndRemove("133");
private static final String $TXT123 = httl.util.StringCache.getAndRemove("278");
private static final byte[] $TXT124 = httl.util.ByteCache.getAndRemove("134");
private static final String $TXT125 = httl.util.StringCache.getAndRemove("279");
private static final byte[] $TXT126 = httl.util.ByteCache.getAndRemove("135");
private static final String $TXT127 = httl.util.StringCache.getAndRemove("280");
private static final byte[] $TXT128 = httl.util.ByteCache.getAndRemove("136");
private static final String $TXT129 = httl.util.StringCache.getAndRemove("281");
private static final byte[] $TXT130 = httl.util.ByteCache.getAndRemove("137");
private static final String $TXT131 = httl.util.StringCache.getAndRemove("282");
private static final byte[] $TXT132 = httl.util.ByteCache.getAndRemove("138");
private static final String $TXT133 = httl.util.StringCache.getAndRemove("283");
private static final byte[] $TXT134 = httl.util.ByteCache.getAndRemove("139");
private static final String $TXT135 = httl.util.StringCache.getAndRemove("284");
private static final byte[] $TXT136 = httl.util.ByteCache.getAndRemove("140");
private static final String $TXT137 = httl.util.StringCache.getAndRemove("285");
private static final byte[] $TXT138 = httl.util.ByteCache.getAndRemove("141");
private static final String $TXT139 = httl.util.StringCache.getAndRemove("286");
private static final byte[] $TXT140 = httl.util.ByteCache.getAndRemove("142");
private static final String $TXT141 = httl.util.StringCache.getAndRemove("287");
private static final byte[] $TXT142 = httl.util.ByteCache.getAndRemove("143");
private static final String $TXT143 = httl.util.StringCache.getAndRemove("288");
private static final byte[] $TXT144 = httl.util.ByteCache.getAndRemove("144");
private static final String $TXT145 = httl.util.StringCache.getAndRemove("289");
private static final byte[] $TXT146 = httl.util.ByteCache.getAndRemove("145");
private static final String $TXT147 = httl.util.StringCache.getAndRemove("290");
private static final byte[] $TXT148 = httl.util.ByteCache.getAndRemove("146");
private static final String $TXT149 = httl.util.StringCache.getAndRemove("291");
private static final byte[] $TXT150 = httl.util.ByteCache.getAndRemove("147");
private static final String $TXT151 = httl.util.StringCache.getAndRemove("292");
private static final byte[] $TXT152 = httl.util.ByteCache.getAndRemove("148");
private static final String $TXT153 = httl.util.StringCache.getAndRemove("293");
private static final byte[] $TXT154 = httl.util.ByteCache.getAndRemove("149");
private static final String $TXT155 = httl.util.StringCache.getAndRemove("294");
private static final byte[] $TXT156 = httl.util.ByteCache.getAndRemove("150");
private static final String $TXT157 = httl.util.StringCache.getAndRemove("295");
private static final byte[] $TXT158 = httl.util.ByteCache.getAndRemove("151");
private static final String $TXT159 = httl.util.StringCache.getAndRemove("296");
private static final byte[] $TXT160 = httl.util.ByteCache.getAndRemove("152");
private static final String $TXT161 = httl.util.StringCache.getAndRemove("297");
private static final byte[] $TXT162 = httl.util.ByteCache.getAndRemove("153");
private static final String $TXT163 = httl.util.StringCache.getAndRemove("298");
private static final byte[] $TXT164 = httl.util.ByteCache.getAndRemove("154");
private static final String $TXT165 = httl.util.StringCache.getAndRemove("299");
private static final byte[] $TXT166 = httl.util.ByteCache.getAndRemove("155");
private static final String $TXT167 = httl.util.StringCache.getAndRemove("300");
private static final byte[] $TXT168 = httl.util.ByteCache.getAndRemove("156");
private static final String $TXT169 = httl.util.StringCache.getAndRemove("301");
private static final byte[] $TXT170 = httl.util.ByteCache.getAndRemove("157");
private static final String $TXT171 = httl.util.StringCache.getAndRemove("302");
private static final byte[] $TXT172 = httl.util.ByteCache.getAndRemove("158");
private static final String $TXT173 = httl.util.StringCache.getAndRemove("303");
private static final byte[] $TXT174 = httl.util.ByteCache.getAndRemove("159");
private static final String $TXT175 = httl.util.StringCache.getAndRemove("304");
private static final byte[] $TXT176 = httl.util.ByteCache.getAndRemove("160");
private static final String $TXT177 = httl.util.StringCache.getAndRemove("305");
private static final byte[] $TXT178 = httl.util.ByteCache.getAndRemove("161");
private static final String $TXT179 = httl.util.StringCache.getAndRemove("306");
private static final byte[] $TXT180 = httl.util.ByteCache.getAndRemove("162");
private static final String $TXT181 = httl.util.StringCache.getAndRemove("307");
private static final byte[] $TXT182 = httl.util.ByteCache.getAndRemove("163");
private static final String $TXT183 = httl.util.StringCache.getAndRemove("308");
private static final byte[] $TXT184 = httl.util.ByteCache.getAndRemove("164");
private static final String $TXT185 = httl.util.StringCache.getAndRemove("309");
private static final byte[] $TXT186 = httl.util.ByteCache.getAndRemove("165");
private static final String $TXT187 = httl.util.StringCache.getAndRemove("310");
private static final byte[] $TXT188 = httl.util.ByteCache.getAndRemove("166");
private static final String $TXT189 = httl.util.StringCache.getAndRemove("311");
private static final byte[] $TXT190 = httl.util.ByteCache.getAndRemove("167");
private static final String $TXT191 = httl.util.StringCache.getAndRemove("312");
private static final byte[] $TXT192 = httl.util.ByteCache.getAndRemove("168");
private static final String $TXT193 = httl.util.StringCache.getAndRemove("313");
private static final byte[] $TXT194 = httl.util.ByteCache.getAndRemove("169");
private static final String $TXT195 = httl.util.StringCache.getAndRemove("314");
private static final byte[] $TXT196 = httl.util.ByteCache.getAndRemove("170");
private static final String $TXT197 = httl.util.StringCache.getAndRemove("315");
private static final byte[] $TXT198 = httl.util.ByteCache.getAndRemove("171");
private static final String $TXT199 = httl.util.StringCache.getAndRemove("316");
private static final byte[] $TXT200 = httl.util.ByteCache.getAndRemove("172");
private static final String $TXT201 = httl.util.StringCache.getAndRemove("317");
private static final byte[] $TXT202 = httl.util.ByteCache.getAndRemove("173");
private static final String $TXT203 = httl.util.StringCache.getAndRemove("318");
private static final byte[] $TXT204 = httl.util.ByteCache.getAndRemove("174");
private static final String $TXT205 = httl.util.StringCache.getAndRemove("319");
private static final byte[] $TXT206 = httl.util.ByteCache.getAndRemove("175");
private static final String $TXT207 = httl.util.StringCache.getAndRemove("320");
private static final byte[] $TXT208 = httl.util.ByteCache.getAndRemove("176");
private static final String $TXT209 = httl.util.StringCache.getAndRemove("321");
private static final byte[] $TXT210 = httl.util.ByteCache.getAndRemove("177");
private static final String $TXT211 = httl.util.StringCache.getAndRemove("322");
private static final byte[] $TXT212 = httl.util.ByteCache.getAndRemove("178");
private static final String $TXT213 = httl.util.StringCache.getAndRemove("323");
private static final byte[] $TXT214 = httl.util.ByteCache.getAndRemove("179");
private static final String $TXT215 = httl.util.StringCache.getAndRemove("324");
private static final byte[] $TXT216 = httl.util.ByteCache.getAndRemove("180");
private static final String $TXT217 = httl.util.StringCache.getAndRemove("325");
private static final byte[] $TXT218 = httl.util.ByteCache.getAndRemove("181");
private static final String $TXT219 = httl.util.StringCache.getAndRemove("326");
private static final byte[] $TXT220 = httl.util.ByteCache.getAndRemove("182");
private static final String $TXT221 = httl.util.StringCache.getAndRemove("327");
private static final byte[] $TXT222 = httl.util.ByteCache.getAndRemove("183");
private static final String $TXT223 = httl.util.StringCache.getAndRemove("328");
private static final byte[] $TXT224 = httl.util.ByteCache.getAndRemove("184");
private static final String $TXT225 = httl.util.StringCache.getAndRemove("329");
private static final byte[] $TXT226 = httl.util.ByteCache.getAndRemove("185");
private static final String $TXT227 = httl.util.StringCache.getAndRemove("330");
private static final byte[] $TXT228 = httl.util.ByteCache.getAndRemove("186");
private static final String $TXT229 = httl.util.StringCache.getAndRemove("331");
private static final byte[] $TXT230 = httl.util.ByteCache.getAndRemove("187");
private static final String $TXT231 = httl.util.StringCache.getAndRemove("332");
private static final byte[] $TXT232 = httl.util.ByteCache.getAndRemove("188");
private static final String $TXT233 = httl.util.StringCache.getAndRemove("333");
private static final byte[] $TXT234 = httl.util.ByteCache.getAndRemove("189");
private static final String $TXT235 = httl.util.StringCache.getAndRemove("334");
private static final byte[] $TXT236 = httl.util.ByteCache.getAndRemove("190");
private static final String $TXT237 = httl.util.StringCache.getAndRemove("335");
private static final byte[] $TXT238 = httl.util.ByteCache.getAndRemove("191");
private static final String $TXT239 = httl.util.StringCache.getAndRemove("336");
private static final byte[] $TXT240 = httl.util.ByteCache.getAndRemove("192");
private static final String $TXT241 = httl.util.StringCache.getAndRemove("337");
private static final byte[] $TXT242 = httl.util.ByteCache.getAndRemove("193");
private static final String $TXT243 = httl.util.StringCache.getAndRemove("338");
private static final byte[] $TXT244 = httl.util.ByteCache.getAndRemove("194");
private static final String $TXT245 = httl.util.StringCache.getAndRemove("339");
private static final byte[] $TXT246 = httl.util.ByteCache.getAndRemove("195");
private static final String $TXT247 = httl.util.StringCache.getAndRemove("340");
private static final byte[] $TXT248 = httl.util.ByteCache.getAndRemove("196");
private static final String $TXT249 = httl.util.StringCache.getAndRemove("341");
private static final byte[] $TXT250 = httl.util.ByteCache.getAndRemove("197");
private static final String $TXT251 = httl.util.StringCache.getAndRemove("342");
private static final byte[] $TXT252 = httl.util.ByteCache.getAndRemove("198");
private static final String $TXT253 = httl.util.StringCache.getAndRemove("343");
private static final byte[] $TXT254 = httl.util.ByteCache.getAndRemove("199");
private static final String $TXT255 = httl.util.StringCache.getAndRemove("344");
private static final byte[] $TXT256 = httl.util.ByteCache.getAndRemove("200");
private static final String $TXT257 = httl.util.StringCache.getAndRemove("345");
private static final byte[] $TXT258 = httl.util.ByteCache.getAndRemove("201");
private static final String $TXT259 = httl.util.StringCache.getAndRemove("346");
private static final byte[] $TXT260 = httl.util.ByteCache.getAndRemove("202");
private static final String $TXT261 = httl.util.StringCache.getAndRemove("347");
private static final byte[] $TXT262 = httl.util.ByteCache.getAndRemove("203");
private static final String $TXT263 = httl.util.StringCache.getAndRemove("348");
private static final byte[] $TXT264 = httl.util.ByteCache.getAndRemove("204");
private static final String $TXT265 = httl.util.StringCache.getAndRemove("349");
private static final byte[] $TXT266 = httl.util.ByteCache.getAndRemove("205");
private static final String $TXT267 = httl.util.StringCache.getAndRemove("350");
private static final byte[] $TXT268 = httl.util.ByteCache.getAndRemove("206");
private static final String $TXT269 = httl.util.StringCache.getAndRemove("351");
private static final byte[] $TXT270 = httl.util.ByteCache.getAndRemove("207");
private static final String $TXT271 = httl.util.StringCache.getAndRemove("352");
private static final byte[] $TXT272 = httl.util.ByteCache.getAndRemove("208");
private static final String $TXT273 = httl.util.StringCache.getAndRemove("353");
private static final byte[] $TXT274 = httl.util.ByteCache.getAndRemove("209");
private static final String $TXT275 = httl.util.StringCache.getAndRemove("354");
private static final byte[] $TXT276 = httl.util.ByteCache.getAndRemove("210");
private static final String $TXT277 = httl.util.StringCache.getAndRemove("355");
private static final byte[] $TXT278 = httl.util.ByteCache.getAndRemove("211");
private static final String $TXT279 = httl.util.StringCache.getAndRemove("356");
private static final byte[] $TXT280 = httl.util.ByteCache.getAndRemove("212");
private static final String $TXT281 = httl.util.StringCache.getAndRemove("357");
private static final byte[] $TXT282 = httl.util.ByteCache.getAndRemove("213");
private static final String $TXT283 = httl.util.StringCache.getAndRemove("358");
private static final byte[] $TXT284 = httl.util.ByteCache.getAndRemove("214");
private static final String $TXT285 = httl.util.StringCache.getAndRemove("359");
private static final byte[] $TXT286 = httl.util.ByteCache.getAndRemove("215");
private static final String $TXT287 = httl.util.StringCache.getAndRemove("360");
private static final byte[] $TXT288 = httl.util.ByteCache.getAndRemove("216");
private static final String $TXT289 = httl.util.StringCache.getAndRemove("361");
private static final byte[] $TXT290 = httl.util.ByteCache.getAndRemove("217");
private static final String $TXT291 = httl.util.StringCache.getAndRemove("362");
private static final byte[] $TXT292 = httl.util.ByteCache.getAndRemove("218");
private static final String $TXT293 = httl.util.StringCache.getAndRemove("363");
private static final byte[] $TXT294 = httl.util.ByteCache.getAndRemove("219");
private static final String $TXT295 = httl.util.StringCache.getAndRemove("364");
private static final byte[] $TXT296 = httl.util.ByteCache.getAndRemove("220");
private static final String $TXT297 = httl.util.StringCache.getAndRemove("365");
private static final byte[] $TXT298 = httl.util.ByteCache.getAndRemove("221");
private static final String $TXT299 = httl.util.StringCache.getAndRemove("366");
private static final byte[] $TXT300 = httl.util.ByteCache.getAndRemove("222");
private static final String $TXT301 = httl.util.StringCache.getAndRemove("367");
private static final byte[] $TXT302 = httl.util.ByteCache.getAndRemove("223");
private static final String $TXT303 = httl.util.StringCache.getAndRemove("368");
private static final byte[] $TXT304 = httl.util.ByteCache.getAndRemove("224");
private static final String $TXT305 = httl.util.StringCache.getAndRemove("369");
private static final byte[] $TXT306 = httl.util.ByteCache.getAndRemove("225");
private static final String $TXT307 = httl.util.StringCache.getAndRemove("370");
private static final byte[] $TXT308 = httl.util.ByteCache.getAndRemove("226");
private static final String $TXT309 = httl.util.StringCache.getAndRemove("371");
private static final byte[] $TXT310 = httl.util.ByteCache.getAndRemove("227");
private static final String $TXT311 = httl.util.StringCache.getAndRemove("372");
private static final byte[] $TXT312 = httl.util.ByteCache.getAndRemove("228");
private static final String $TXT313 = httl.util.StringCache.getAndRemove("373");
private static final byte[] $TXT314 = httl.util.ByteCache.getAndRemove("229");
private static final String $TXT315 = httl.util.StringCache.getAndRemove("374");
private static final byte[] $TXT316 = httl.util.ByteCache.getAndRemove("230");
private static final String $TXT317 = httl.util.StringCache.getAndRemove("375");
private static final byte[] $TXT318 = httl.util.ByteCache.getAndRemove("231");
private static final String $TXT319 = httl.util.StringCache.getAndRemove("376");
private static final byte[] $TXT320 = httl.util.ByteCache.getAndRemove("232");
private static final String $TXT321 = httl.util.StringCache.getAndRemove("377");
private static final byte[] $TXT322 = httl.util.ByteCache.getAndRemove("233");
private static final String $TXT323 = httl.util.StringCache.getAndRemove("378");
private static final byte[] $TXT324 = httl.util.ByteCache.getAndRemove("234");
private static final String $TXT325 = httl.util.StringCache.getAndRemove("379");
private static final byte[] $TXT326 = httl.util.ByteCache.getAndRemove("235");
private static final String $TXT327 = httl.util.StringCache.getAndRemove("380");
private static final byte[] $TXT328 = httl.util.ByteCache.getAndRemove("236");
private static final String $TXT329 = httl.util.StringCache.getAndRemove("381");
private static final byte[] $TXT330 = httl.util.ByteCache.getAndRemove("237");
private static final String $TXT331 = httl.util.StringCache.getAndRemove("382");
private static final byte[] $TXT332 = httl.util.ByteCache.getAndRemove("238");
private static final String $TXT333 = httl.util.StringCache.getAndRemove("383");
private static final byte[] $TXT334 = httl.util.ByteCache.getAndRemove("239");
private static final String $TXT335 = httl.util.StringCache.getAndRemove("384");
private static final byte[] $TXT336 = httl.util.ByteCache.getAndRemove("240");
private static final String $TXT337 = httl.util.StringCache.getAndRemove("385");
private static final byte[] $TXT338 = httl.util.ByteCache.getAndRemove("241");
private static final String $TXT339 = httl.util.StringCache.getAndRemove("386");
private static final byte[] $TXT340 = httl.util.ByteCache.getAndRemove("242");
private static final String $TXT341 = httl.util.StringCache.getAndRemove("387");
private static final byte[] $TXT342 = httl.util.ByteCache.getAndRemove("243");
private static final String $TXT343 = httl.util.StringCache.getAndRemove("388");
private static final byte[] $TXT344 = httl.util.ByteCache.getAndRemove("244");
private static final String $TXT345 = httl.util.StringCache.getAndRemove("389");
private static final byte[] $TXT346 = httl.util.ByteCache.getAndRemove("245");
private static final String $TXT347 = httl.util.StringCache.getAndRemove("390");
private static final byte[] $TXT348 = httl.util.ByteCache.getAndRemove("246");
private static final String $TXT349 = httl.util.StringCache.getAndRemove("391");
private static final byte[] $TXT350 = httl.util.ByteCache.getAndRemove("247");
private static final String $TXT351 = httl.util.StringCache.getAndRemove("392");
private static final byte[] $TXT352 = httl.util.ByteCache.getAndRemove("248");
private static final String $TXT353 = httl.util.StringCache.getAndRemove("393");
private static final byte[] $TXT354 = httl.util.ByteCache.getAndRemove("249");
private static final String $TXT355 = httl.util.StringCache.getAndRemove("394");
private static final byte[] $TXT356 = httl.util.ByteCache.getAndRemove("250");
private static final byte[] $TXT357 = httl.util.ByteCache.getAndRemove("251");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"jesLogo", "jeslogoWidth", "userCname", "productName", "jumpUrl", "jeslogoHeight", "passwordExpire", "JES_PAGE_EXPIRE", "theme", "menus", "expirationDate", "app", "isThird", "isFirstLogin", "lastIpAndDate", "passwordInited", "userId", "maxPageTabs", "jumpSsId", "pwdExpireDays", "envType", "activation", "jumpText"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_main_httl_html_utf_8_zh_CN_1599117819356_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object jesLogo = (java.lang.Object) $context.get("jesLogo");
	java.lang.Object jeslogoWidth = (java.lang.Object) $context.get("jeslogoWidth");
	java.lang.Object userCname = (java.lang.Object) $context.get("userCname");
	java.lang.Object productName = (java.lang.Object) $context.get("productName");
	java.lang.Object jumpUrl = (java.lang.Object) $context.get("jumpUrl");
	java.lang.Object jeslogoHeight = (java.lang.Object) $context.get("jeslogoHeight");
	java.lang.Object passwordExpire = (java.lang.Object) $context.get("passwordExpire");
	java.lang.Object JES_PAGE_EXPIRE = (java.lang.Object) $context.get("JES_PAGE_EXPIRE");
	java.lang.Object theme = (java.lang.Object) $context.get("theme");
	java.lang.Object menus = (java.lang.Object) $context.get("menus");
	java.lang.Object expirationDate = (java.lang.Object) $context.get("expirationDate");
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object isThird = (java.lang.Object) $context.get("isThird");
	java.lang.Object isFirstLogin = (java.lang.Object) $context.get("isFirstLogin");
	java.lang.Object lastIpAndDate = (java.lang.Object) $context.get("lastIpAndDate");
	java.lang.Object passwordInited = (java.lang.Object) $context.get("passwordInited");
	java.lang.Object userId = (java.lang.Object) $context.get("userId");
	java.lang.Object maxPageTabs = (java.lang.Object) $context.get("maxPageTabs");
	java.lang.Object jumpSsId = (java.lang.Object) $context.get("jumpSsId");
	java.lang.Object pwdExpireDays = (java.lang.Object) $context.get("pwdExpireDays");
	java.lang.Object envType = (java.lang.Object) $context.get("envType");
	java.lang.Object activation = (java.lang.Object) $context.get("activation");
	java.lang.Object jumpText = (java.lang.Object) $context.get("jumpText");
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")).render($output);
	$output.write($TXT1);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")).render($output);
	$output.write($TXT2);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")).render($output);
	$output.write($TXT3);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT4, formatter.toBytes($TXT4, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT5);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT6, formatter.toBytes($TXT6, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT7);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT8, formatter.toBytes($TXT8, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT9);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT10, formatter.toBytes($TXT10, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT11);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT12, formatter.toBytes($TXT12, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT13);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT14, formatter.toBytes($TXT14, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT15);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT16, formatter.toBytes($TXT16, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT17);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT18, formatter.toBytes($TXT18, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT19);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT20, formatter.toBytes($TXT20, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT21);
	filter = switchFilter("<script", $filter);
	$output.write($TXT22);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT23, formatter.toBytes($TXT23, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT24);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT25);
	filter = switchFilter("<script", $filter);
	$output.write($TXT26);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT27, formatter.toBytes($TXT27, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT28);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT29);
	filter = switchFilter("<script", $filter);
	$output.write($TXT30);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT31, formatter.toBytes($TXT31, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT32);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT33);
	filter = switchFilter("<script", $filter);
	$output.write($TXT34);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT35, formatter.toBytes($TXT35, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT36);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT37);
	filter = switchFilter("<script", $filter);
	$output.write($TXT38);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT39, formatter.toBytes($TXT39, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT40);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT41);
	filter = switchFilter("<script", $filter);
	$output.write($TXT42);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT43, formatter.toBytes($TXT43, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT44);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT45);
	filter = switchFilter("<script", $filter);
	$output.write($TXT46);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT47, formatter.toBytes($TXT47, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT48);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT49);
	filter = switchFilter("<script", $filter);
	$output.write($TXT50);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT51, formatter.toBytes($TXT51, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT52);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT53);
	filter = switchFilter("<script", $filter);
	$output.write($TXT54);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT55);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT56, formatter.toBytes($TXT56, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT57);
	if (jesLogo instanceof httl.Template) {
	((httl.Template)jesLogo).render($output);
	} else {
	$output.write(doFilter(filter, $TXT58, formatter.toBytes($TXT58, (jesLogo instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jesLogo).openReader()) : jesLogo))));
	}
	$output.write($TXT59);
	if (jeslogoWidth instanceof httl.Template) {
	((httl.Template)jeslogoWidth).render($output);
	} else {
	$output.write(doFilter(filter, $TXT60, formatter.toBytes($TXT60, (jeslogoWidth instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jeslogoWidth).openReader()) : jeslogoWidth))));
	}
	$output.write($TXT61);
	if (jeslogoHeight instanceof httl.Template) {
	((httl.Template)jeslogoHeight).render($output);
	} else {
	$output.write(doFilter(filter, $TXT62, formatter.toBytes($TXT62, (jeslogoHeight instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jeslogoHeight).openReader()) : jeslogoHeight))));
	}
	$output.write($TXT63);
	if (productName instanceof httl.Template) {
	((httl.Template)productName).render($output);
	} else {
	$output.write(doFilter(filter, $TXT64, formatter.toBytes($TXT64, (productName instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)productName).openReader()) : productName))));
	}
	$output.write($TXT65);
	if (envType instanceof httl.Template) {
	((httl.Template)envType).render($output);
	} else {
	$output.write(doFilter(filter, $TXT66, formatter.toBytes($TXT66, (envType instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)envType).openReader()) : envType))));
	}
	$output.write($TXT67);
	$output.write(doFilter(filter, $TXT68, formatter.toBytes($TXT68, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT69);
	if (menus instanceof httl.Template) {
	((httl.Template)menus).render($output);
	} else if (menus instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)menus).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT70, menus));
	}
	$output.write($TXT71);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT72, formatter.toBytes($TXT72, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT73);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT74, formatter.toBytes($TXT74, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT75);
	if (userId instanceof httl.Template) {
	((httl.Template)userId).render($output);
	} else {
	$output.write(doFilter(filter, $TXT76, formatter.toBytes($TXT76, (userId instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)userId).openReader()) : userId))));
	}
	$output.write($TXT77);
	if (userCname instanceof httl.Template) {
	((httl.Template)userCname).render($output);
	} else {
	$output.write(doFilter(filter, $TXT78, formatter.toBytes($TXT78, (userCname instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)userCname).openReader()) : userCname))));
	}
	$output.write($TXT79);
	$output.write(doFilter(filter, $TXT80, formatter.toBytes($TXT80, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.grxx"))));
	$output.write($TXT81);
	$output.write(doFilter(filter, $TXT82, formatter.toBytes($TXT82, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tuichu"))));
	$output.write($TXT83);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT84, formatter.toBytes($TXT84, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT85);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT86, formatter.toBytes($TXT86, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT87);
	filter = switchFilter("<script", $filter);
	$output.write($TXT88);
	if (JES_PAGE_EXPIRE instanceof httl.Template) {
	((httl.Template)JES_PAGE_EXPIRE).render($output);
	} else {
	$output.write(doFilter(filter, $TXT89, formatter.toBytes($TXT89, (JES_PAGE_EXPIRE instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)JES_PAGE_EXPIRE).openReader()) : JES_PAGE_EXPIRE))));
	}
	$output.write($TXT90);
	if (isThird instanceof httl.Template) {
	((httl.Template)isThird).render($output);
	} else {
	$output.write(doFilter(filter, $TXT91, formatter.toBytes($TXT91, (isThird instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)isThird).openReader()) : isThird))));
	}
	$output.write($TXT92);
	if (expirationDate instanceof httl.Template) {
	((httl.Template)expirationDate).render($output);
	} else {
	$output.write(doFilter(filter, $TXT93, formatter.toBytes($TXT93, (expirationDate instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)expirationDate).openReader()) : expirationDate))));
	}
	$output.write($TXT94);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT95, formatter.toBytes($TXT95, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT96);
	$output.write(doFilter(filter, $TXT97, formatter.toBytes($TXT97, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qxshoucang"))));
	$output.write($TXT98);
	$output.write(doFilter(filter, $TXT99, formatter.toBytes($TXT99, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jrshoucang"))));
	$output.write($TXT100);
	$output.write(doFilter(filter, $TXT101, formatter.toBytes($TXT101, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zzjzym"))));
	$output.write($TXT102);
	if (maxPageTabs instanceof httl.Template) {
	((httl.Template)maxPageTabs).render($output);
	} else {
	$output.write(doFilter(filter, $TXT103, formatter.toBytes($TXT103, (maxPageTabs instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)maxPageTabs).openReader()) : maxPageTabs))));
	}
	$output.write($TXT104);
	$output.write(doFilter(filter, $TXT105, formatter.toBytes($TXT105, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT106);
	$output.write(doFilter(filter, $TXT107, formatter.toBytes($TXT107, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT108);
	$output.write(doFilter(filter, $TXT109, formatter.toBytes($TXT109, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.shouye"))));
	$output.write($TXT110);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT111, formatter.toBytes($TXT111, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT112);
	$output.write(doFilter(filter, $TXT113, formatter.toBytes($TXT113, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.grxxxgjm"))));
	$output.write($TXT114);
	$output.write(doFilter(filter, $TXT115, formatter.toBytes($TXT115, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhtx"))));
	$output.write($TXT116);
	$output.write(doFilter(filter, $TXT117, formatter.toBytes($TXT117, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhywm"))));
	$output.write($TXT118);
	$output.write(doFilter(filter, $TXT119, formatter.toBytes($TXT119, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhzwm"))));
	$output.write($TXT120);
	$output.write(doFilter(filter, $TXT121, formatter.toBytes($TXT121, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.bmmc"))));
	$output.write($TXT122);
	$output.write(doFilter(filter, $TXT123, formatter.toBytes($TXT123, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhssjg"))));
	$output.write($TXT124);
	$output.write(doFilter(filter, $TXT125, formatter.toBytes($TXT125, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zjdh"))));
	$output.write($TXT126);
	$output.write(doFilter(filter, $TXT127, formatter.toBytes($TXT127, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.gsw"))));
	$output.write($TXT128);
	$output.write(doFilter(filter, $TXT129, formatter.toBytes($TXT129, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.sjh"))));
	$output.write($TXT130);
	$output.write(doFilter(filter, $TXT131, formatter.toBytes($TXT131, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srsjh"))));
	$output.write($TXT132);
	$output.write(doFilter(filter, $TXT133, formatter.toBytes($TXT133, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.sryx"))));
	$output.write($TXT134);
	$output.write(doFilter(filter, $TXT135, formatter.toBytes($TXT135, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dizhi"))));
	$output.write($TXT136);
	$output.write(doFilter(filter, $TXT137, formatter.toBytes($TXT137, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srdz"))));
	$output.write($TXT138);
	$output.write(doFilter(filter, $TXT139, formatter.toBytes($TXT139, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.miaoshu"))));
	$output.write($TXT140);
	$output.write(doFilter(filter, $TXT141, formatter.toBytes($TXT141, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srgrms"))));
	$output.write($TXT142);
	$output.write(doFilter(filter, $TXT143, formatter.toBytes($TXT143, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ti"))));
	$output.write($TXT144);
	$output.write(doFilter(filter, $TXT145, formatter.toBytes($TXT145, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jiao"))));
	$output.write($TXT146);
	$output.write(doFilter(filter, $TXT147, formatter.toBytes($TXT147, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgcg"))));
	$output.write($TXT148);
	$output.write(doFilter(filter, $TXT149, formatter.toBytes($TXT149, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgsb"))));
	$output.write($TXT150);
	$output.write(doFilter(filter, $TXT151, formatter.toBytes($TXT151, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmbnwk"))));
	$output.write($TXT152);
	$output.write(doFilter(filter, $TXT153, formatter.toBytes($TXT153, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmcdbxxy1"))));
	$output.write($TXT154);
	$output.write(doFilter(filter, $TXT155, formatter.toBytes($TXT155, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ywyhmbnhyhz"))));
	$output.write($TXT156);
	$output.write(doFilter(filter, $TXT157, formatter.toBytes($TXT157, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmbnwk"))));
	$output.write($TXT158);
	$output.write(doFilter(filter, $TXT159, formatter.toBytes($TXT159, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhmcdbxxy2"))));
	$output.write($TXT160);
	$output.write(doFilter(filter, $TXT161, formatter.toBytes($TXT161, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzw"))));
	$output.write($TXT162);
	$output.write(doFilter(filter, $TXT163, formatter.toBytes($TXT163, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.gsw"))));
	$output.write($TXT164);
	$output.write(doFilter(filter, $TXT165, formatter.toBytes($TXT165, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dhhmbnwk"))));
	$output.write($TXT166);
	$output.write(doFilter(filter, $TXT167, formatter.toBytes($TXT167, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqddhhm"))));
	$output.write($TXT168);
	$output.write(doFilter(filter, $TXT169, formatter.toBytes($TXT169, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yxbnwk"))));
	$output.write($TXT170);
	$output.write(doFilter(filter, $TXT171, formatter.toBytes($TXT171, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqdyxdz"))));
	$output.write($TXT172);
	$output.write(doFilter(filter, $TXT173, formatter.toBytes($TXT173, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.grxxxgjm"))));
	$output.write($TXT174);
	$output.write(doFilter(filter, $TXT175, formatter.toBytes($TXT175, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhywm"))));
	$output.write($TXT176);
	$output.write(doFilter(filter, $TXT177, formatter.toBytes($TXT177, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.bnhyhz"))));
	$output.write($TXT178);
	$output.write(doFilter(filter, $TXT179, formatter.toBytes($TXT179, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhzwm"))));
	$output.write($TXT180);
	$output.write(doFilter(filter, $TXT181, formatter.toBytes($TXT181, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzw"))));
	$output.write($TXT182);
	$output.write(doFilter(filter, $TXT183, formatter.toBytes($TXT183, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.bmmc"))));
	$output.write($TXT184);
	$output.write(doFilter(filter, $TXT185, formatter.toBytes($TXT185, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yhssjg"))));
	$output.write($TXT186);
	$output.write(doFilter(filter, $TXT187, formatter.toBytes($TXT187, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zjdh"))));
	$output.write($TXT188);
	$output.write(doFilter(filter, $TXT189, formatter.toBytes($TXT189, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.gsw"))));
	$output.write($TXT190);
	$output.write(doFilter(filter, $TXT191, formatter.toBytes($TXT191, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.sjh"))));
	$output.write($TXT192);
	$output.write(doFilter(filter, $TXT193, formatter.toBytes($TXT193, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqddhhm"))));
	$output.write($TXT194);
	$output.write(doFilter(filter, $TXT195, formatter.toBytes($TXT195, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.youxiang"))));
	$output.write($TXT196);
	$output.write(doFilter(filter, $TXT197, formatter.toBytes($TXT197, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrzqdyxdz"))));
	$output.write($TXT198);
	$output.write(doFilter(filter, $TXT199, formatter.toBytes($TXT199, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dizhi"))));
	$output.write($TXT200);
	$output.write(doFilter(filter, $TXT201, formatter.toBytes($TXT201, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.miaoshu"))));
	$output.write($TXT202);
	$output.write(doFilter(filter, $TXT203, formatter.toBytes($TXT203, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tijiao"))));
	$output.write($TXT204);
	$output.write(doFilter(filter, $TXT205, formatter.toBytes($TXT205, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgcg"))));
	$output.write($TXT206);
	$output.write(doFilter(filter, $TXT207, formatter.toBytes($TXT207, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgsb"))));
	$output.write($TXT208);
	$output.write(doFilter(filter, $TXT209, formatter.toBytes($TXT209, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.dhlsxx"))));
	$output.write($TXT210);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT211, formatter.toBytes($TXT211, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT212);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else {
	$output.write(doFilter(filter, $TXT213, formatter.toBytes($TXT213, (theme instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)theme).openReader()) : theme))));
	}
	$output.write($TXT214);
	$output.write(doFilter(filter, $TXT215, formatter.toBytes($TXT215, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgmm"))));
	$output.write($TXT216);
	$output.write(doFilter(filter, $TXT217, formatter.toBytes($TXT217, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yuanmm"))));
	$output.write($TXT218);
	$output.write(doFilter(filter, $TXT219, formatter.toBytes($TXT219, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrymm1"))));
	$output.write($TXT220);
	$output.write(doFilter(filter, $TXT221, formatter.toBytes($TXT221, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xinmm"))));
	$output.write($TXT222);
	$output.write(doFilter(filter, $TXT223, formatter.toBytes($TXT223, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jyszzmfh"))));
	$output.write($TXT224);
	$output.write(doFilter(filter, $TXT225, formatter.toBytes($TXT225, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qrmm"))));
	$output.write($TXT226);
	$output.write(doFilter(filter, $TXT227, formatter.toBytes($TXT227, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qzcsrmm"))));
	$output.write($TXT228);
	$output.write(doFilter(filter, $TXT229, formatter.toBytes($TXT229, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ti"))));
	$output.write($TXT230);
	$output.write(doFilter(filter, $TXT231, formatter.toBytes($TXT231, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jiao"))));
	$output.write($TXT232);
	$output.write(doFilter(filter, $TXT233, formatter.toBytes($TXT233, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT234);
	$output.write(doFilter(filter, $TXT235, formatter.toBytes($TXT235, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrymm2"))));
	$output.write($TXT236);
	$output.write(doFilter(filter, $TXT237, formatter.toBytes($TXT237, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT238);
	$output.write(doFilter(filter, $TXT239, formatter.toBytes($TXT239, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrxmm"))));
	$output.write($TXT240);
	$output.write(doFilter(filter, $TXT241, formatter.toBytes($TXT241, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT242);
	$output.write(doFilter(filter, $TXT243, formatter.toBytes($TXT243, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qcfsrmm"))));
	$output.write($TXT244);
	$output.write(doFilter(filter, $TXT245, formatter.toBytes($TXT245, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT246);
	$output.write(doFilter(filter, $TXT247, formatter.toBytes($TXT247, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xszdmmsrbyz"))));
	$output.write($TXT248);
	$output.write(doFilter(filter, $TXT249, formatter.toBytes($TXT249, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xgmmcg"))));
	$output.write($TXT250);
	$output.write(doFilter(filter, $TXT251, formatter.toBytes($TXT251, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT252);
	$output.write(doFilter(filter, $TXT253, formatter.toBytes($TXT253, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ymmsrcw"))));
	$output.write($TXT254);
	$output.write(doFilter(filter, $TXT255, formatter.toBytes($TXT255, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT256);
	$output.write(doFilter(filter, $TXT257, formatter.toBytes($TXT257, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.fwqfm"))));
	$output.write($TXT258);
	$output.write(doFilter(filter, $TXT259, formatter.toBytes($TXT259, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT260);
	$output.write(doFilter(filter, $TXT261, formatter.toBytes($TXT261, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmgd"))));
	$output.write($TXT262);
	$output.write(doFilter(filter, $TXT263, formatter.toBytes($TXT263, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT264);
	$output.write(doFilter(filter, $TXT265, formatter.toBytes($TXT265, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmgc"))));
	$output.write($TXT266);
	$output.write(doFilter(filter, $TXT267, formatter.toBytes($TXT267, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT268);
	$output.write(doFilter(filter, $TXT269, formatter.toBytes($TXT269, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmgsbzq"))));
	$output.write($TXT270);
	$output.write(doFilter(filter, $TXT271, formatter.toBytes($TXT271, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT272);
	$output.write(doFilter(filter, $TXT273, formatter.toBytes($TXT273, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.cmmzlsjll"))));
	$output.write($TXT274);
	$output.write(doFilter(filter, $TXT275, formatter.toBytes($TXT275, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT276);
	$output.write(doFilter(filter, $TXT277, formatter.toBytes($TXT277, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.pwsun"))));
	$output.write($TXT278);
	$output.write(doFilter(filter, $TXT279, formatter.toBytes($TXT279, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT280);
	$output.write(doFilter(filter, $TXT281, formatter.toBytes($TXT281, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.pwinhcount"))));
	$output.write($TXT282);
	$output.write(doFilter(filter, $TXT283, formatter.toBytes($TXT283, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xkl"))));
	$output.write($TXT284);
	$output.write(doFilter(filter, $TXT285, formatter.toBytes($TXT285, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zsh"))));
	$output.write($TXT286);
	$output.write(doFilter(filter, $TXT287, formatter.toBytes($TXT287, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.swh"))));
	$output.write($TXT288);
	$output.write(doFilter(filter, $TXT289, formatter.toBytes($TXT289, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zwh"))));
	$output.write($TXT290);
	$output.write(doFilter(filter, $TXT291, formatter.toBytes($TXT291, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.xwh"))));
	$output.write($TXT292);
	$output.write(doFilter(filter, $TXT293, formatter.toBytes($TXT293, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.wsh"))));
	$output.write($TXT294);
	$output.write(doFilter(filter, $TXT295, formatter.toBytes($TXT295, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.zxdlz"))));
	$output.write($TXT296);
	if (activation instanceof httl.Template) {
	((httl.Template)activation).render($output);
	} else {
	$output.write(doFilter(filter, $TXT297, formatter.toBytes($TXT297, (activation instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)activation).openReader()) : activation))));
	}
	$output.write($TXT298);
	$output.write(doFilter(filter, $TXT299, formatter.toBytes($TXT299, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ndsyb"))));
	$output.write($TXT300);
	$output.write(doFilter(filter, $TXT301, formatter.toBytes($TXT301, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qsrjhm"))));
	$output.write($TXT302);
	$output.write(doFilter(filter, $TXT303, formatter.toBytes($TXT303, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tijiao"))));
	$output.write($TXT304);
	$output.write(doFilter(filter, $TXT305, formatter.toBytes($TXT305, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jhcg"))));
	$output.write($TXT306);
	$output.write(doFilter(filter, $TXT307, formatter.toBytes($TXT307, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tishi"))));
	$output.write($TXT308);
	$output.write(doFilter(filter, $TXT309, formatter.toBytes($TXT309, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.jhmygq"))));
	$output.write($TXT310);
	if (isFirstLogin instanceof httl.Template) {
	((httl.Template)isFirstLogin).render($output);
	} else {
	$output.write(doFilter(filter, $TXT311, formatter.toBytes($TXT311, (isFirstLogin instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)isFirstLogin).openReader()) : isFirstLogin))));
	}
	$output.write($TXT312);
	if (passwordInited instanceof httl.Template) {
	((httl.Template)passwordInited).render($output);
	} else {
	$output.write(doFilter(filter, $TXT313, formatter.toBytes($TXT313, (passwordInited instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)passwordInited).openReader()) : passwordInited))));
	}
	$output.write($TXT314);
	if (passwordExpire instanceof httl.Template) {
	((httl.Template)passwordExpire).render($output);
	} else {
	$output.write(doFilter(filter, $TXT315, formatter.toBytes($TXT315, (passwordExpire instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)passwordExpire).openReader()) : passwordExpire))));
	}
	$output.write($TXT316);
	if (pwdExpireDays instanceof httl.Template) {
	((httl.Template)pwdExpireDays).render($output);
	} else {
	$output.write(doFilter(filter, $TXT317, formatter.toBytes($TXT317, (pwdExpireDays instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)pwdExpireDays).openReader()) : pwdExpireDays))));
	}
	$output.write($TXT318);
	$output.write(doFilter(filter, $TXT319, formatter.toBytes($TXT319, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ndycdr"))));
	$output.write($TXT320);
	$output.write(doFilter(filter, $TXT321, formatter.toBytes($TXT321, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ndymmybglycz"))));
	$output.write($TXT322);
	$output.write(doFilter(filter, $TXT323, formatter.toBytes($TXT323, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.nycg"))));
	$output.write($TXT324);
	$output.write(doFilter(filter, $TXT325, formatter.toBytes($TXT325, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.twxgmm"))));
	$output.write($TXT326);
	if (lastIpAndDate instanceof httl.Template) {
	((httl.Template)lastIpAndDate).render($output);
	} else {
	$output.write(doFilter(filter, $TXT327, formatter.toBytes($TXT327, (lastIpAndDate instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)lastIpAndDate).openReader()) : lastIpAndDate))));
	}
	$output.write($TXT328);
	$output.write(doFilter(filter, $TXT329, formatter.toBytes($TXT329, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.nscdr"))));
	$output.write($TXT330);
	$output.write(doFilter(filter, $TXT331, formatter.toBytes($TXT331, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.drsj"))));
	$output.write($TXT332);
	$output.write(doFilter(filter, $TXT333, formatter.toBytes($TXT333, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.mmyxq"))));
	$output.write($TXT334);
	$output.write(doFilter(filter, $TXT335, formatter.toBytes($TXT335, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.tian"))));
	$output.write($TXT336);
	$output.write(doFilter(filter, $TXT337, formatter.toBytes($TXT337, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.srdh"))));
	$output.write($TXT338);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT339, formatter.toBytes($TXT339, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT340);
	$output.write(doFilter(filter, $TXT341, formatter.toBytes($TXT341, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.ckls"))));
	$output.write($TXT342);
	$output.write(doFilter(filter, $TXT343, formatter.toBytes($TXT343, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.lxgz"))));
	$output.write($TXT344);
	$output.write(doFilter(filter, $TXT345, formatter.toBytes($TXT345, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.qzyxx"))));
	$output.write($TXT346);
	$output.write(doFilter(filter, $TXT347, formatter.toBytes($TXT347, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.yywdl"))));
	$output.write($TXT348);
	$output.write(doFilter(filter, $TXT349, formatter.toBytes($TXT349, $httl_spi_methods_MessageMethod.message("jes.WebContent.res.js.app.main.fzwdlbxt"))));
	$output.write($TXT350);
	if (jumpSsId instanceof httl.Template) {
	((httl.Template)jumpSsId).render($output);
	} else {
	$output.write(doFilter(filter, $TXT351, formatter.toBytes($TXT351, (jumpSsId instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jumpSsId).openReader()) : jumpSsId))));
	}
	$output.write($TXT352);
	if (jumpUrl instanceof httl.Template) {
	((httl.Template)jumpUrl).render($output);
	} else {
	$output.write(doFilter(filter, $TXT353, formatter.toBytes($TXT353, (jumpUrl instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jumpUrl).openReader()) : jumpUrl))));
	}
	$output.write($TXT354);
	if (jumpText instanceof httl.Template) {
	((httl.Template)jumpText).render($output);
	} else {
	$output.write(doFilter(filter, $TXT355, formatter.toBytes($TXT355, (jumpText instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)jumpText).openReader()) : jumpText))));
	}
	$output.write($TXT356);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT357);
}

public String getName() {
	return "/jes/view/main.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,799 [DEBUG] httl  - Parsed the template /jes/view/main.httl, eslapsed: 581ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,800 [DEBUG] httl  - Compile template /jes/view/inc/top.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,804 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_inc_top_httl_html_utf_8_zh_CN_1599117819349_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("252");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[0], new Class[0]);

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_inc_top_httl_html_utf_8_zh_CN_1599117819349_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	$output.write($TXT1);
}

public String getName() {
	return "/jes/view/inc/top.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,809 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_inc_top_httl_html_utf_8_zh_CN_1599117819349_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("252");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[0], new Class[0]);

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_inc_top_httl_html_utf_8_zh_CN_1599117819349_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	$output.write($TXT1);
}

public String getName() {
	return "/jes/view/inc/top.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,809 [DEBUG] httl  - Parsed the template /jes/view/inc/top.httl, eslapsed: 9ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,811 [DEBUG] httl  - Compile template /jes/view/inc/head.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,821 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_inc_head_httl_html_utf_8_zh_CN_1599117819347_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("253");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("395");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("254");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("396");
private static final char[] $TXT7 = httl.util.CharCache.getAndRemove("255");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"myIp", "webTitle"}, new Class[] {java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_inc_head_httl_html_utf_8_zh_CN_1599117819347_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object myIp = (java.lang.Object) $context.get("myIp");
	java.lang.Object webTitle = (java.lang.Object) $context.get("webTitle");
	$output.write($TXT1);
	if (myIp instanceof httl.Template) {
	((httl.Template)myIp).render($output);
	} else if (myIp instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)myIp).openReader(), $output);
	} else {
	Object $obj2 = myIp;
	if ($obj2 instanceof char[]) $output.write(formatter.toChars($TXT2, (char[]) $obj2)); else $output.write(formatter.toString($TXT2, $obj2));
	}
	$output.write($TXT4);
	if (webTitle instanceof httl.Template) {
	((httl.Template)webTitle).render($output);
	} else if (webTitle instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)webTitle).openReader(), $output);
	} else {
	Object $obj5 = webTitle;
	if ($obj5 instanceof char[]) $output.write(formatter.toChars($TXT5, (char[]) $obj5)); else $output.write(formatter.toString($TXT5, $obj5));
	}
	$output.write($TXT7);
}

public String getName() {
	return "/jes/view/inc/head.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,829 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_inc_head_httl_html_utf_8_zh_CN_1599117819347_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("253");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("397");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("254");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("398");
private static final byte[] $TXT5 = httl.util.ByteCache.getAndRemove("255");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"myIp", "webTitle"}, new Class[] {java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_inc_head_httl_html_utf_8_zh_CN_1599117819347_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object myIp = (java.lang.Object) $context.get("myIp");
	java.lang.Object webTitle = (java.lang.Object) $context.get("webTitle");
	$output.write($TXT1);
	if (myIp instanceof httl.Template) {
	((httl.Template)myIp).render($output);
	} else if (myIp instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)myIp).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT2, myIp));
	}
	$output.write($TXT3);
	if (webTitle instanceof httl.Template) {
	((httl.Template)webTitle).render($output);
	} else if (webTitle instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)webTitle).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT4, webTitle));
	}
	$output.write($TXT5);
}

public String getName() {
	return "/jes/view/inc/head.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,829 [DEBUG] httl  - Parsed the template /jes/view/inc/head.httl, eslapsed: 19ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,831 [DEBUG] httl  - Compile template /jes/view/inc/extjs.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,875 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_inc_extjs_httl_html_utf_8_zh_CN_1599117819346_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("256");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("399");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("257");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("400");
private static final char[] $TXT7 = httl.util.CharCache.getAndRemove("258");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("401");
private static final char[] $TXT10 = httl.util.CharCache.getAndRemove("259");
private static final String $TXT11 = httl.util.StringCache.getAndRemove("402");
private static final char[] $TXT13 = httl.util.CharCache.getAndRemove("260");
private static final String $TXT14 = httl.util.StringCache.getAndRemove("403");
private static final char[] $TXT16 = httl.util.CharCache.getAndRemove("261");
private static final char[] $TXT17 = httl.util.CharCache.getAndRemove("262");
private static final String $TXT18 = httl.util.StringCache.getAndRemove("404");
private static final char[] $TXT20 = httl.util.CharCache.getAndRemove("263");
private static final char[] $TXT21 = httl.util.CharCache.getAndRemove("264");
private static final char[] $TXT22 = httl.util.CharCache.getAndRemove("265");
private static final String $TXT23 = httl.util.StringCache.getAndRemove("405");
private static final char[] $TXT25 = httl.util.CharCache.getAndRemove("266");
private static final String $TXT26 = httl.util.StringCache.getAndRemove("406");
private static final char[] $TXT28 = httl.util.CharCache.getAndRemove("267");
private static final char[] $TXT29 = httl.util.CharCache.getAndRemove("268");
private static final char[] $TXT30 = httl.util.CharCache.getAndRemove("269");
private static final String $TXT31 = httl.util.StringCache.getAndRemove("407");
private static final char[] $TXT33 = httl.util.CharCache.getAndRemove("270");
private static final char[] $TXT34 = httl.util.CharCache.getAndRemove("271");
private static final char[] $TXT35 = httl.util.CharCache.getAndRemove("272");
private static final String $TXT36 = httl.util.StringCache.getAndRemove("408");
private static final char[] $TXT38 = httl.util.CharCache.getAndRemove("273");
private static final char[] $TXT39 = httl.util.CharCache.getAndRemove("274");
private static final char[] $TXT40 = httl.util.CharCache.getAndRemove("275");
private static final String $TXT41 = httl.util.StringCache.getAndRemove("409");
private static final char[] $TXT43 = httl.util.CharCache.getAndRemove("276");
private static final String $TXT44 = httl.util.StringCache.getAndRemove("410");
private static final char[] $TXT46 = httl.util.CharCache.getAndRemove("277");
private static final String $TXT47 = httl.util.StringCache.getAndRemove("411");
private static final char[] $TXT49 = httl.util.CharCache.getAndRemove("278");
private static final char[] $TXT50 = httl.util.CharCache.getAndRemove("279");
private static final String $TXT51 = httl.util.StringCache.getAndRemove("412");
private static final char[] $TXT53 = httl.util.CharCache.getAndRemove("280");
private static final char[] $TXT54 = httl.util.CharCache.getAndRemove("281");
private static final String $TXT55 = httl.util.StringCache.getAndRemove("413");
private static final char[] $TXT57 = httl.util.CharCache.getAndRemove("282");
private static final String $TXT58 = httl.util.StringCache.getAndRemove("414");
private static final char[] $TXT60 = httl.util.CharCache.getAndRemove("283");
private static final char[] $TXT61 = httl.util.CharCache.getAndRemove("284");
private static final char[] $TXT62 = httl.util.CharCache.getAndRemove("285");
private static final char[] $TXT63 = httl.util.CharCache.getAndRemove("286");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app", "theme", "language", "languageCharset"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_inc_extjs_httl_html_utf_8_zh_CN_1599117819346_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object theme = (java.lang.Object) $context.get("theme");
	java.lang.Object language = (java.lang.Object) $context.get("language");
	java.lang.Object languageCharset = (java.lang.Object) $context.get("languageCharset");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj2 = app;
	if ($obj2 instanceof char[]) $output.write(formatter.toChars($TXT2, (char[]) $obj2)); else $output.write(formatter.toString($TXT2, $obj2));
	}
	$output.write($TXT4);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else if (theme instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)theme).openReader(), $output);
	} else {
	Object $obj5 = theme;
	if ($obj5 instanceof char[]) $output.write(formatter.toChars($TXT5, (char[]) $obj5)); else $output.write(formatter.toString($TXT5, $obj5));
	}
	$output.write($TXT7);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj8 = app;
	if ($obj8 instanceof char[]) $output.write(formatter.toChars($TXT8, (char[]) $obj8)); else $output.write(formatter.toString($TXT8, $obj8));
	}
	$output.write($TXT10);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj11 = app;
	if ($obj11 instanceof char[]) $output.write(formatter.toChars($TXT11, (char[]) $obj11)); else $output.write(formatter.toString($TXT11, $obj11));
	}
	$output.write($TXT13);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj14 = app;
	if ($obj14 instanceof char[]) $output.write(formatter.toChars($TXT14, (char[]) $obj14)); else $output.write(formatter.toString($TXT14, $obj14));
	}
	$output.write($TXT16);
	filter = switchFilter("<script", $filter);
	$output.write($TXT17);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj18 = app;
	if ($obj18 instanceof char[]) $output.write(formatter.toChars($TXT18, (char[]) $obj18)); else $output.write(formatter.toString($TXT18, $obj18));
	}
	$output.write($TXT20);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT21);
	filter = switchFilter("<script", $filter);
	$output.write($TXT22);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj23 = app;
	if ($obj23 instanceof char[]) $output.write(formatter.toChars($TXT23, (char[]) $obj23)); else $output.write(formatter.toString($TXT23, $obj23));
	}
	$output.write($TXT25);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else if (theme instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)theme).openReader(), $output);
	} else {
	Object $obj26 = theme;
	if ($obj26 instanceof char[]) $output.write(formatter.toChars($TXT26, (char[]) $obj26)); else $output.write(formatter.toString($TXT26, $obj26));
	}
	$output.write($TXT28);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT29);
	filter = switchFilter("<script", $filter);
	$output.write($TXT30);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj31 = app;
	if ($obj31 instanceof char[]) $output.write(formatter.toChars($TXT31, (char[]) $obj31)); else $output.write(formatter.toString($TXT31, $obj31));
	}
	$output.write($TXT33);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT34);
	filter = switchFilter("<script", $filter);
	$output.write($TXT35);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj36 = app;
	if ($obj36 instanceof char[]) $output.write(formatter.toChars($TXT36, (char[]) $obj36)); else $output.write(formatter.toString($TXT36, $obj36));
	}
	$output.write($TXT38);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT39);
	filter = switchFilter("<script", $filter);
	$output.write($TXT40);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj41 = app;
	if ($obj41 instanceof char[]) $output.write(formatter.toChars($TXT41, (char[]) $obj41)); else $output.write(formatter.toString($TXT41, $obj41));
	}
	$output.write($TXT43);
	if (language instanceof httl.Template) {
	((httl.Template)language).render($output);
	} else if (language instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)language).openReader(), $output);
	} else {
	Object $obj44 = language;
	if ($obj44 instanceof char[]) $output.write(formatter.toChars($TXT44, (char[]) $obj44)); else $output.write(formatter.toString($TXT44, $obj44));
	}
	$output.write($TXT46);
	if (languageCharset instanceof httl.Template) {
	((httl.Template)languageCharset).render($output);
	} else if (languageCharset instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)languageCharset).openReader(), $output);
	} else {
	Object $obj47 = languageCharset;
	if ($obj47 instanceof char[]) $output.write(formatter.toChars($TXT47, (char[]) $obj47)); else $output.write(formatter.toString($TXT47, $obj47));
	}
	$output.write($TXT49);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT50);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj51 = app;
	if ($obj51 instanceof char[]) $output.write(formatter.toChars($TXT51, (char[]) $obj51)); else $output.write(formatter.toString($TXT51, $obj51));
	}
	$output.write($TXT53);
	filter = switchFilter("<script", $filter);
	$output.write($TXT54);
	if (language instanceof httl.Template) {
	((httl.Template)language).render($output);
	} else if (language instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)language).openReader(), $output);
	} else {
	Object $obj55 = language;
	if ($obj55 instanceof char[]) $output.write(formatter.toChars($TXT55, (char[]) $obj55)); else $output.write(formatter.toString($TXT55, $obj55));
	}
	$output.write($TXT57);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj58 = app;
	if ($obj58 instanceof char[]) $output.write(formatter.toChars($TXT58, (char[]) $obj58)); else $output.write(formatter.toString($TXT58, $obj58));
	}
	$output.write($TXT60);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT61);
	filter = switchFilter("<style", $filter);
	$output.write($TXT62);
	filter = switchFilter("</style>", $filter);
	$output.write($TXT63);
}

public String getName() {
	return "/jes/view/inc/extjs.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,914 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_inc_extjs_httl_html_utf_8_zh_CN_1599117819346_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("256");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("415");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("257");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("416");
private static final byte[] $TXT5 = httl.util.ByteCache.getAndRemove("258");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("417");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("259");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("418");
private static final byte[] $TXT9 = httl.util.ByteCache.getAndRemove("260");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("419");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("261");
private static final byte[] $TXT12 = httl.util.ByteCache.getAndRemove("262");
private static final String $TXT13 = httl.util.StringCache.getAndRemove("420");
private static final byte[] $TXT14 = httl.util.ByteCache.getAndRemove("263");
private static final byte[] $TXT15 = httl.util.ByteCache.getAndRemove("264");
private static final byte[] $TXT16 = httl.util.ByteCache.getAndRemove("265");
private static final String $TXT17 = httl.util.StringCache.getAndRemove("421");
private static final byte[] $TXT18 = httl.util.ByteCache.getAndRemove("266");
private static final String $TXT19 = httl.util.StringCache.getAndRemove("422");
private static final byte[] $TXT20 = httl.util.ByteCache.getAndRemove("267");
private static final byte[] $TXT21 = httl.util.ByteCache.getAndRemove("268");
private static final byte[] $TXT22 = httl.util.ByteCache.getAndRemove("269");
private static final String $TXT23 = httl.util.StringCache.getAndRemove("423");
private static final byte[] $TXT24 = httl.util.ByteCache.getAndRemove("270");
private static final byte[] $TXT25 = httl.util.ByteCache.getAndRemove("271");
private static final byte[] $TXT26 = httl.util.ByteCache.getAndRemove("272");
private static final String $TXT27 = httl.util.StringCache.getAndRemove("424");
private static final byte[] $TXT28 = httl.util.ByteCache.getAndRemove("273");
private static final byte[] $TXT29 = httl.util.ByteCache.getAndRemove("274");
private static final byte[] $TXT30 = httl.util.ByteCache.getAndRemove("275");
private static final String $TXT31 = httl.util.StringCache.getAndRemove("425");
private static final byte[] $TXT32 = httl.util.ByteCache.getAndRemove("276");
private static final String $TXT33 = httl.util.StringCache.getAndRemove("426");
private static final byte[] $TXT34 = httl.util.ByteCache.getAndRemove("277");
private static final String $TXT35 = httl.util.StringCache.getAndRemove("427");
private static final byte[] $TXT36 = httl.util.ByteCache.getAndRemove("278");
private static final byte[] $TXT37 = httl.util.ByteCache.getAndRemove("279");
private static final String $TXT38 = httl.util.StringCache.getAndRemove("428");
private static final byte[] $TXT39 = httl.util.ByteCache.getAndRemove("280");
private static final byte[] $TXT40 = httl.util.ByteCache.getAndRemove("281");
private static final String $TXT41 = httl.util.StringCache.getAndRemove("429");
private static final byte[] $TXT42 = httl.util.ByteCache.getAndRemove("282");
private static final String $TXT43 = httl.util.StringCache.getAndRemove("430");
private static final byte[] $TXT44 = httl.util.ByteCache.getAndRemove("283");
private static final byte[] $TXT45 = httl.util.ByteCache.getAndRemove("284");
private static final byte[] $TXT46 = httl.util.ByteCache.getAndRemove("285");
private static final byte[] $TXT47 = httl.util.ByteCache.getAndRemove("286");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app", "theme", "language", "languageCharset"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_inc_extjs_httl_html_utf_8_zh_CN_1599117819346_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object theme = (java.lang.Object) $context.get("theme");
	java.lang.Object language = (java.lang.Object) $context.get("language");
	java.lang.Object languageCharset = (java.lang.Object) $context.get("languageCharset");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT2, app));
	}
	$output.write($TXT3);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else if (theme instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)theme).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT4, theme));
	}
	$output.write($TXT5);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT6, app));
	}
	$output.write($TXT7);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT8, app));
	}
	$output.write($TXT9);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT10, app));
	}
	$output.write($TXT11);
	filter = switchFilter("<script", $filter);
	$output.write($TXT12);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT13, app));
	}
	$output.write($TXT14);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT15);
	filter = switchFilter("<script", $filter);
	$output.write($TXT16);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT17, app));
	}
	$output.write($TXT18);
	if (theme instanceof httl.Template) {
	((httl.Template)theme).render($output);
	} else if (theme instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)theme).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT19, theme));
	}
	$output.write($TXT20);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT21);
	filter = switchFilter("<script", $filter);
	$output.write($TXT22);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT23, app));
	}
	$output.write($TXT24);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT25);
	filter = switchFilter("<script", $filter);
	$output.write($TXT26);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT27, app));
	}
	$output.write($TXT28);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT29);
	filter = switchFilter("<script", $filter);
	$output.write($TXT30);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT31, app));
	}
	$output.write($TXT32);
	if (language instanceof httl.Template) {
	((httl.Template)language).render($output);
	} else if (language instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)language).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT33, language));
	}
	$output.write($TXT34);
	if (languageCharset instanceof httl.Template) {
	((httl.Template)languageCharset).render($output);
	} else if (languageCharset instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)languageCharset).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT35, languageCharset));
	}
	$output.write($TXT36);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT37);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT38, app));
	}
	$output.write($TXT39);
	filter = switchFilter("<script", $filter);
	$output.write($TXT40);
	if (language instanceof httl.Template) {
	((httl.Template)language).render($output);
	} else if (language instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)language).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT41, language));
	}
	$output.write($TXT42);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT43, app));
	}
	$output.write($TXT44);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT45);
	filter = switchFilter("<style", $filter);
	$output.write($TXT46);
	filter = switchFilter("</style>", $filter);
	$output.write($TXT47);
}

public String getName() {
	return "/jes/view/inc/extjs.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:14,915 [DEBUG] httl  - Parsed the template /jes/view/inc/extjs.httl, eslapsed: 85ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,680 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 1
2020-09-03 15:42:15,681 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[0]
2020-09-03 15:42:15,717 [DEBUG] httl  - Compile template /vm/home/home.vm, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,750 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_home_home_vm_html_utf_8_zh_CN_1599104103869_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("287");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("431");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("288");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("432");
private static final char[] $TXT7 = httl.util.CharCache.getAndRemove("289");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("433");
private static final char[] $TXT10 = httl.util.CharCache.getAndRemove("290");
private static final String $TXT11 = httl.util.StringCache.getAndRemove("434");
private static final char[] $TXT13 = httl.util.CharCache.getAndRemove("291");
private static final String $TXT14 = httl.util.StringCache.getAndRemove("435");
private static final char[] $TXT16 = httl.util.CharCache.getAndRemove("292");
private static final char[] $TXT17 = httl.util.CharCache.getAndRemove("293");
private static final String $TXT18 = httl.util.StringCache.getAndRemove("436");
private static final char[] $TXT20 = httl.util.CharCache.getAndRemove("294");
private static final char[] $TXT21 = httl.util.CharCache.getAndRemove("295");
private static final char[] $TXT22 = httl.util.CharCache.getAndRemove("296");
private static final String $TXT23 = httl.util.StringCache.getAndRemove("437");
private static final char[] $TXT25 = httl.util.CharCache.getAndRemove("297");
private static final char[] $TXT26 = httl.util.CharCache.getAndRemove("298");
private static final char[] $TXT27 = httl.util.CharCache.getAndRemove("299");
private static final String $TXT28 = httl.util.StringCache.getAndRemove("438");
private static final char[] $TXT30 = httl.util.CharCache.getAndRemove("300");
private static final char[] $TXT31 = httl.util.CharCache.getAndRemove("301");
private static final char[] $TXT32 = httl.util.CharCache.getAndRemove("302");
private static final String $TXT33 = httl.util.StringCache.getAndRemove("439");
private static final char[] $TXT35 = httl.util.CharCache.getAndRemove("303");
private static final String $TXT36 = httl.util.StringCache.getAndRemove("440");
private static final char[] $TXT38 = httl.util.CharCache.getAndRemove("304");
private static final char[] $TXT39 = httl.util.CharCache.getAndRemove("305");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app", "instId", "taxno"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_home_home_vm_html_utf_8_zh_CN_1599104103869_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object instId = (java.lang.Object) $context.get("instId");
	java.lang.Object taxno = (java.lang.Object) $context.get("taxno");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj2 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj2 instanceof char[]) $output.write(doFilter(filter, $TXT2, formatter.toChars($TXT2, (char[]) $obj2))); else $output.write(doFilter(filter, $TXT2, formatter.toString($TXT2, $obj2)));
	}
	$output.write($TXT4);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj5 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj5 instanceof char[]) $output.write(doFilter(filter, $TXT5, formatter.toChars($TXT5, (char[]) $obj5))); else $output.write(doFilter(filter, $TXT5, formatter.toString($TXT5, $obj5)));
	}
	$output.write($TXT7);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj8 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj8 instanceof char[]) $output.write(doFilter(filter, $TXT8, formatter.toChars($TXT8, (char[]) $obj8))); else $output.write(doFilter(filter, $TXT8, formatter.toString($TXT8, $obj8)));
	}
	$output.write($TXT10);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj11 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj11 instanceof char[]) $output.write(doFilter(filter, $TXT11, formatter.toChars($TXT11, (char[]) $obj11))); else $output.write(doFilter(filter, $TXT11, formatter.toString($TXT11, $obj11)));
	}
	$output.write($TXT13);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj14 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj14 instanceof char[]) $output.write(doFilter(filter, $TXT14, formatter.toChars($TXT14, (char[]) $obj14))); else $output.write(doFilter(filter, $TXT14, formatter.toString($TXT14, $obj14)));
	}
	$output.write($TXT16);
	filter = switchFilter("<script", $filter);
	$output.write($TXT17);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj18 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj18 instanceof char[]) $output.write(doFilter(filter, $TXT18, formatter.toChars($TXT18, (char[]) $obj18))); else $output.write(doFilter(filter, $TXT18, formatter.toString($TXT18, $obj18)));
	}
	$output.write($TXT20);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT21);
	filter = switchFilter("<script", $filter);
	$output.write($TXT22);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj23 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj23 instanceof char[]) $output.write(doFilter(filter, $TXT23, formatter.toChars($TXT23, (char[]) $obj23))); else $output.write(doFilter(filter, $TXT23, formatter.toString($TXT23, $obj23)));
	}
	$output.write($TXT25);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT26);
	filter = switchFilter("<script", $filter);
	$output.write($TXT27);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	Object $obj28 = (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app);
	if ($obj28 instanceof char[]) $output.write(doFilter(filter, $TXT28, formatter.toChars($TXT28, (char[]) $obj28))); else $output.write(doFilter(filter, $TXT28, formatter.toString($TXT28, $obj28)));
	}
	$output.write($TXT30);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT31);
	filter = switchFilter("<script", $filter);
	$output.write($TXT32);
	if (instId instanceof httl.Template) {
	((httl.Template)instId).render($output);
	} else {
	Object $obj33 = (instId instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)instId).openReader()) : instId);
	if ($obj33 instanceof char[]) $output.write(doFilter(filter, $TXT33, formatter.toChars($TXT33, (char[]) $obj33))); else $output.write(doFilter(filter, $TXT33, formatter.toString($TXT33, $obj33)));
	}
	$output.write($TXT35);
	if (taxno instanceof httl.Template) {
	((httl.Template)taxno).render($output);
	} else {
	Object $obj36 = (taxno instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)taxno).openReader()) : taxno);
	if ($obj36 instanceof char[]) $output.write(doFilter(filter, $TXT36, formatter.toChars($TXT36, (char[]) $obj36))); else $output.write(doFilter(filter, $TXT36, formatter.toString($TXT36, $obj36)));
	}
	$output.write($TXT38);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT39);
}

public String getName() {
	return "/vm/home/home.vm";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,784 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_home_home_vm_html_utf_8_zh_CN_1599104103869_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("287");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("441");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("288");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("442");
private static final byte[] $TXT5 = httl.util.ByteCache.getAndRemove("289");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("443");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("290");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("444");
private static final byte[] $TXT9 = httl.util.ByteCache.getAndRemove("291");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("445");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("292");
private static final byte[] $TXT12 = httl.util.ByteCache.getAndRemove("293");
private static final String $TXT13 = httl.util.StringCache.getAndRemove("446");
private static final byte[] $TXT14 = httl.util.ByteCache.getAndRemove("294");
private static final byte[] $TXT15 = httl.util.ByteCache.getAndRemove("295");
private static final byte[] $TXT16 = httl.util.ByteCache.getAndRemove("296");
private static final String $TXT17 = httl.util.StringCache.getAndRemove("447");
private static final byte[] $TXT18 = httl.util.ByteCache.getAndRemove("297");
private static final byte[] $TXT19 = httl.util.ByteCache.getAndRemove("298");
private static final byte[] $TXT20 = httl.util.ByteCache.getAndRemove("299");
private static final String $TXT21 = httl.util.StringCache.getAndRemove("448");
private static final byte[] $TXT22 = httl.util.ByteCache.getAndRemove("300");
private static final byte[] $TXT23 = httl.util.ByteCache.getAndRemove("301");
private static final byte[] $TXT24 = httl.util.ByteCache.getAndRemove("302");
private static final String $TXT25 = httl.util.StringCache.getAndRemove("449");
private static final byte[] $TXT26 = httl.util.ByteCache.getAndRemove("303");
private static final String $TXT27 = httl.util.StringCache.getAndRemove("450");
private static final byte[] $TXT28 = httl.util.ByteCache.getAndRemove("304");
private static final byte[] $TXT29 = httl.util.ByteCache.getAndRemove("305");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app", "instId", "taxno"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_home_home_vm_html_utf_8_zh_CN_1599104103869_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	java.lang.Object instId = (java.lang.Object) $context.get("instId");
	java.lang.Object taxno = (java.lang.Object) $context.get("taxno");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT2, formatter.toBytes($TXT2, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT3);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT4, formatter.toBytes($TXT4, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT5);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT6, formatter.toBytes($TXT6, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT7);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT8, formatter.toBytes($TXT8, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT9);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT10, formatter.toBytes($TXT10, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT11);
	filter = switchFilter("<script", $filter);
	$output.write($TXT12);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT13, formatter.toBytes($TXT13, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT14);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT15);
	filter = switchFilter("<script", $filter);
	$output.write($TXT16);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT17, formatter.toBytes($TXT17, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT18);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT19);
	filter = switchFilter("<script", $filter);
	$output.write($TXT20);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else {
	$output.write(doFilter(filter, $TXT21, formatter.toBytes($TXT21, (app instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)app).openReader()) : app))));
	}
	$output.write($TXT22);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT23);
	filter = switchFilter("<script", $filter);
	$output.write($TXT24);
	if (instId instanceof httl.Template) {
	((httl.Template)instId).render($output);
	} else {
	$output.write(doFilter(filter, $TXT25, formatter.toBytes($TXT25, (instId instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)instId).openReader()) : instId))));
	}
	$output.write($TXT26);
	if (taxno instanceof httl.Template) {
	((httl.Template)taxno).render($output);
	} else {
	$output.write(doFilter(filter, $TXT27, formatter.toBytes($TXT27, (taxno instanceof httl.Resource ? httl.util.IOUtils.readToString(((httl.Resource)taxno).openReader()) : taxno))));
	}
	$output.write($TXT28);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT29);
}

public String getName() {
	return "/vm/home/home.vm";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,788 [DEBUG] httl  - Parsed the template /vm/home/home.vm, eslapsed: 73ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,831 [DEBUG] httl  - Compile template /jes/view/error404.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,850 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_error404_httl_html_utf_8_zh_1599117819342_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("306");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("451");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("307");
private static final char[] $TXT5 = httl.util.CharCache.getAndRemove("308");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("452");
private static final char[] $TXT8 = httl.util.CharCache.getAndRemove("309");
private static final char[] $TXT9 = httl.util.CharCache.getAndRemove("310");
private static final char[] $TXT10 = httl.util.CharCache.getAndRemove("311");
private static final String $TXT11 = httl.util.StringCache.getAndRemove("453");
private static final char[] $TXT13 = httl.util.CharCache.getAndRemove("312");
private static final char[] $TXT14 = httl.util.CharCache.getAndRemove("313");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app"}, new Class[] {java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_error404_httl_html_utf_8_zh_1599117819342_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj2 = app;
	if ($obj2 instanceof char[]) $output.write(formatter.toChars($TXT2, (char[]) $obj2)); else $output.write(formatter.toString($TXT2, $obj2));
	}
	$output.write($TXT4);
	filter = switchFilter("<script", $filter);
	$output.write($TXT5);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj6 = app;
	if ($obj6 instanceof char[]) $output.write(formatter.toChars($TXT6, (char[]) $obj6)); else $output.write(formatter.toString($TXT6, $obj6));
	}
	$output.write($TXT8);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT9);
	filter = switchFilter("<script", $filter);
	$output.write($TXT10);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj11 = app;
	if ($obj11 instanceof char[]) $output.write(formatter.toChars($TXT11, (char[]) $obj11)); else $output.write(formatter.toString($TXT11, $obj11));
	}
	$output.write($TXT13);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT14);
}

public String getName() {
	return "/jes/view/error404.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,865 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_error404_httl_html_utf_8_zh_1599117819342_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("306");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("454");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("307");
private static final byte[] $TXT4 = httl.util.ByteCache.getAndRemove("308");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("455");
private static final byte[] $TXT6 = httl.util.ByteCache.getAndRemove("309");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("310");
private static final byte[] $TXT8 = httl.util.ByteCache.getAndRemove("311");
private static final String $TXT9 = httl.util.StringCache.getAndRemove("456");
private static final byte[] $TXT10 = httl.util.ByteCache.getAndRemove("312");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("313");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app"}, new Class[] {java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_error404_httl_html_utf_8_zh_1599117819342_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT2, app));
	}
	$output.write($TXT3);
	filter = switchFilter("<script", $filter);
	$output.write($TXT4);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT5, app));
	}
	$output.write($TXT6);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT7);
	filter = switchFilter("<script", $filter);
	$output.write($TXT8);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT9, app));
	}
	$output.write($TXT10);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT11);
}

public String getName() {
	return "/jes/view/error404.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,866 [DEBUG] httl  - Parsed the template /jes/view/error404.httl, eslapsed: 35ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:15,896 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=null, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:15,929 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=null, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:16,031 [DEBUG] httl  - Compile template /jes/view/error404.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:16,055 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_error404_httl_html_utf_8_zh_CN_1599117819342_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("314");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("457");
private static final char[] $TXT4 = httl.util.CharCache.getAndRemove("315");
private static final char[] $TXT5 = httl.util.CharCache.getAndRemove("316");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("458");
private static final char[] $TXT8 = httl.util.CharCache.getAndRemove("317");
private static final char[] $TXT9 = httl.util.CharCache.getAndRemove("318");
private static final char[] $TXT10 = httl.util.CharCache.getAndRemove("319");
private static final String $TXT11 = httl.util.StringCache.getAndRemove("459");
private static final char[] $TXT13 = httl.util.CharCache.getAndRemove("320");
private static final char[] $TXT14 = httl.util.CharCache.getAndRemove("321");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app"}, new Class[] {java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_error404_httl_html_utf_8_zh_CN_1599117819342_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj2 = app;
	if ($obj2 instanceof char[]) $output.write(formatter.toChars($TXT2, (char[]) $obj2)); else $output.write(formatter.toString($TXT2, $obj2));
	}
	$output.write($TXT4);
	filter = switchFilter("<script", $filter);
	$output.write($TXT5);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj6 = app;
	if ($obj6 instanceof char[]) $output.write(formatter.toChars($TXT6, (char[]) $obj6)); else $output.write(formatter.toString($TXT6, $obj6));
	}
	$output.write($TXT8);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT9);
	filter = switchFilter("<script", $filter);
	$output.write($TXT10);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openReader(), $output);
	} else {
	Object $obj11 = app;
	if ($obj11 instanceof char[]) $output.write(formatter.toChars($TXT11, (char[]) $obj11)); else $output.write(formatter.toString($TXT11, $obj11));
	}
	$output.write($TXT13);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT14);
}

public String getName() {
	return "/jes/view/error404.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:16,073 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_error404_httl_html_utf_8_zh_CN_1599117819342_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("314");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("460");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("315");
private static final byte[] $TXT4 = httl.util.ByteCache.getAndRemove("316");
private static final String $TXT5 = httl.util.StringCache.getAndRemove("461");
private static final byte[] $TXT6 = httl.util.ByteCache.getAndRemove("317");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("318");
private static final byte[] $TXT8 = httl.util.ByteCache.getAndRemove("319");
private static final String $TXT9 = httl.util.StringCache.getAndRemove("462");
private static final byte[] $TXT10 = httl.util.ByteCache.getAndRemove("320");
private static final byte[] $TXT11 = httl.util.ByteCache.getAndRemove("321");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"app"}, new Class[] {java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_error404_httl_html_utf_8_zh_CN_1599117819342_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object app = (java.lang.Object) $context.get("app");
	$output.write($TXT1);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT2, app));
	}
	$output.write($TXT3);
	filter = switchFilter("<script", $filter);
	$output.write($TXT4);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT5, app));
	}
	$output.write($TXT6);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT7);
	filter = switchFilter("<script", $filter);
	$output.write($TXT8);
	if (app instanceof httl.Template) {
	((httl.Template)app).render($output);
	} else if (app instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)app).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT9, app));
	}
	$output.write($TXT10);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT11);
}

public String getName() {
	return "/jes/view/error404.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:16,074 [DEBUG] httl  - Parsed the template /jes/view/error404.httl, eslapsed: 44ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:45,362 [INFO ] jes.utils.JdbcUtil  - 分页sql:SELECT DATA_DATE, DJOB_ID, SS_ID, RUNNING_PARAMS, CHECK_TIMES, FIRST_CHECK_TIME, LAST_CHECK_TIME,  FEEBACK_FLAG, RUNNING_RETRY_TIMES, LOCK_GROUP_STATUS, PLAN_SERVER, ISSUED_USER, ISSUED_DATE, DJOB_PRIORITY, RUNNING_SERVER, RUNNING_START, RUNNING_END, RUN_STATUS,  RUNNING_LOG, PLAN_RETRY_TIMES,PLAN_START  FROM jes_djob_instance  WHERE (RUN_STATUS='WAITTING' OR RUN_STATUS='RUNNING' ) AND ((PLAN_SERVER IS NULL OR PLAN_SERVER=?) AND PLAN_START<=?) ORDER BY DJOB_PRIORITY, ISSUED_DATE
2020-09-03 15:42:45,387 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 0
2020-09-03 15:42:45,387 [DEBUG] jes.subsystem.s.ClusterService  - doTryRunDjob() - serverName=2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8, djobs=[]
2020-09-03 15:42:48,723 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,724 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsDataImport.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsDataImport.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsDataImportReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsDataImportReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,726 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceApply.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceApply.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoicePreOpen.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoicePreOpen.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceEdit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceEdit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceIssuing.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceIssuing.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoicePrint.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,727 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoicePrint.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceAdditionl.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceAdditionl.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceEdit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceEdit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceAditor.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceAditor.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceAditorReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceAditorReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,728 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=listLockedBill.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=listLockedBill.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFlowingWater.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFlowingWater.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFlowWaterBillEdit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFlowWaterBillEdit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListBillExpress.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListBillExpress.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsQueryListBillExpress.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsQueryListBillExpress.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvalidApplication.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvalidApplication.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvalidReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,729 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvalidReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceInvalid.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceInvalid.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedApplication.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedApplication.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceRed.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceRed.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedIssuing.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedIssuing.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedPrint.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsRedPrint.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceChecking.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,730 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceChecking.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsAuditInvoiceChecking.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsAuditInvoiceChecking.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceCheckingSearch.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceCheckingSearch.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCustomerManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCustomerManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCustomerSearch.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCustomerSearch.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCustomerExamine.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCustomerExamine.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransactionInquire.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransactionInquire.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsBillInquire.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsBillInquire.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,731 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsNegativeIncomeMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsNegativeIncomeMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsShangHaiTaxManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsShangHaiTaxManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTaxPanelManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTaxPanelManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsBeiJingTaxManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsBeiJingTaxManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTaxKeyManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTaxKeyManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsExchangeRateAdm.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsExchangeRateAdm.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsBusinessAdm.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsBusinessAdm.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInsteri.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,732 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInsteri.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsExchangeRateManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsExchangeRateManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceLimitManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceLimitManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsGoodsInfo.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsGoodsInfo.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTaxItem.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTaxItem.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsWorkFlow.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsWorkFlow.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsAccTitle.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsAccTitle.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsAccEntryGroup.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsAccEntryGroup.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListFreeze.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,733 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListFreeze.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListFreezeAudit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListFreezeAudit.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransInfoAction.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransInfoAction.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransInfoActionCheck.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransInfoActionCheck.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcBillIssueList.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcBillIssueList.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcRedApplication.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcRedApplication.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcRedReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcRedReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcInvoiceRed.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcInvoiceRed.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,734 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcRedIssuing.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCiitcRedIssuing.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsQueryCiitcBillIssue.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsQueryCiitcBillIssue.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceWarning.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceWarning.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceStatistics.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceStatistics.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceDistribution.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceDistribution.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceRefund.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsInvoiceRefund.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSellerInfo.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSellerInfo.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSellerManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,735 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSellerManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCACertificateMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsCACertificateMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSignatureMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSignatureMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSFTPPasswordMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSFTPPasswordMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsPdfEncryptionParam.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsPdfEncryptionParam.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSMPTEmailMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsSMPTEmailMaintain.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsParamConfig.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsParamConfig.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFilesUpload.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFilesUpload.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFileUploadReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,736 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsFileUploadReview.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListBillLock.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListBillLock.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListBillLockExamine.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsListBillLockExamine.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransLockManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransLockManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransLockAuditManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=http://${ip}:${port}/jes, values={"ip":"127.0.0.1","port":"8080","protocol":"http"}
2020-09-03 15:42:48,737 [DEBUG] jes.utils.StringUtil  - makeTruthString(String, Map<String,?>) - source=vmsTransLockAuditManage.do?ssId=VMS&menuOfSsId=VMS, values={"ssId":"VMS","jes":"http://127.0.0.1:8080/jes"}
2020-09-03 15:42:48,842 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 1
2020-09-03 15:42:48,842 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[0]
2020-09-03 15:42:49,766 [DEBUG] httl  - Compile template /vm/vms/makeIncoiceManage/vmsDataImport.js, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,783 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_vms_makeIncoiceManage_vmsDataImport_js_html_utf_8_zh_CN_1599103590000_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("322");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("463");
private static final char[] $TXT3 = httl.util.CharCache.getAndRemove("323");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("464");
private static final char[] $TXT5 = httl.util.CharCache.getAndRemove("324");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("465");
private static final char[] $TXT8 = httl.util.CharCache.getAndRemove("325");
private static final char[] $TXT9 = httl.util.CharCache.getAndRemove("326");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"VMS_DATA_IMP_STATUS", "VMS_DATA_AUDIT_STATUS_LIST", "VMS_DATA_IMP_STATUS_LIST"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_vms_makeIncoiceManage_vmsDataImport_js_html_utf_8_zh_CN_1599103590000_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object VMS_DATA_IMP_STATUS = (java.lang.Object) $context.get("VMS_DATA_IMP_STATUS");
	java.lang.Object VMS_DATA_AUDIT_STATUS_LIST = (java.lang.Object) $context.get("VMS_DATA_AUDIT_STATUS_LIST");
	java.lang.Object VMS_DATA_IMP_STATUS_LIST = (java.lang.Object) $context.get("VMS_DATA_IMP_STATUS_LIST");
	filter = switchFilter("<script", $filter);
	$output.write($TXT1);
	$output.write(formatter.toString($TXT2, $httl_spi_methods_CodecMethod.encodeJson(VMS_DATA_AUDIT_STATUS_LIST)));
	$output.write($TXT3);
	$output.write(formatter.toString($TXT4, $httl_spi_methods_CodecMethod.encodeJson(VMS_DATA_IMP_STATUS_LIST)));
	$output.write($TXT5);
	if (VMS_DATA_IMP_STATUS instanceof httl.Template) {
	((httl.Template)VMS_DATA_IMP_STATUS).render($output);
	} else if (VMS_DATA_IMP_STATUS instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)VMS_DATA_IMP_STATUS).openReader(), $output);
	} else {
	Object $obj6 = VMS_DATA_IMP_STATUS;
	if ($obj6 instanceof char[]) $output.write(formatter.toChars($TXT6, (char[]) $obj6)); else $output.write(formatter.toString($TXT6, $obj6));
	}
	$output.write($TXT8);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT9);
}

public String getName() {
	return "/vm/vms/makeIncoiceManage/vmsDataImport.js";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,793 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__vm_vms_makeIncoiceManage_vmsDataImport_js_html_utf_8_zh_CN_1599103590000_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("322");
private static final String $TXT2 = httl.util.StringCache.getAndRemove("466");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("323");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("467");
private static final byte[] $TXT5 = httl.util.ByteCache.getAndRemove("324");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("468");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("325");
private static final byte[] $TXT8 = httl.util.ByteCache.getAndRemove("326");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"VMS_DATA_IMP_STATUS", "VMS_DATA_AUDIT_STATUS_LIST", "VMS_DATA_IMP_STATUS_LIST"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__vm_vms_makeIncoiceManage_vmsDataImport_js_html_utf_8_zh_CN_1599103590000_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.Filter $filter = getFilter($context, "filter");
	httl.spi.Filter filter = $filter;
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object VMS_DATA_IMP_STATUS = (java.lang.Object) $context.get("VMS_DATA_IMP_STATUS");
	java.lang.Object VMS_DATA_AUDIT_STATUS_LIST = (java.lang.Object) $context.get("VMS_DATA_AUDIT_STATUS_LIST");
	java.lang.Object VMS_DATA_IMP_STATUS_LIST = (java.lang.Object) $context.get("VMS_DATA_IMP_STATUS_LIST");
	filter = switchFilter("<script", $filter);
	$output.write($TXT1);
	$output.write(formatter.toBytes($TXT2, $httl_spi_methods_CodecMethod.encodeJson(VMS_DATA_AUDIT_STATUS_LIST)));
	$output.write($TXT3);
	$output.write(formatter.toBytes($TXT4, $httl_spi_methods_CodecMethod.encodeJson(VMS_DATA_IMP_STATUS_LIST)));
	$output.write($TXT5);
	if (VMS_DATA_IMP_STATUS instanceof httl.Template) {
	((httl.Template)VMS_DATA_IMP_STATUS).render($output);
	} else if (VMS_DATA_IMP_STATUS instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)VMS_DATA_IMP_STATUS).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT6, VMS_DATA_IMP_STATUS));
	}
	$output.write($TXT7);
	filter = switchFilter("</script>", $filter);
	$output.write($TXT8);
}

public String getName() {
	return "/vm/vms/makeIncoiceManage/vmsDataImport.js";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,794 [DEBUG] httl  - Parsed the template /vm/vms/makeIncoiceManage/vmsDataImport.js, eslapsed: 31ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,823 [DEBUG] httl  - Compile template /jes/view/nojsp.httl, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,838 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_nojsp_httl_html_utf_8_zh_CN_1599117819359_writer extends httl.spi.translators.templates.WriterTemplate {

private static final char[] $TXT1 = httl.util.CharCache.getAndRemove("327");
private static final char[] $TXT2 = httl.util.CharCache.getAndRemove("328");
private static final char[] $TXT3 = httl.util.CharCache.getAndRemove("329");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("469");
private static final char[] $TXT6 = httl.util.CharCache.getAndRemove("330");
private static final String $TXT7 = httl.util.StringCache.getAndRemove("470");
private static final char[] $TXT9 = httl.util.CharCache.getAndRemove("331");
private static final String $TXT10 = httl.util.StringCache.getAndRemove("471");
private static final char[] $TXT12 = httl.util.CharCache.getAndRemove("332");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"before_content", "content", "after_content"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_nojsp_httl_html_utf_8_zh_CN_1599117819359_writer(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderWriter(httl.Context $context, java.io.Writer $output) throws java.lang.Exception {
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object before_content = (java.lang.Object) $context.get("before_content");
	java.lang.Object content = (java.lang.Object) $context.get("content");
	java.lang.Object after_content = (java.lang.Object) $context.get("after_content");
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")).render($output);
	$output.write($TXT1);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")).render($output);
	$output.write($TXT2);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")).render($output);
	$output.write($TXT3);
	if (before_content instanceof httl.Template) {
	((httl.Template)before_content).render($output);
	} else if (before_content instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)before_content).openReader(), $output);
	} else {
	Object $obj4 = before_content;
	if ($obj4 instanceof char[]) $output.write(formatter.toChars($TXT4, (char[]) $obj4)); else $output.write(formatter.toString($TXT4, $obj4));
	}
	$output.write($TXT6);
	if (content instanceof httl.Template) {
	((httl.Template)content).render($output);
	} else if (content instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)content).openReader(), $output);
	} else {
	Object $obj7 = content;
	if ($obj7 instanceof char[]) $output.write(formatter.toChars($TXT7, (char[]) $obj7)); else $output.write(formatter.toString($TXT7, $obj7));
	}
	$output.write($TXT9);
	if (after_content instanceof httl.Template) {
	((httl.Template)after_content).render($output);
	} else if (after_content instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)after_content).openReader(), $output);
	} else {
	Object $obj10 = after_content;
	if ($obj10 instanceof char[]) $output.write(formatter.toChars($TXT10, (char[]) $obj10)); else $output.write(formatter.toString($TXT10, $obj10));
	}
	$output.write($TXT12);
}

public String getName() {
	return "/jes/view/nojsp.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,849 [DEBUG] httl  - 
================================
package httl.spi.translators.templates;

import java.util.*;
import httl.*;
import httl.util.*;

public final class Template__jes_view_nojsp_httl_html_utf_8_zh_CN_1599117819359_stream extends httl.spi.translators.templates.OutputStreamTemplate {

private static final byte[] $TXT1 = httl.util.ByteCache.getAndRemove("327");
private static final byte[] $TXT2 = httl.util.ByteCache.getAndRemove("328");
private static final byte[] $TXT3 = httl.util.ByteCache.getAndRemove("329");
private static final String $TXT4 = httl.util.StringCache.getAndRemove("472");
private static final byte[] $TXT5 = httl.util.ByteCache.getAndRemove("330");
private static final String $TXT6 = httl.util.StringCache.getAndRemove("473");
private static final byte[] $TXT7 = httl.util.ByteCache.getAndRemove("331");
private static final String $TXT8 = httl.util.StringCache.getAndRemove("474");
private static final byte[] $TXT9 = httl.util.ByteCache.getAndRemove("332");
private static final java.util.Map $VARS = new httl.util.OrderedMap(new String[] {"before_content", "content", "after_content"}, new Class[] {java.lang.Object.class, java.lang.Object.class, java.lang.Object.class});

private final httl.spi.methods.CodecMethod $httl_spi_methods_CodecMethod;
private final httl.spi.methods.TypeMethod $httl_spi_methods_TypeMethod;
private final httl.spi.methods.FileMethod $httl_spi_methods_FileMethod;
private final jes.httl.StaticMethodClass $jes_httl_StaticMethodClass;
private final httl.spi.methods.MessageMethod $httl_spi_methods_MessageMethod;


public Template__jes_view_nojsp_httl_html_utf_8_zh_CN_1599117819359_stream(httl.Engine engine, httl.spi.Interceptor interceptor, httl.spi.Compiler compiler, httl.spi.Switcher filterSwitcher, httl.spi.Switcher formatterSwitcher, httl.spi.Filter filter, httl.spi.Formatter formatter, httl.spi.Converter mapConverter, httl.spi.Converter outConverter, java.util.Map functions, java.util.Map importMacros, httl.Resource resource, httl.Template parent, httl.Node root) {
	super(engine, interceptor, compiler, filterSwitcher, formatterSwitcher, filter, formatter, mapConverter, outConverter, functions, importMacros, resource, parent, root);
	this.$httl_spi_methods_CodecMethod = (httl.spi.methods.CodecMethod) functions.get(httl.spi.methods.CodecMethod.class);
	this.$httl_spi_methods_TypeMethod = (httl.spi.methods.TypeMethod) functions.get(httl.spi.methods.TypeMethod.class);
	this.$httl_spi_methods_FileMethod = (httl.spi.methods.FileMethod) functions.get(httl.spi.methods.FileMethod.class);
	this.$jes_httl_StaticMethodClass = (jes.httl.StaticMethodClass) functions.get(jes.httl.StaticMethodClass.class);
	this.$httl_spi_methods_MessageMethod = (httl.spi.methods.MessageMethod) functions.get(httl.spi.methods.MessageMethod.class);
}

protected void doRenderStream(httl.Context $context, java.io.OutputStream $output) throws java.lang.Exception {
	httl.spi.formatters.MultiFormatter $formatter = getFormatter($context, "formatter");
	httl.spi.formatters.MultiFormatter formatter = $formatter;
	java.lang.Object before_content = (java.lang.Object) $context.get("before_content");
	java.lang.Object content = (java.lang.Object) $context.get("content");
	java.lang.Object after_content = (java.lang.Object) $context.get("after_content");
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/top.httl")).render($output);
	$output.write($TXT1);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/head.httl")).render($output);
	$output.write($TXT2);
	if (($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")) != null) ($httl_spi_methods_FileMethod.include("/jes/view/inc/extjs.httl")).render($output);
	$output.write($TXT3);
	if (before_content instanceof httl.Template) {
	((httl.Template)before_content).render($output);
	} else if (before_content instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)before_content).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT4, before_content));
	}
	$output.write($TXT5);
	if (content instanceof httl.Template) {
	((httl.Template)content).render($output);
	} else if (content instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)content).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT6, content));
	}
	$output.write($TXT7);
	if (after_content instanceof httl.Template) {
	((httl.Template)after_content).render($output);
	} else if (after_content instanceof httl.Resource) {
	httl.util.IOUtils.copy(((httl.Resource)after_content).openStream(), $output);
	} else {
	$output.write(formatter.toBytes($TXT8, after_content));
	}
	$output.write($TXT9);
}

public String getName() {
	return "/jes/view/nojsp.httl";
}

public java.util.Map getVariables() {
	return $VARS;
}

protected java.util.Map getMacroTypes() {
	return new httl.util.OrderedMap(new String[0], new Class[0]);
}

public boolean isMacro() {
	return false;
}

public int getOffset() {
	return 0;
}

}
================================
, httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:49,850 [DEBUG] httl  - Parsed the template /jes/view/nojsp.httl, eslapsed: 28ms., httl: 1.0-SNAPSHOT, jvm: 1.8.0_151, os: Windows 7 6.1 amd64
2020-09-03 15:42:50,817 [DEBUG] jes.ioc.s.jesmvc.SessionKeeperService  - Session Keeper:2020-09-03 15:42:50
2020-09-03 15:43:03,608 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 4
2020-09-03 15:43:03,609 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[jes.ioc.s.beehive.BhTaskTemplateFactoryService, jes.ioc.s.dna.DnaIndexCalcService, jes.ioc.s.owl.OwlJobFactoryService, jes.ioc.s.vine.AutoDeployRunner]
2020-09-03 15:43:03,609 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner can run on 2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8,taskContainer:[,jes.ioc.s.beehive.BhTaskTemplateFactoryService,jes.ioc.s.dna.DnaIndexCalcService,jes.ioc.s.owl.OwlJobFactoryService,jes.ioc.s.vine.AutoDeployRunner].
2020-09-03 15:43:03,609 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner running on on 2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8...
2020-09-03 15:43:03,609 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner开始获取任务实例...
2020-09-03 15:43:03,609 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.beehive.BhTaskTemplateFactoryService
2020-09-03 15:43:03,609 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:43:03,792 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:fxbb,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=null, startTime=00:00]
2020-09-03 15:43:03,792 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:test,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=null, startTime=05:00]
2020-09-03 15:43:03,792 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:555555555,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=null, startTime=05:00]
2020-09-03 15:43:03,792 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.dna.DnaIndexCalcService
2020-09-03 15:43:03,792 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:43:03,888 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.owl.OwlJobFactoryService
2020-09-03 15:43:03,888 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:43:03,931 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.owl.OwlJobFactoryService的任务:OWL-JOB:1111,详情:AbstractScheduledTask [taskId=OWL-JOB:1111, frequenceType=day, offsetDay=0, status=waiting, minCheckDate=null, startTime=18:25]
2020-09-03 15:43:03,931 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.vine.AutoDeployRunner
2020-09-03 15:43:03,931 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:43:05,123 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner获取任务实例完成.
2020-09-03 15:43:05,124 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt-minCheckDate passed:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=2020-09-04, startTime=00:00]
2020-09-03 15:43:05,124 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:fxbb][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=2020-09-04, startTime=00:00]
2020-09-03 15:43:05,124 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt-minCheckDate passed:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:43:05,124 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:test][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:43:05,124 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt-minCheckDate passed:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:43:05,124 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:555555555][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:43:07,704 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:43:07,835 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:43:07,901 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:43:07,901 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt getOffsetDay[OWL-JOB:1111]:2020-09-03 0
2020-09-03 15:43:07,901 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt Frequence:[OWL-JOB:1111]:Frequence [dataDate=2020-09-03, type=day]
2020-09-03 15:43:07,901 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt compareToHHMM:[OWL-JOB:1111]:18:25
2020-09-03 15:43:07,901 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[OWL-JOB:1111][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=OWL-JOB:1111, frequenceType=day, offsetDay=0, status=waiting, minCheckDate=null, startTime=18:25]
2020-09-03 15:43:45,388 [INFO ] jes.utils.JdbcUtil  - 分页sql:SELECT DATA_DATE, DJOB_ID, SS_ID, RUNNING_PARAMS, CHECK_TIMES, FIRST_CHECK_TIME, LAST_CHECK_TIME,  FEEBACK_FLAG, RUNNING_RETRY_TIMES, LOCK_GROUP_STATUS, PLAN_SERVER, ISSUED_USER, ISSUED_DATE, DJOB_PRIORITY, RUNNING_SERVER, RUNNING_START, RUNNING_END, RUN_STATUS,  RUNNING_LOG, PLAN_RETRY_TIMES,PLAN_START  FROM jes_djob_instance  WHERE (RUN_STATUS='WAITTING' OR RUN_STATUS='RUNNING' ) AND ((PLAN_SERVER IS NULL OR PLAN_SERVER=?) AND PLAN_START<=?) ORDER BY DJOB_PRIORITY, ISSUED_DATE
2020-09-03 15:43:47,981 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 0
2020-09-03 15:43:47,981 [DEBUG] jes.subsystem.s.ClusterService  - doTryRunDjob() - serverName=2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8, djobs=[]
2020-09-03 15:43:56,780 [DEBUG] jes.ioc.s.jesmvc.SessionKeeperService  - Session Keeper:2020-09-03 15:43:56
2020-09-03 15:44:03,150 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result-size: 4
2020-09-03 15:44:03,151 [DEBUG] jes.dao.BigResultsetMonitor  - sql-query-result(o): 
[jes.ioc.s.beehive.BhTaskTemplateFactoryService, jes.ioc.s.dna.DnaIndexCalcService, jes.ioc.s.owl.OwlJobFactoryService, jes.ioc.s.vine.AutoDeployRunner]
2020-09-03 15:44:03,151 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner can run on 2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8,taskContainer:[,jes.ioc.s.beehive.BhTaskTemplateFactoryService,jes.ioc.s.dna.DnaIndexCalcService,jes.ioc.s.owl.OwlJobFactoryService,jes.ioc.s.vine.AutoDeployRunner].
2020-09-03 15:44:03,151 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner running on on 2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8...
2020-09-03 15:44:03,151 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner开始获取任务实例...
2020-09-03 15:44:03,151 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.beehive.BhTaskTemplateFactoryService
2020-09-03 15:44:03,151 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:44:03,284 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:fxbb,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=null, startTime=00:00]
2020-09-03 15:44:03,284 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:test,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=null, startTime=05:00]
2020-09-03 15:44:03,284 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.beehive.BhTaskTemplateFactoryService的任务:BIFROST(BEEHIVE)-TASK:555555555,详情:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=null, startTime=05:00]
2020-09-03 15:44:03,284 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.dna.DnaIndexCalcService
2020-09-03 15:44:03,284 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:44:03,397 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.owl.OwlJobFactoryService
2020-09-03 15:44:03,397 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:44:03,594 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取jes.ioc.s.owl.OwlJobFactoryService的任务:OWL-JOB:1111,详情:AbstractScheduledTask [taskId=OWL-JOB:1111, frequenceType=day, offsetDay=0, status=waiting, minCheckDate=null, startTime=18:25]
2020-09-03 15:44:03,594 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在获取SchedulerTaskContainer的任务实例,jes.ioc.s.vine.AutoDeployRunner
2020-09-03 15:44:03,594 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner正在检查任务所属Server,ServerName:[2c202c81-5445-4c2c-acc8-6f5dd8a9fdd8];myContainers:["jes.ioc.s.beehive.BhTaskTemplateFactoryService","jes.ioc.s.dna.DnaIndexCalcService","jes.ioc.s.owl.OwlJobFactoryService","jes.ioc.s.vine.AutoDeployRunner"]
2020-09-03 15:44:03,762 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - JES.SchedulerTaskRunner获取任务实例完成.
2020-09-03 15:44:03,762 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt-minCheckDate passed:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=2020-09-04, startTime=00:00]
2020-09-03 15:44:03,762 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:fxbb][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:fxbb, frequenceType=month, offsetDay=0, status=waiting, minCheckDate=2020-09-04, startTime=00:00]
2020-09-03 15:44:03,762 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt-minCheckDate passed:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:44:03,762 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:test][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:test, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:44:03,762 [DEBUG] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt-minCheckDate passed:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:44:03,762 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[BIFROST(BEEHIVE)-TASK:555555555][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=BIFROST(BEEHIVE)-TASK:555555555, frequenceType=month, offsetDay=1, status=waiting, minCheckDate=2020-09-04, startTime=05:00]
2020-09-03 15:44:03,780 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:44:03,947 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:44:03,979 [DEBUG] jes.sys.entity.owl.OwlRuntimeJob  - getOffsetDay===owlJobId:1111,calendarId:,offsetDay:0
2020-09-03 15:44:03,979 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt getOffsetDay[OWL-JOB:1111]:2020-09-03 0
2020-09-03 15:44:03,979 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt Frequence:[OWL-JOB:1111]:Frequence [dataDate=2020-09-03, type=day]
2020-09-03 15:44:03,979 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - checkCanRunIt compareToHHMM:[OWL-JOB:1111]:18:25
2020-09-03 15:44:03,979 [INFO ] jes.subsystem.s.SchedulerTaskRunner  - 检查JAVA环境中任务实例运行状态[OWL-JOB:1111][null][waiting]  dataDate:null,detail:AbstractScheduledTask [taskId=OWL-JOB:1111, frequenceType=day, offsetDay=0, status=waiting, minCheckDate=null, startTime=18:25]
